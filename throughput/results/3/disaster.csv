Q21,724684.0,->  Nested Loop Semi Join  (cost=2406.31..2882053.24 rows=1 width=34) (actual time=35.386..40892.547 rows=724684 loops=1)
Q18,402299.8,->  GroupAggregate  (cost=10203304.34..11033047.71 rows=30172486 width=39) (actual time=73011.368..73011.605 rows=75 loops=1)
Q3,317326.4,->  Sort  (cost=2573250.77..2581183.93 rows=3173264 width=20) (actual time=33565.539..33565.541 rows=10 loops=1)
Q18,100599.3,->  Hash Join  (cost=2188173.10..2804242.14 rows=7544952 width=39) (actual time=47115.070..54088.655 rows=75 loops=1)
Q18,100599.3,->  Hash Join  (cost=2119145.10..2622039.86 rows=7544952 width=20) (actual time=46209.082..53182.344 rows=75 loops=1)
Q18,100599.3,->  Hash  (cost=2804242.14..2804242.14 rows=7544952 width=39) (actual time=54088.851..54088.851 rows=75 loops=1)
Q18,57471.4,->  Sort  (cost=10203304.34..10278735.56 rows=30172486 width=39) (actual time=73011.358..73011.393 rows=525 loops=1)
Q18,57471.4,->  Hash Join  (cost=2898554.04..5629835.74 rows=30172486 width=39) (actual time=54229.939..73010.622 rows=525 loops=1)
Q18,54162.1,->  Hash  (cost=2068368.12..2068368.12 rows=4062158 width=4) (actual time=46060.283..46060.283 rows=75 loops=1)
Q18,54162.1,->  HashAggregate  (cost=1976969.56..2027746.54 rows=4062158 width=8) (actual time=40331.000..46060.053 rows=75 loops=1)
Q21,40968.0,->  Nested Loop Anti Join  (cost=2406.88..2882055.03 rows=1 width=26) (actual time=35.764..44117.763 rows=40968 loops=1)
Q10,28843.2,->  Sort  (cost=2296400.80..2297842.97 rows=576865 width=175) (actual time=34828.486..34828.487 rows=20 loops=1)
Q9,23873.5,->  Sort  (cost=1200813.44..1200813.78 rows=137 width=46) (actual time=116044.934..116738.415 rows=3270670 loops=1)
Q9,23873.5,->  Nested Loop  (cost=66924.69..1200804.44 rows=137 width=24) (actual time=1028.190..106352.653 rows=3270670 loops=1)
Q9,23873.5,->  Nested Loop  (cost=66924.26..1200738.05 rows=137 width=24) (actual time=1028.169..68881.181 rows=3270670 loops=1)
Q9,23873.5,->  Nested Loop  (cost=66923.96..1200693.84 rows=137 width=28) (actual time=1028.159..57766.787 rows=3270670 loops=1)
Q9,23873.5,->  Hash Join  (cost=66926.25..1200808.57 rows=137 width=46) (actual time=1028.247..109804.448 rows=3270670 loops=1)
Q2,4665.0,->  Merge Join  (cost=465687.75..887113.96 rows=1 width=190) (actual time=8403.239..10888.152 rows=4665 loops=1)
Q21,4095.0,->  HashAggregate  (cost=2882055.03..2882055.04 rows=1 width=26) (actual time=44185.081..44186.213 rows=4095 loops=1)
Q15,3706.0,->  Subquery Scan on revenue3  (cost=2000933.69..2001017.08 rows=3706 width=12) (actual time=57418.235..57419.026 rows=1 loops=1)
Q15,3706.0,->  Sort  (cost=2001236.76..2001246.03 rows=3706 width=12) (actual time=57419.045..57419.046 rows=1 loops=1)
Q15,3706.0,Merge Join  (cost=3985355.12..3990451.92 rows=3706 width=79) (actual time=57422.372..57422.374 rows=1 loops=1)
Q15,3706.0,->  HashAggregate  (cost=2000933.69..2000980.02 rows=3706 width=12) (actual time=57418.234..57419.025 rows=1 loops=1)
Q7,763.7,Sort  (cost=2118894.33..2118901.97 rows=3055 width=64) (actual time=26302.766..26302.766 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2118671.67..2118717.49 rows=3055 width=64) (actual time=26302.703..26302.711 rows=4 loops=1)
Q8,365.0,Sort  (cost=1785129.54..1785131.36 rows=730 width=38) (actual time=15592.982..15592.983 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1785082.05..1785094.82 rows=730 width=38) (actual time=15592.947..15592.948 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2882055.05..2882055.06 rows=1 width=26) (actual time=44187.371..44187.378 rows=100 loops=1)
Q21,100.0,Limit  (cost=2882055.05..2882055.06 rows=1 width=26) (actual time=44187.373..44187.394 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=887113.97..887113.98 rows=1 width=190) (actual time=10893.182..10893.194 rows=100 loops=1)
Q2,100.0,Limit  (cost=887113.97..887113.98 rows=1 width=190) (actual time=10893.184..10893.207 rows=100 loops=1)
Q11,34.2,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8705.928..8707.091 rows=9348 loops=1)
Q11,34.2,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8592.828..8700.006 rows=9348 loops=1)
Q3,28.0,->  HashAggregate  (cost=2472945.04..2504677.68 rows=3173264 width=20) (actual time=33505.178..33544.657 rows=113031 loops=1)
Q15,26.9,->  HashAggregate  (cost=1984034.67..1984071.73 rows=3706 width=12) (actual time=28623.517..28657.738 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=752076)
Q14,14.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7659.26 rows=751126 width=0) (actual time=120.301..120.301 rows=10739200 loops=1)
Q15,12.5,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.092..2.546 rows=7995 loops=1)
Q3,10.6,->  Hash Join  (cost=773247.57..2425346.08 rows=3173264 width=20) (actual time=8618.140..33241.314 rows=298441 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2403.21 rows=318827 width=0) (actual time=34.737..34.737 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.021..0.114 rows=8 loops=435800)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.625..3.625 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.057..4.057 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.268..0.268 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.269..0.269 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.290..0.290 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1957950.16..1957950.22 rows=25 width=34) (actual time=18311.477..18311.477 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1957949.33..1957949.58 rows=25 width=34) (actual time=18311.436..18311.439 rows=5 loops=1)
Q4,5.0,Sort  (cost=1482662.87..1482662.88 rows=1 width=16) (actual time=14436.450..14436.450 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=573631)
Q4,5.0,->  HashAggregate  (cost=1482662.85..1482662.86 rows=1 width=16) (actual time=14436.402..14436.403 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=724684)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5780.00 rows=574000 width=0) (actual time=27.357..27.357 rows=2538240 loops=1)
Q13,4.3,Sort  (cost=854766.39..854766.89 rows=200 width=8) (actual time=32175.462..32175.465 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=854756.75..854758.75 rows=200 width=8) (actual time=32175.389..32175.398 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5881.91 rows=584191 width=0) (actual time=27.683..27.683 rows=2561280 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.011..0.011 rows=1 loops=1198639)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=456436)
Q17,3.6,->  Nested Loop  (cost=78.42..112501.15 rows=19784 width=4) (actual time=1.644..203.490 rows=5454 loops=1)
Q15,3.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..294349.78 rows=39226904 width=0) (actual time=122.459..122.459 rows=10782720 loops=1)
Q15,3.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..294349.78 rows=39226904 width=0) (actual time=121.430..121.430 rows=10782720 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5924.06..1481887.18 rows=155135 width=16) (actual time=27.560..14135.541 rows=526154 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.034 rows=3 loops=2032)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..61374.02 rows=8177869 width=0) (actual time=30.514..30.514 rows=2538240 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..248420.10 rows=33102946 width=0) (actual time=119.812..119.812 rows=10824960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.355..0.436 rows=3 loops=21871)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55261.16 rows=7362821 width=0) (actual time=27.635..27.635 rows=2574080 loops=1)
Q22,2.3,Sort  (cost=694671.76..694671.76 rows=3 width=20) (actual time=8311.872..8311.873 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641787.74..641787.78 rows=3 width=20) (actual time=8311.823..8311.826 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.059..0.079 rows=2 loops=6284)
Q20,2.0,->  Nested Loop  (cost=754.49..12023795.26 rows=29578 width=4) (actual time=38.942..9906.842 rows=59403 loops=1)
Q20,2.0,->  Hash  (cost=12023795.26..12023795.26 rows=29578 width=4) (actual time=9942.826..9942.826 rows=59403 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.217..4.217 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403305.61..404785.25 rows=591856 width=40) (actual time=9073.710..9235.875 rows=1189239 loops=1)
Q16,2.0,->  Hash Join  (cost=54685.19..346561.75 rows=591856 width=40) (actual time=1163.406..5436.448 rows=1189239 loops=1)
Q12,2.0,Sort  (cost=3068223.82..3068223.82 rows=1 width=27) (actual time=35894.715..35894.715 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3068223.80..3068223.81 rows=1 width=27) (actual time=35894.667..35894.667 rows=2 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2354169.49 rows=394999 width=38) (actual time=35.315..35636.320 rows=752076 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1927173.04 rows=810997 width=34) (actual time=35.219..27762.137 rows=1555785 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.304..2737.234 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=347176.77..2260860.36 rows=576865 width=175) (actual time=7335.012..32352.203 rows=1149696 loops=1)
Q10,1.9,->  Hash Join  (cost=347175.21..2252926.90 rows=576865 width=153) (actual time=7334.980..31852.520 rows=1149696 loops=1)
Q10,1.9,->  Hash Join  (cost=278147.21..2175245.93 rows=576865 width=12) (actual time=5813.578..29586.879 rows=1149696 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1840626.77 rows=20274927 width=8) (actual time=0.014..19947.438 rows=37966096 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.262 rows=56 loops=1)
Q20,1.5,Sort  (cost=12026608.78..12026611.74 rows=1183 width=51) (actual time=9973.276..9973.381 rows=1830 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12024207.99..12026548.40 rows=1183 width=51) (actual time=9943.298..9971.690 rows=1830 loops=1)
Q1,1.5,Sort  (cost=4169261.40..4169261.41 rows=6 width=20) (actual time=90784.324..90784.324 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4169261.22..4169261.32 rows=6 width=20) (actual time=90784.274..90784.275 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2275281.98..2281050.63 rows=576865 width=175) (actual time=34475.596..34689.912 rows=381720 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.187..4.187 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2873.60 rows=139862 width=0) (actual time=455.771..455.771 rows=190831 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2908.57..41857.95 rows=139862 width=24) (actual time=464.635..619.079 rows=190831 loops=1)
Q18,1.3,Limit  (cost=10203304.34..10203307.09 rows=100 width=39) (actual time=73011.370..73011.613 rows=75 loops=1)
Q9,1.2,GroupAggregate  (cost=1200813.44..1200818.23 rows=137 width=46) (actual time=116055.405..118994.651 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91455.62 rows=9130762 width=0) (actual time=124.604..124.604 rows=10676480 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=112112 width=4) (actual time=0.011..986.432 rows=108950 loops=1)
Q9,1.0,->  Hash Join  (cost=66923.40..352365.88 rows=448448 width=16) (actual time=1028.070..7113.512 rows=435800 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=112112 width=4) (actual time=1027.554..1027.554 rows=108950 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.744..2621.611 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=428.84..1736903.01 rows=126193 width=20) (actual time=6.960..12546.730 rows=123372 loops=1)
Q8,1.0,->  Nested Loop  (cost=428.41..1533159.37 rows=416114 width=16) (actual time=6.884..6617.435 rows=407296 loops=1)
Q8,1.0,->  Nested Loop  (cost=38759.28..1784102.47 rows=25239 width=16) (actual time=2729.388..15506.920 rows=24762 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.23 rows=31 width=20) (actual time=0.033..0.473 rows=30 loops=13566)
Q8,1.0,->  Hash Join  (cost=38760.85..1784577.27 rows=25239 width=38) (actual time=2729.433..15549.304 rows=24762 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.99..1775958.77 rows=25239 width=16) (actual time=2729.370..15353.185 rows=24762 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2719.812..2719.812 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..424.38 rows=13860 width=0) (actual time=4.551..4.551 rows=13566 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=427.84..28754.73 rows=13860 width=4) (actual time=6.830..54.995 rows=13566 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.655..514.717 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.006..4130.506 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2105934.40 rows=1456067 width=42) (actual time=843.083..25473.988 rows=1460630 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2117762.73 rows=60596 width=64) (actual time=882.224..26207.790 rows=58562 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=842.940..10987.959 rows=1198639 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.051..798.219 rows=119964 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..36.977 rows=7963 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=842.407..842.407 rows=119964 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.043..39.043 rows=7963 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91654.29..1364639.43 rows=794652 width=8) (actual time=125.438..34463.427 rows=793663 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.755..2869.203 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=100285.47..1938154.39 rows=1821200 width=46) (actual time=3044.116..17328.017 rows=1827218 loops=1)
Q5,1.0,->  Hash Join  (cost=104964.47..1957220.86 rows=72847 width=34) (actual time=3098.112..18227.851 rows=73216 loops=1)
Q5,1.0,->  Hash Join  (cost=100284.91..489820.93 rows=455408 width=38) (actual time=3044.095..9995.788 rows=456436 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=3011.004..3011.004 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=61943.28..438386.31 rows=2277042 width=8) (actual time=30.733..5920.322 rows=2277888 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.097..561.591 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5923.50..268308.50 rows=574000 width=20) (actual time=27.531..6020.211 rows=573631 loops=1)
Q3,1.0,->  Hash Join  (cost=106715.51..498290.41 rows=1460906 width=12) (actual time=748.195..7873.361 rows=1445386 loops=1)
Q3,1.0,->  Hash  (cost=498290.41..498290.41 rows=1460906 width=12) (actual time=8486.074..8486.074 rows=1445386 loops=1)
Q3,1.0,->  Hash  (cost=45893.33..45893.33 rows=297625 width=4) (actual time=717.870..717.870 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6820.61 rows=297625 width=0) (actual time=76.140..76.140 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57101.86..406457.12 rows=7362821 width=16) (actual time=27.802..4361.954 rows=7246039 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=256695.83..1752925.66 rows=33102946 width=12) (actual time=120.564..18873.602 rows=32508262 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6895.02..45893.33 rows=297625 width=4) (actual time=85.073..612.947 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.013..3581.349 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=7519.122..7519.122 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597810.90..641348.21 rows=58604 width=20) (actual time=8029.073..8288.846 rows=63875 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6547.05 rows=381341 width=0) (actual time=82.931..82.931 rows=381669 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6642.38..51930.58 rows=381341 width=4) (actual time=91.747..330.533 rows=381669 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.327..33.825 rows=4095 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=35.132..35.132 rows=4095 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.314..33.048 rows=4095 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=8402.791..8528.722 rows=1603891 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.305..133.171 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7956 width=30) (actual time=0.019..1528.445 rows=7788 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=144.142..7224.678 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=144.008..144.008 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.255..25.753 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.304..27.031 rows=3988 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=34.047..34.047 rows=21871 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.286..26.380 rows=3988 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=38.022..343.401 rows=21871 loops=1)
Q19,1.0,->  Nested Loop  (cost=12870.85..634461.86 rows=1131 width=8) (actual time=34.066..2581.006 rows=1168 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.193..4.193 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.27 rows=8057 width=0) (actual time=3.557..3.557 rows=7858 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.75 rows=8002 width=0) (actual time=3.756..3.756 rows=7954 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.55 rows=7985 width=0) (actual time=3.798..3.798 rows=7816 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12870.29..26650.36 rows=4795 width=30) (actual time=33.546..428.456 rows=4812 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=16) (actual time=0.006..3141.515 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1675244.71 rows=60344971 width=8) (actual time=0.035..9265.540 rows=60045826 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675244.71 rows=60344971 width=8) (actual time=0.035..8057.808 rows=60045826 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.040 rows=30 loops=2032)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.040 rows=30 loops=2032)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.16 rows=1973 width=0) (actual time=0.973..0.973 rows=2032 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.65..6545.58 rows=1973 width=4) (actual time=1.315..36.759 rows=2032 loops=1)
Q16,1.0,Sort  (cost=413028.74..413098.10 rows=27744 width=40) (actual time=9901.228..9904.648 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50969.86..50969.86 rows=295928 width=40) (actual time=1160.671..1160.671 rows=297465 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403305.61..410981.25 rows=27744 width=40) (actual time=9073.765..9841.701 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2477.19..50969.86 rows=295928 width=40) (actual time=34.800..1037.126 rows=297465 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=294913.08..1961502.64 rows=2253203 width=12) (actual time=122.186..26368.424 rows=2249605 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=294913.08..1961502.64 rows=2253203 width=12) (actual time=123.219..26424.053 rows=2249605 loops=1)
Q14,1.0,->  Hash Join  (cost=93369.04..1140103.77 rows=751126 width=29) (actual time=1409.917..25121.589 rows=748818 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7847.04..1043314.88 rows=751126 width=12) (actual time=121.053..23050.674 rows=748818 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15042588 width=8) (actual time=0.016..7771.316 rows=14852900 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742043.81 rows=15042588 width=8) (actual time=2219.276..20934.474 rows=15352919 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409719.23 rows=15239923 width=20) (actual time=0.016..5029.844 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2453693.84 rows=293573 width=15) (actual time=0.232..24565.710 rows=312591 loops=1)
Q12,1.0,->  Hash Join  (cost=600218.27..3063086.27 rows=293573 width=27) (actual time=10629.417..35561.728 rows=312591 loops=1)
Q12,1.0,->  Hash  (cost=409719.23..409719.23 rows=15239923 width=20) (actual time=10555.622..10555.622 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.330..36.060 rows=4004 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.285..23.828 rows=4004 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.730..3799.296 rows=320320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=37.047..4372.050 rows=320320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=37.006..37.006 rows=4004 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.675..24.675 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.258..23.165 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.309..35.443 rows=4004 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1822476.38 rows=58669621 width=20) (actual time=0.011..19526.941 rows=58547618 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1835174.68 rows=14974772 width=12) (actual time=0.040..20402.383 rows=14822651 loops=1)
Q10,1.0,->  Hash  (cost=270844.82..270844.82 rows=584191 width=8) (actual time=5808.578..5808.578 rows=574511 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6027.95..270844.82 rows=584191 width=8) (actual time=27.846..5594.774 rows=574511 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.014..0.014 rows=0 loops=407296)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1555785)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..126.75 rows=1 width=16) (actual time=0.408..0.446 rows=0 loops=4812)
Q19,,->  BitmapOr  (cost=12870.29..12870.29 rows=4798 width=0) (actual time=29.648..29.648 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6281.19..6281.19 rows=2407 width=0) (actual time=8.499..8.499 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4300.27..4300.27 rows=1599 width=0) (actual time=8.746..8.746 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.33..2288.33 rows=792 width=0) (actual time=8.791..8.791 rows=0 loops=1)
