Q21,704248.0,->  Nested Loop Semi Join  (cost=2406.31..2844929.13 rows=1 width=34) (actual time=55.443..38470.136 rows=704248 loops=1)
Q3,312984.7,->  Sort  (cost=2539584.23..2547408.85 rows=3129847 width=20) (actual time=41959.277..41959.278 rows=10 loops=1)
Q18,300826.8,->  GroupAggregate  (cost=10173035.39..11000309.14 rows=30082682 width=39) (actual time=70934.757..70935.207 rows=100 loops=1)
Q18,67770.0,->  Hash Join  (cost=2182289.01..2796643.82 rows=7522476 width=39) (actual time=46027.313..51604.028 rows=111 loops=1)
Q18,67770.0,->  Hash Join  (cost=2113261.01..2614778.68 rows=7522476 width=20) (actual time=45035.622..50612.040 rows=111 loops=1)
Q18,67770.0,->  Hash  (cost=2796643.82..2796643.82 rows=7522476 width=39) (actual time=51604.254..51604.254 rows=111 loops=1)
Q18,42913.9,->  Sort  (cost=10173035.39..10248242.09 rows=30082682 width=39) (actual time=70934.748..70934.830 rows=701 loops=1)
Q21,39548.0,->  Nested Loop Anti Join  (cost=2406.88..2844930.92 rows=1 width=26) (actual time=59.091..41430.294 rows=39548 loops=1)
Q18,38716.4,->  Hash Join  (cost=2890674.77..5613827.30 rows=30082682 width=39) (actual time=51640.513..70933.647 rows=777 loops=1)
Q18,36596.0,->  Hash  (cost=2062484.03..2062484.03 rows=4062158 width=4) (actual time=44908.339..44908.339 rows=111 loops=1)
Q18,36596.0,->  HashAggregate  (cost=1971085.48..2021862.45 rows=4062158 width=8) (actual time=39153.352..44908.105 rows=111 loops=1)
Q10,28801.4,->  Sort  (cost=2293022.71..2294462.78 rows=576028 width=175) (actual time=34702.164..34702.169 rows=20 loops=1)
Q9,27632.0,->  Sort  (cost=1088235.88..1088236.18 rows=118 width=46) (actual time=118563.845..119223.002 rows=3260583 loops=1)
Q9,27632.0,->  Nested Loop  (cost=66724.49..1088228.05 rows=118 width=24) (actual time=1409.075..108567.589 rows=3260583 loops=1)
Q9,27632.0,->  Nested Loop  (cost=66724.06..1088170.86 rows=118 width=24) (actual time=1409.056..68583.228 rows=3260583 loops=1)
Q9,27632.0,->  Nested Loop  (cost=66723.76..1088132.78 rows=118 width=28) (actual time=1409.046..57034.404 rows=3260583 loops=1)
Q9,27632.0,->  Hash Join  (cost=66726.05..1088231.82 rows=118 width=46) (actual time=1409.129..112370.876 rows=3260583 loops=1)
Q2,4618.0,->  Merge Join  (cost=465687.75..889898.62 rows=1 width=190) (actual time=6924.064..8860.716 rows=4618 loops=1)
Q21,3995.0,->  HashAggregate  (cost=2844930.92..2844930.93 rows=1 width=26) (actual time=41487.288..41488.391 rows=3995 loops=1)
Q15,3676.0,->  Subquery Scan on revenue1  (cost=2019829.70..2019912.41 rows=3676 width=12) (actual time=40307.773..40319.209 rows=1 loops=1)
Q15,3676.0,->  Sort  (cost=2020130.10..2020139.29 rows=3676 width=12) (actual time=40319.229..40319.230 rows=1 loops=1)
Q15,3676.0,Merge Join  (cost=4023350.07..4028446.41 rows=3676 width=79) (actual time=40340.544..40340.546 rows=1 loops=1)
Q15,3676.0,->  HashAggregate  (cost=2019829.70..2019875.65 rows=3676 width=12) (actual time=40307.771..40319.206 rows=1 loops=1)
Q7,763.7,Sort  (cost=2123079.45..2123087.09 rows=3055 width=64) (actual time=27492.985..27492.985 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2122856.79..2122902.61 rows=3055 width=64) (actual time=27492.921..27492.931 rows=4 loops=1)
Q8,365.0,Sort  (cost=1759292.91..1759294.74 rows=730 width=38) (actual time=20097.867..20097.867 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1759245.42..1759258.19 rows=730 width=38) (actual time=20097.830..20097.831 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2844930.94..2844930.95 rows=1 width=26) (actual time=41489.515..41489.523 rows=100 loops=1)
Q21,100.0,Limit  (cost=2844930.94..2844930.95 rows=1 width=26) (actual time=41489.517..41489.535 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889898.63..889898.63 rows=1 width=190) (actual time=8865.565..8865.586 rows=100 loops=1)
Q2,100.0,Limit  (cost=889898.63..889898.63 rows=1 width=190) (actual time=8865.567..8865.597 rows=100 loops=1)
Q11,32.9,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8564.372..8565.862 rows=9722 loops=1)
Q11,32.9,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8465.177..8558.942 rows=9722 loops=1)
Q3,27.6,->  HashAggregate  (cost=2440650.90..2471949.37 rows=3129847 width=20) (actual time=41890.967..41938.298 rows=113105 loops=1)
Q15,27.2,->  HashAggregate  (cost=2003136.96..2003173.72 rows=3676 width=12) (actual time=19645.162..19684.221 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=730938)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7879.91 rows=773191 width=0) (actual time=144.742..144.742 rows=10771200 loops=1)
Q3,10.4,->  Hash Join  (cost=763385.53..2393703.19 rows=3129847 width=20) (actual time=11417.249..41586.183 rows=298558 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2411.76 rows=319967 width=0) (actual time=34.771..34.771 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.91 rows=1 width=24) (actual time=0.021..0.111 rows=8 loops=434512)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.686..3.686 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=5.118..5.118 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.234..0.234 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.245..0.245 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1964004.78..1964004.85 rows=25 width=34) (actual time=20095.380..20095.381 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1964003.95..1964004.20 rows=25 width=34) (actual time=20095.335..20095.335 rows=5 loops=1)
Q4,5.0,Sort  (cost=1501679.31..1501679.31 rows=1 width=16) (actual time=13211.945..13211.946 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.009..0.009 rows=1 loops=574177)
Q4,5.0,->  HashAggregate  (cost=1501679.29..1501679.30 rows=1 width=16) (actual time=13211.894..13211.896 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=704248)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5878.17 rows=583817 width=0) (actual time=30.256..30.256 rows=2576640 loops=1)
Q13,4.3,Sort  (cost=849751.55..849752.05 rows=200 width=8) (actual time=33354.658..33354.660 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=849741.91..849743.91 rows=200 width=8) (actual time=33354.584..33354.593 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5870.36 rows=583036 width=0) (actual time=27.545..27.545 rows=2558720 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.012..0.013 rows=1 loops=1196870)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.016..0.018 rows=4 loops=454938)
Q17,3.5,->  Nested Loop  (cost=82.55..113236.86 rows=19994 width=4) (actual time=1.635..221.386 rows=5613 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=6024.69..1500901.98 rows=155462 width=16) (actual time=30.523..12924.817 rows=526417 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.035 rows=3 loops=2070)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..61557.46 rows=8202327 width=0) (actual time=27.388..27.388 rows=2545920 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245444.70 rows=32706227 width=0) (actual time=154.138..154.138 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.396..0.473 rows=3 loops=21713)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54406.81 rows=7248908 width=0) (actual time=27.793..27.793 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=698961.99..698962.00 rows=3 width=20) (actual time=10148.821..10148.827 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645993.22..645993.27 rows=3 width=20) (actual time=10148.774..10148.777 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.040..0.056 rows=2 loops=6222)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.476..4.476 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3041028.63..3041028.64 rows=1 width=27) (actual time=33938.881..33938.882 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3041028.61..3041028.62 rows=1 width=27) (actual time=33938.831..33938.832 rows=2 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.49..11669241.07 rows=29578 width=4) (actual time=13.564..10693.472 rows=58925 loops=1)
Q20,1.9,->  Hash  (cost=11669241.07..11669241.07 rows=29578 width=4) (actual time=10731.789..10731.789 rows=58925 loops=1)
Q16,1.9,->  Sort  (cost=403611.48..405096.75 rows=594106 width=40) (actual time=10778.400..10927.790 rows=1184697 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.303..4011.695 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54736.59..346635.65 rows=594106 width=40) (actual time=1402.999..7127.710 rows=1184697 loops=1)
Q10,1.9,->  Hash Join  (cost=346627.17..2257533.83 rows=576028 width=175) (actual time=9647.753..32284.398 rows=1149121 loops=1)
Q10,1.9,->  Hash Join  (cost=346625.61..2249611.88 rows=576028 width=153) (actual time=9647.720..31868.933 rows=1149121 loops=1)
Q10,1.9,->  Hash Join  (cost=277597.61..2171943.46 rows=576028 width=12) (actual time=8072.004..29464.330 rows=1149121 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817039.60 rows=20015109 width=8) (actual time=0.008..19005.368 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323947.56 rows=389937 width=38) (actual time=55.405..33740.093 rows=730938 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902507.61 rows=800604 width=34) (actual time=55.252..26054.013 rows=1514828 loops=1)
Q15,1.8,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.025..16.055 rows=53995 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.038..0.262 rows=56 loops=1)
Q1,1.5,Sort  (cost=4230050.18..4230050.20 rows=6 width=20) (actual time=93880.787..93880.787 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4230050.00..4230050.10 rows=6 width=20) (actual time=93880.738..93880.741 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2271934.53..2277694.81 rows=576028 width=175) (actual time=34321.916..34562.748 rows=382079 loops=1)
Q9,1.4,GroupAggregate  (cost=1088235.88..1088240.01 rows=118 width=46) (actual time=118573.789..121421.050 rows=175 loops=1)
Q20,1.4,Sort  (cost=11672054.59..11672057.55 rows=1183 width=51) (actual time=10762.573..10762.676 rows=1760 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669653.80..11671994.21 rows=1183 width=51) (actual time=10732.224..10761.116 rows=1760 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.187..4.187 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2907.69 rows=140472 width=0) (actual time=878.934..878.934 rows=190780 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2942.81..41908.20 rows=140472 width=24) (actual time=887.566..1060.854 rows=190780 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=96096 width=4) (actual time=0.016..1354.908 rows=108628 loops=1)
Q9,1.1,->  Hash Join  (cost=66723.20..351525.04 rows=384384 width=16) (actual time=1409.004..7748.136 rows=434512 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=96096 width=4) (actual time=1408.372..1408.372 rows=108628 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91819.30 rows=9167130 width=0) (actual time=119.734..119.734 rows=10718720 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=4.183..2172.654 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.85..1711169.40 rows=124877 width=20) (actual time=7.363..17368.582 rows=122540 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.42..1509540.84 rows=411774 width=16) (actual time=7.318..10790.052 rows=402051 loops=1)
Q8,1.0,->  Nested Loop  (cost=38757.30..1758276.07 rows=24975 width=16) (actual time=2285.097..19949.673 rows=24471 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.86..1758745.92 rows=24975 width=38) (actual time=2285.147..20011.338 rows=24471 loops=1)
Q8,1.0,->  Hash Join  (cost=38757.00..1750217.59 rows=24975 width=16) (actual time=2285.083..19760.658 rows=24471 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2274.293..2274.293 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.38 rows=13593 width=0) (actual time=4.938..4.938 rows=13423 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.034..0.034 rows=30 loops=13423)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=421.77..28437.61 rows=13593 width=4) (actual time=7.235..203.519 rows=13423 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.077..0.754 rows=30 loops=13423)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.720..424.573 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.006..3418.308 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2110101.54 rows=1458972 width=42) (actual time=628.035..26589.415 rows=1454677 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2121946.03 rows=60717 width=64) (actual time=687.311..27394.437 rows=57723 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532478.49 rows=1205994 width=30) (actual time=627.799..10408.998 rows=1196870 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..587.581 rows=119897 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..56.912 rows=7947 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=627.273..627.273 rows=119897 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=59.022..59.022 rows=7947 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92010.42..1370065.85 rows=764501 width=8) (actual time=120.615..25554.764 rows=761845 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.337..2448.768 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=100470.62..1944163.78 rows=1826649 width=46) (actual time=2626.833..19157.436 rows=1818365 loops=1)
Q5,1.0,->  Hash Join  (cost=105149.62..1963273.30 rows=73065 width=34) (actual time=2697.881..20006.725 rows=72721 loops=1)
Q5,1.0,->  Hash Join  (cost=100470.05..491171.10 rows=456770 width=38) (actual time=2626.808..10293.193 rows=454938 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2597.223..2597.223 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62128.42..439697.32 rows=2283852 width=8) (actual time=27.551..6571.668 rows=2277722 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=5.156..477.720 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=6024.12..272354.38 rows=583817 width=20) (actual time=30.431..7033.676 rows=574177 loops=1)
Q3,1.0,->  Hash Join  (cost=105832.68..491785.48 rows=1438304 width=12) (actual time=912.256..10677.334 rows=1444273 loops=1)
Q3,1.0,->  Hash  (cost=491785.48..491785.48 rows=1438304 width=12) (actual time=11252.210..11252.210 rows=1444273 loops=1)
Q3,1.0,->  Hash  (cost=45893.33..45893.33 rows=297625 width=4) (actual time=881.828..881.828 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6820.61 rows=297625 width=0) (actual time=69.035..69.035 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56219.03..400605.38 rows=7248908 width=16) (actual time=27.959..7053.339 rows=7240586 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253621.26..1729992.09 rows=32706227 width=12) (actual time=154.887..24206.169 rows=32590980 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6895.02..45893.33 rows=297625 width=4) (actual time=78.194..745.741 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408911.95 rows=15209895 width=4) (actual time=0.013..4428.249 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=408911.95..408911.95 rows=15209895 width=4) (actual time=8868.148..8868.148 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=601978.45..645551.77 rows=58860 width=20) (actual time=9836.978..10126.971 rows=63290 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6583.54 rows=383005 width=0) (actual time=84.674..84.674 rows=381783 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6679.29..52011.17 rows=383005 width=4) (actual time=93.460..677.516 rows=381783 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.258..53.794 rows=3995 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=55.216..55.216 rows=3995 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.248..52.969 rows=3995 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6920.534..7040.196 rows=1586838 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.318..137.404 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8027 width=30) (actual time=3.183..1150.650 rows=7962 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=148.667..5778.620 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=148.520..148.520 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.252..26.638 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.282..27.468 rows=3933 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.204..9.204 rows=21713 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.265..26.920 rows=3933 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.984..392.963 rows=21713 loops=1)
Q19,1.0,->  Nested Loop  (cost=12857.57..632012.39 rows=1126 width=8) (actual time=36.193..4212.708 rows=1189 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.282..4.282 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.11 rows=8040 width=0) (actual time=3.596..3.596 rows=8147 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7989 width=0) (actual time=3.733..3.733 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.43 rows=7871 width=0) (actual time=3.748..3.748 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.028..0.028 rows=30 loops=4991)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12852.82..26589.64 rows=4776 width=30) (actual time=34.194..188.124 rows=4991 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.007..2562.477 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670258.65 rows=60165365 width=8) (actual time=0.006..8871.875 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670258.65 rows=60165365 width=8) (actual time=0.017..8201.993 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.043 rows=30 loops=2070)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.043 rows=30 loops=2070)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.29 rows=1986 width=0) (actual time=0.943..0.943 rows=2070 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.78..6586.12 rows=1986 width=4) (actual time=1.286..42.335 rows=2070 loops=1)
Q16,1.0,Sort  (cost=413372.30..413441.92 rows=27849 width=40) (actual time=11583.904..11587.497 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51007.20..51007.20 rows=297053 width=40) (actual time=1400.741..1400.741 rows=296356 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403611.48..411316.30 rows=27849 width=40) (actual time=10778.454..11523.651 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2486.02..51007.20 rows=297053 width=40) (actual time=34.825..1265.318 rows=296356 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1980879.98 rows=2225698 width=12) (actual time=0.007..17468.763 rows=2244994 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1980879.98 rows=2225698 width=12) (actual time=0.019..18682.601 rows=2244994 loops=1)
Q14,1.0,->  Hash Join  (cost=93595.20..1152097.91 rows=773191 width=29) (actual time=1724.618..29874.776 rows=773744 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8073.20..1054978.04 rows=773191 width=12) (actual time=145.505..27380.927 rows=773744 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=14923936 width=8) (actual time=0.017..7280.888 rows=14853762 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..737622.23 rows=14923936 width=8) (actual time=1139.898..20092.115 rows=15353784 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.011..3999.945 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2431957.39 rows=290644 width=15) (actual time=0.083..24321.916 rows=312665 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..3035942.34 rows=290644 width=27) (actual time=8929.514..33602.049 rows=312665 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=8852.026..8852.026 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.303..31.192 rows=3973 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.287..24.092 rows=3973 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.040..3528.959 rows=317840 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=32.160..4573.896 rows=317840 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=32.089..32.089 rows=3973 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.977..24.977 rows=3973 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.257..23.493 rows=3973 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.282..30.559 rows=3973 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1842436.20 rows=59690345 width=20) (actual time=0.012..21827.504 rows=58919231 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1832511.66 rows=14953043 width=12) (actual time=0.014..17912.307 rows=14807964 loops=1)
Q10,1.0,->  Hash  (cost=270309.66..270309.66 rows=583036 width=8) (actual time=8067.381..8067.381 rows=575090 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6016.12..270309.66 rows=583036 width=8) (actual time=27.749..7840.800 rows=575090 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.015..0.015 rows=0 loops=402051)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1514828)
Q19,,->  BitmapOr  (cost=12852.82..12852.82 rows=4779 width=0) (actual time=30.197..30.197 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.743..0.800 rows=0 loops=4991)
Q19,,->  BitmapAnd  (cost=6281.02..6281.02 rows=2402 width=0) (actual time=8.613..8.613 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4300.10..4300.10 rows=1596 width=0) (actual time=8.852..8.852 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2271.20..2271.20 rows=781 width=0) (actual time=9.061..9.061 rows=0 loops=1)
