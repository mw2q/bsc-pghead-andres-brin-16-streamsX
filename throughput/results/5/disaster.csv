Q21,703732.0,->  Nested Loop Semi Join  (cost=2406.31..2844929.13 rows=1 width=34) (actual time=60.015..38999.463 rows=703732 loops=1)
Q18,358919.0,->  GroupAggregate  (cost=10195309.06..11024412.17 rows=30149204 width=39) (actual time=76389.874..76390.149 rows=84 loops=1)
Q3,315000.1,->  Sort  (cost=2554627.51..2562502.51 rows=3150001 width=20) (actual time=45879.458..45879.460 rows=10 loops=1)
Q18,89731.6,->  Hash Join  (cost=2186647.65..2802145.28 rows=7537460 width=39) (actual time=48272.124..56597.449 rows=84 loops=1)
Q18,89731.6,->  Hash Join  (cost=2117619.65..2620055.38 rows=7537460 width=20) (actual time=47402.512..55727.550 rows=84 loops=1)
Q18,89731.6,->  Hash  (cost=2802145.28..2802145.28 rows=7537460 width=39) (actual time=56597.653..56597.653 rows=84 loops=1)
Q18,51274.1,->  Sort  (cost=10195309.06..10270682.07 rows=30149204 width=39) (actual time=76389.863..76389.907 rows=588 loops=1)
Q18,51274.1,->  Hash Join  (cost=2896363.53..5625537.75 rows=30149204 width=39) (actual time=56958.250..76388.932 rows=588 loops=1)
Q18,48359.0,->  Hash  (cost=2066842.68..2066842.68 rows=4062158 width=4) (actual time=47123.356..47123.356 rows=84 loops=1)
Q18,48359.0,->  HashAggregate  (cost=1975444.12..2026221.10 rows=4062158 width=8) (actual time=40843.112..47123.183 rows=84 loops=1)
Q21,39261.0,->  Nested Loop Anti Join  (cost=2406.88..2844930.92 rows=1 width=26) (actual time=76.202..41973.002 rows=39261 loops=1)
Q10,28241.1,->  Sort  (cost=2301109.70..2302521.75 rows=564823 width=175) (actual time=32488.973..32488.975 rows=20 loops=1)
Q9,23627.4,->  Sort  (cost=1212578.00..1212578.34 rows=138 width=46) (actual time=109768.611..110415.951 rows=3260587 loops=1)
Q9,23627.4,->  Nested Loop  (cost=66924.69..1212568.94 rows=138 width=24) (actual time=751.332..100161.335 rows=3260587 loops=1)
Q9,23627.4,->  Nested Loop  (cost=66924.26..1212502.06 rows=138 width=24) (actual time=751.313..60106.865 rows=3260587 loops=1)
Q9,23627.4,->  Nested Loop  (cost=66923.96..1212457.53 rows=138 width=28) (actual time=751.302..49746.651 rows=3260587 loops=1)
Q9,23627.4,->  Hash Join  (cost=66926.25..1212573.09 rows=138 width=46) (actual time=751.387..103647.502 rows=3260587 loops=1)
Q2,4738.0,->  Merge Join  (cost=465687.75..888921.55 rows=1 width=190) (actual time=6713.004..8726.105 rows=4738 loops=1)
Q21,3987.0,->  HashAggregate  (cost=2844930.92..2844930.93 rows=1 width=26) (actual time=42029.736..42030.904 rows=3987 loops=1)
Q15,3774.0,->  Subquery Scan on revenue5  (cost=1930824.35..1930909.27 rows=3774 width=12) (actual time=58300.248..58322.917 rows=1 loops=1)
Q15,3774.0,->  Sort  (cost=1931133.48..1931142.91 rows=3774 width=12) (actual time=58322.937..58322.937 rows=1 loops=1)
Q15,3774.0,Merge Join  (cost=3845005.91..3850103.72 rows=3774 width=79) (actual time=58328.144..58328.146 rows=1 loops=1)
Q15,3774.0,->  HashAggregate  (cost=1930824.35..1930871.53 rows=3774 width=12) (actual time=58300.247..58322.914 rows=1 loops=1)
Q7,763.7,Sort  (cost=2123079.45..2123087.09 rows=3055 width=64) (actual time=24416.253..24416.254 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2122856.79..2122902.61 rows=3055 width=64) (actual time=24416.183..24416.191 rows=4 loops=1)
Q8,365.0,Sort  (cost=1748697.54..1748699.36 rows=730 width=38) (actual time=10622.691..10622.691 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1748650.05..1748662.82 rows=730 width=38) (actual time=10622.653..10622.653 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2844930.94..2844930.95 rows=1 width=26) (actual time=42032.043..42032.050 rows=100 loops=1)
Q21,100.0,Limit  (cost=2844930.94..2844930.95 rows=1 width=26) (actual time=42032.044..42032.064 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=888921.56..888921.56 rows=1 width=190) (actual time=8731.241..8731.253 rows=100 loops=1)
Q2,100.0,Limit  (cost=888921.56..888921.56 rows=1 width=190) (actual time=8731.243..8731.270 rows=100 loops=1)
Q11,31.5,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8235.093..8236.332 rows=10130 loops=1)
Q11,31.5,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8147.650..8229.525 rows=10130 loops=1)
Q3,27.8,->  HashAggregate  (cost=2455057.11..2486557.12 rows=3150001 width=20) (actual time=45807.823..45858.394 rows=113117 loops=1)
Q15,26.4,->  HashAggregate  (cost=1913787.22..1913824.96 rows=3774 width=12) (actual time=29770.739..29808.934 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=730212)
Q14,14.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7355.63 rows=720763 width=0) (actual time=119.421..119.421 rows=10728960 loops=1)
Q3,10.5,->  Hash Join  (cost=768088.01..2407807.09 rows=3150001 width=20) (actual time=13012.940..45513.360 rows=298550 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2427.51 rows=322067 width=0) (actual time=59.007..59.007 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.91 rows=1 width=24) (actual time=0.018..0.100 rows=8 loops=434020)
Q15,7.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.020..3.862 rows=13954 loops=1)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.125..4.125 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.648..3.648 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.235..0.235 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1928356.99..1928357.06 rows=25 width=34) (actual time=19815.711..19815.711 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1928356.16..1928356.41 rows=25 width=34) (actual time=19815.670..19815.671 rows=5 loops=1)
Q4,5.0,Sort  (cost=1492568.07..1492568.07 rows=1 width=16) (actual time=19090.018..19090.018 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.02 rows=5 width=4) (actual time=0.015..0.015 rows=1 loops=573844)
Q4,5.0,->  HashAggregate  (cost=1492568.05..1492568.06 rows=1 width=16) (actual time=19089.967..19089.969 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=703732)
Q13,4.4,Sort  (cost=849611.63..849612.13 rows=200 width=8) (actual time=29984.554..29984.557 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=849601.99..849603.99 rows=200 width=8) (actual time=29984.488..29984.498 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5759.92 rows=571992 width=0) (actual time=27.691..27.691 rows=2568960 loops=1)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5866.46 rows=582646 width=0) (actual time=27.426..27.426 rows=2543360 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1199915)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=456082)
Q17,3.6,->  Nested Loop  (cost=82.87..122880.32 rows=20427 width=4) (actual time=1.663..201.778 rows=5553 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.78..57.56 rows=11 width=12) (actual time=0.016..0.039 rows=3 loops=2039)
Q15,3.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..274418.71 rows=36569428 width=0) (actual time=166.067..166.067 rows=10676480 loops=1)
Q15,3.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..274418.71 rows=36569428 width=0) (actual time=118.358..118.358 rows=10686720 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=6012.69..1491782.25 rows=157159 width=16) (actual time=27.609..18757.533 rows=526202 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246261.57 rows=32815143 width=0) (actual time=120.522..120.522 rows=10750720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.364..0.438 rows=3 loops=21914)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54956.27 rows=7322170 width=0) (actual time=27.452..27.452 rows=2556160 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44737.76 rows=5959702 width=0) (actual time=27.395..27.395 rows=2563840 loops=1)
Q22,2.3,Sort  (cost=695432.36..695432.37 rows=3 width=20) (actual time=9257.837..9257.838 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642457.15..642457.19 rows=3 width=20) (actual time=9257.788..9257.791 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.041..0.058 rows=2 loops=6422)
Q20,2.0,->  Nested Loop  (cost=754.49..12023795.26 rows=29578 width=4) (actual time=34.879..9962.542 rows=59628 loops=1)
Q20,2.0,->  Hash  (cost=12023795.26..12023795.26 rows=29578 width=4) (actual time=10043.407..10043.407 rows=59628 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.182..4.182 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3059213.91..3059213.92 rows=1 width=27) (actual time=35248.696..35248.696 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3059213.89..3059213.90 rows=1 width=27) (actual time=35248.650..35248.651 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=404168.79..405664.28 rows=598198 width=40) (actual time=9992.810..10147.584 rows=1188881 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.319..2768.698 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54830.92..346770.90 rows=598198 width=40) (actual time=1405.434..5872.311 rows=1188881 loops=1)
Q10,1.9,->  Hash Join  (cost=347475.26..2266311.15 rows=564823 width=175) (actual time=9074.867..30283.188 rows=1121544 loops=1)
Q10,1.9,->  Hash Join  (cost=347473.70..2258543.28 rows=564823 width=153) (actual time=9074.835..29877.946 rows=1121544 loops=1)
Q10,1.9,->  Hash Join  (cost=278445.70..2181042.93 rows=564823 width=12) (actual time=7735.770..27837.128 rows=1121544 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817039.60 rows=20015109 width=8) (actual time=0.008..19478.095 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323947.56 rows=389937 width=38) (actual time=59.977..34516.069 rows=730212 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902507.61 rows=800604 width=34) (actual time=59.911..26858.839 rows=1512617 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.276 rows=56 loops=1)
Q20,1.5,Sort  (cost=12026608.78..12026611.74 rows=1183 width=51) (actual time=10073.580..10073.683 rows=1853 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12024207.99..12026548.40 rows=1183 width=51) (actual time=10043.858..10072.223 rows=1853 loops=1)
Q1,1.5,Sort  (cost=4231759.62..4231759.63 rows=6 width=20) (actual time=93279.199..93279.199 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4231759.43..4231759.54 rows=6 width=20) (actual time=93279.149..93279.151 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2280431.73..2286079.96 rows=564823 width=175) (actual time=32121.595..32341.144 rows=375068 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.171..4.171 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2908.39 rows=140537 width=0) (actual time=749.530..749.530 rows=191007 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2943.53..41910.62 rows=140537 width=24) (actual time=758.651..1205.572 rows=191007 loops=1)
Q9,1.2,GroupAggregate  (cost=1212578.00..1212582.83 rows=138 width=46) (actual time=109778.874..112630.786 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91143.04 rows=9099504 width=0) (actual time=122.458..122.458 rows=10696960 loops=1)
Q18,1.1,Limit  (cost=10195309.06..10195311.81 rows=100 width=39) (actual time=76389.876..76390.161 rows=84 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=112112 width=4) (actual time=0.015..716.320 rows=108505 loops=1)
Q9,1.0,->  Hash Join  (cost=66923.40..352365.88 rows=448448 width=16) (actual time=751.205..5500.430 rows=434020 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=112112 width=4) (actual time=750.574..750.574 rows=108505 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=4.728..2117.995 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.21..1700876.03 rows=121007 width=20) (actual time=8.189..8076.496 rows=121380 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.77..1505491.72 rows=399015 width=16) (actual time=7.984..3910.136 rows=398063 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.65..1747710.69 rows=24201 width=16) (actual time=2250.714..10544.514 rows=24197 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..112.19 rows=32 width=20) (actual time=0.024..0.277 rows=30 loops=13254)
Q8,1.0,->  Hash Join  (cost=38739.21..1748166.03 rows=24201 width=38) (actual time=2250.760..10582.719 rows=24197 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.36..1739901.96 rows=24201 width=16) (actual time=2250.697..10400.686 rows=24197 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2227.675..2227.675 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.93 rows=13133 width=0) (actual time=5.429..5.429 rows=13254 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.21..27871.95 rows=13133 width=4) (actual time=7.927..112.340 rows=13254 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.165..413.568 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.006..2997.546 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2110101.54 rows=1458972 width=42) (actual time=1192.740..23570.163 rows=1452774 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2121946.03 rows=60717 width=64) (actual time=1236.159..24323.776 rows=58416 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532478.49 rows=1205994 width=30) (actual time=1192.661..10163.107 rows=1199915 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..1129.318 rows=120085 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..40.853 rows=8028 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=1192.142..1192.142 rows=120085 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=43.268..43.268 rows=8028 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91333.55..1365736.39 rows=762045 width=8) (actual time=123.255..34280.796 rows=763631 loops=1)
Q5,1.0,->  Nested Loop  (cost=83657.17..1908350.35 rows=1846607 width=46) (actual time=2476.597..18841.504 rows=1824621 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.785..2326.368 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=88336.17..1927617.53 rows=73863 width=34) (actual time=2540.816..19725.700 rows=72738 loops=1)
Q5,1.0,->  Hash Join  (cost=83656.60..442634.87 rows=461765 width=38) (actual time=2476.577..11308.744 rows=456082 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2446.640..2446.640 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45314.97..391017.50 rows=2308825 width=8) (actual time=27.554..7718.924 rows=2281942 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.681..454.726 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=6012.12..269032.81 rows=582646 width=20) (actual time=27.589..9785.896 rows=573844 loops=1)
Q3,1.0,->  Hash Join  (cost=106400.46..495462.14 rows=1452841 width=12) (actual time=783.702..12290.428 rows=1449407 loops=1)
Q3,1.0,->  Hash  (cost=495462.14..495462.14 rows=1452841 width=12) (actual time=12885.078..12885.078 rows=1449407 loops=1)
Q3,1.0,->  Hash  (cost=45893.33..45893.33 rows=297625 width=4) (actual time=754.062..754.062 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6820.61 rows=297625 width=0) (actual time=70.892..70.892 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56786.82..403861.94 rows=7322170 width=16) (actual time=27.617..8486.176 rows=7265910 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=254465.36..1739627.65 rows=32815143 width=12) (actual time=121.290..26660.767 rows=32489190 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6895.02..45893.33 rows=297625 width=4) (actual time=80.197..660.393 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=4) (actual time=0.014..3869.372 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=4) (actual time=7853.080..7853.080 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598438.33..642015.49 rows=58887 width=20) (actual time=8659.799..9230.910 rows=63324 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6584.85 rows=383182 width=0) (actual time=91.575..91.575 rows=382215 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6680.65..52017.18 rows=383182 width=4) (actual time=101.180..618.668 rows=382215 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.264..58.487 rows=3987 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=59.866..59.866 rows=3987 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.250..57.717 rows=3987 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6712.579..6849.931 rows=1604029 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.309..150.171 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8003 width=30) (actual time=0.010..1150.100 rows=8060 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=161.322..5568.828 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=161.192..161.192 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.252..29.198 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.304..26.806 rows=4021 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=30.157..30.157 rows=21914 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.284..26.184 rows=4021 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=33.978..330.807 rows=21914 loops=1)
Q19,1.0,->  Nested Loop  (cost=12877.37..620124.37 rows=1132 width=8) (actual time=33.687..2631.591 rows=1097 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.192..4.192 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.03 rows=8134 width=0) (actual time=3.451..3.451 rows=8073 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.79 rows=8109 width=0) (actual time=3.645..3.645 rows=8005 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.03 rows=8032 width=0) (actual time=3.552..3.552 rows=7853 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.031..0.031 rows=30 loops=4772)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12872.63..26749.19 rows=4836 width=30) (actual time=32.898..128.486 rows=4772 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.007..5100.059 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673952.08 rows=60298408 width=8) (actual time=0.010..9054.408 rows=59986308 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673952.08 rows=60298408 width=8) (actual time=0.011..8224.857 rows=59986308 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.12 rows=32 width=4) (actual time=0.025..0.045 rows=30 loops=2039)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.12 rows=32 width=4) (actual time=0.025..0.045 rows=30 loops=2039)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.58 rows=2015 width=0) (actual time=0.972..0.972 rows=2039 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.08..6671.19 rows=2015 width=4) (actual time=1.286..14.026 rows=2039 loops=1)
Q16,1.0,Sort  (cost=413998.24..414068.34 rows=28041 width=40) (actual time=10804.023..10806.962 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51075.96..51075.96 rows=299099 width=40) (actual time=1401.944..1401.944 rows=297383 loops=1)
Q16,1.0,->  GroupAggregate  (cost=404168.79..411926.67 rows=28041 width=40) (actual time=9992.873..10745.079 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2502.28..51075.96 rows=299099 width=40) (actual time=59.069..1265.275 rows=297383 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=274986.62..1891071.04 rows=2271618 width=12) (actual time=119.093..27617.608 rows=2243902 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=274986.62..1891071.04 rows=2271618 width=12) (actual time=166.821..26163.895 rows=2243902 loops=1)
Q14,1.0,->  Hash Join  (cost=93057.82..1124979.25 rows=720763 width=29) (actual time=1744.709..24402.224 rows=748955 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7535.82..1028645.81 rows=720763 width=12) (actual time=120.245..21969.147 rows=748955 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444294.89 rows=14938955 width=8) (actual time=0.019..7512.708 rows=14852879 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..737407.21 rows=14938955 width=8) (actual time=995.571..18844.314 rows=15352898 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=20) (actual time=0.014..4988.332 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2446478.60 rows=293124 width=15) (actual time=0.229..23793.406 rows=311081 loops=1)
Q12,1.0,->  Hash Join  (cost=598445.50..3054084.22 rows=293124 width=27) (actual time=10815.785..34932.480 rows=311081 loops=1)
Q12,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=20) (actual time=10728.648..10728.648 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.301..31.112 rows=3934 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..24.100 rows=3934 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.037..3791.758 rows=314720 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=32.143..3997.134 rows=314720 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=32.070..32.070 rows=3934 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.972..24.972 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.275..23.473 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.283..30.490 rows=3934 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1833346.51 rows=59960323 width=20) (actual time=0.013..20713.544 rows=59456243 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1840626.77 rows=15019261 width=12) (actual time=0.045..17073.165 rows=14822462 loops=1)
Q10,1.0,->  Hash  (cost=271295.80..271295.80 rows=571992 width=8) (actual time=7732.376..7732.376 rows=561064 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5902.92..271295.80 rows=571992 width=8) (actual time=27.861..7510.770 rows=561064 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=398063)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1512617)
Q19,,->  BitmapOr  (cost=12872.63..12872.63 rows=4840 width=0) (actual time=29.104..29.104 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.447..0.487 rows=0 loops=4772)
Q19,,->  BitmapAnd  (cost=6281.97..6281.97 rows=2430 width=0) (actual time=8.367..8.367 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4300.57..4300.57 rows=1605 width=0) (actual time=8.518..8.518 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2289.59..2289.59 rows=804 width=0) (actual time=8.624..8.624 rows=0 loops=1)
