BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substr(c_phone, 1, 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substr(c_phone, 1, 2) in
				('31', '13', '26', '11', '23', '21', '27')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substr(c_phone, 1, 2) in
						('31', '13', '26', '11', '23', '21', '27')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as vip
group by
	cntrycode
order by
	cntrycode;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=695317.62..695317.62 rows=3 width=20) (actual time=9755.511..9755.512 rows=7 loops=1)
   Sort Key: (substr((customer.c_phone)::text, 1, 2))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=245049 read=82305 written=191
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=52914.82..52914.83 rows=1 width=4) (actual time=427.182..427.182 rows=1 loops=1)
           Buffers: shared hit=35186 read=1154 written=4
           ->  Bitmap Heap Scan on customer customer_1  (cost=6648.95..51959.35 rows=382187 width=4) (actual time=98.237..356.796 rows=381192 loops=1)
                 Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{31,13,26,11,23,21,27}'::text[])) AND (c_acctbal > 0::double precision))
                 Heap Blocks: exact=35278
                 Buffers: shared hit=35186 read=1154 written=4
                 ->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6553.40 rows=382187 width=0) (actual time=89.289..89.289 rows=381192 loops=1)
                       Index Cond: (substr((c_phone)::text, 1, 2) = ANY ('{31,13,26,11,23,21,27}'::text[]))
                       Buffers: shared hit=8 read=1054 written=3
   ->  HashAggregate  (cost=642402.71..642402.76 rows=3 width=20) (actual time=9755.463..9755.465 rows=7 loops=1)
         Group Key: substr((customer.c_phone)::text, 1, 2)
         Buffers: shared hit=245046 read=82305 written=191
         ->  Hash Anti Join  (cost=598406.59..641962.21 rows=58734 width=20) (actual time=9327.595..9731.339 rows=63207 loops=1)
               Hash Cond: (customer.c_custkey = orders.o_custkey)
               Buffers: shared hit=245046 read=82305 written=191
               ->  Bitmap Heap Scan on customer  (cost=2911.80..41869.31 rows=140172 width=24) (actual time=492.702..775.809 rows=190448 loops=1)
                     Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{31,13,26,11,23,21,27}'::text[])) AND (c_acctbal > $0))
                     Heap Blocks: exact=35168
                     Buffers: shared hit=55659 read=16394 written=51
                     ->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2876.75 rows=140172 width=0) (actual time=483.795..483.795 rows=190448 loops=1)
                           Index Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{31,13,26,11,23,21,27}'::text[])) AND (c_acctbal > $0))
                           Buffers: shared hit=35195 read=1690 written=4
               ->  Hash  (cost=406494.91..406494.91 rows=15119991 width=4) (actual time=8764.919..8764.919 rows=15015000 loops=1)
                     Buckets: 16777216  Batches: 1  Memory Usage: 658944kB
                     Buffers: shared hit=189384 read=65911 written=140
                     ->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=4) (actual time=0.013..4080.399 rows=15015000 loops=1)
                           Buffers: shared hit=189384 read=65911 written=140
 Planning time: 3.081 ms
 Execution time: 9759.331 ms
(34 rows)

COMMIT;
COMMIT
