Q21,700691.0,->  Nested Loop Semi Join  (cost=2406.31..2867722.97 rows=1 width=34) (actual time=32.139..41274.162 rows=700691 loops=1)
Q18,358127.1,->  GroupAggregate  (cost=10173035.39..11000309.14 rows=30082682 width=39) (actual time=72226.298..72226.570 rows=84 loops=1)
Q3,323421.0,->  Sort  (cost=2604162.65..2612248.17 rows=3234210 width=20) (actual time=36279.704..36279.708 rows=10 loops=1)
Q18,89553.2,->  Hash Join  (cost=2182289.01..2796643.82 rows=7522476 width=39) (actual time=47844.993..53569.958 rows=84 loops=1)
Q18,89553.2,->  Hash Join  (cost=2113261.01..2614778.68 rows=7522476 width=20) (actual time=46914.531..52639.160 rows=84 loops=1)
Q18,89553.2,->  Hash  (cost=2796643.82..2796643.82 rows=7522476 width=39) (actual time=53570.188..53570.188 rows=84 loops=1)
Q18,51161.0,->  Sort  (cost=10173035.39..10248242.09 rows=30082682 width=39) (actual time=72226.289..72226.332 rows=588 loops=1)
Q18,51161.0,->  Hash Join  (cost=2890674.77..5613827.30 rows=30082682 width=39) (actual time=53812.425..72225.391 rows=588 loops=1)
Q18,48359.0,->  Hash  (cost=2062484.03..2062484.03 rows=4062158 width=4) (actual time=46771.997..46771.997 rows=84 loops=1)
Q18,48359.0,->  HashAggregate  (cost=1971085.48..2021862.45 rows=4062158 width=8) (actual time=40032.056..46771.740 rows=84 loops=1)
Q21,39337.0,->  Nested Loop Anti Join  (cost=2406.88..2867724.76 rows=1 width=26) (actual time=33.324..44322.622 rows=39337 loops=1)
Q10,28965.0,->  Sort  (cost=2294601.36..2296049.61 rows=579300 width=175) (actual time=36546.598..36546.604 rows=20 loops=1)
Q9,26087.3,->  Sort  (cost=1134411.88..1134412.20 rows=125 width=46) (actual time=104327.316..105021.372 rows=3260918 loops=1)
Q9,26087.3,->  Nested Loop  (cost=66799.57..1134403.62 rows=125 width=24) (actual time=915.328..94503.539 rows=3260918 loops=1)
Q9,26087.3,->  Nested Loop  (cost=66799.13..1134343.04 rows=125 width=24) (actual time=915.311..58543.684 rows=3260918 loops=1)
Q9,26087.3,->  Nested Loop  (cost=66798.84..1134302.71 rows=125 width=28) (actual time=915.301..47336.573 rows=3260918 loops=1)
Q9,26087.3,->  Hash Join  (cost=66801.13..1134407.53 rows=125 width=46) (actual time=915.381..97907.969 rows=3260918 loops=1)
Q2,4838.0,->  Merge Join  (cost=465687.75..885550.65 rows=1 width=190) (actual time=6654.393..8680.700 rows=4838 loops=1)
Q21,3960.0,->  HashAggregate  (cost=2867724.76..2867724.77 rows=1 width=26) (actual time=44382.666..44383.827 rows=3960 loops=1)
Q15,3774.0,->  Subquery Scan on revenue10  (cost=2008887.30..2008972.21 rows=3774 width=12) (actual time=40816.827..40838.731 rows=1 loops=1)
Q15,3774.0,->  Sort  (cost=2009196.42..2009205.86 rows=3774 width=12) (actual time=40838.752..40838.753 rows=1 loops=1)
Q15,3774.0,Merge Join  (cost=4001128.63..4006226.44 rows=3774 width=79) (actual time=40859.792..40859.795 rows=1 loops=1)
Q15,3774.0,->  HashAggregate  (cost=2008887.30..2008934.47 rows=3774 width=12) (actual time=40816.827..40838.730 rows=1 loops=1)
Q7,763.7,Sort  (cost=2127263.55..2127271.19 rows=3055 width=64) (actual time=23402.494..23402.494 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2127040.89..2127086.72 rows=3055 width=64) (actual time=23402.429..23402.436 rows=4 loops=1)
Q8,365.0,Sort  (cost=1842485.88..1842487.70 rows=730 width=38) (actual time=12639.782..12639.782 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1842438.38..1842451.16 rows=730 width=38) (actual time=12639.734..12639.734 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2867724.78..2867724.79 rows=1 width=26) (actual time=44384.945..44384.953 rows=100 loops=1)
Q21,100.0,Limit  (cost=2867724.78..2867724.79 rows=1 width=26) (actual time=44384.945..44384.960 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=885550.66..885550.66 rows=1 width=190) (actual time=8686.052..8686.066 rows=100 loops=1)
Q2,100.0,Limit  (cost=885550.66..885550.66 rows=1 width=190) (actual time=8686.054..8686.077 rows=100 loops=1)
Q11,33.6,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8704.328..8705.465 rows=9522 loops=1)
Q11,33.6,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8619.848..8699.011 rows=9522 loops=1)
Q3,28.4,->  HashAggregate  (cost=2501930.43..2534272.53 rows=3234210 width=20) (actual time=36209.728..36258.568 rows=113493 loops=1)
Q15,26.4,->  HashAggregate  (cost=1991846.99..1991884.73 rows=3774 width=12) (actual time=20620.335..20650.515 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.007..0.007 rows=1 loops=727220)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7887.77 rows=773977 width=0) (actual time=132.221..132.221 rows=10771200 loops=1)
Q3,10.7,->  Hash Join  (cost=772511.71..2453417.28 rows=3234210 width=20) (actual time=10130.847..35960.789 rows=300170 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2413.81 rows=320240 width=0) (actual time=37.850..37.850 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.91 rows=1 width=24) (actual time=0.019..0.094 rows=7 loops=435020)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.611..3.611 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.600..3.600 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.295..0.295 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.275..0.275 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1881605.39..1881605.45 rows=25 width=34) (actual time=17842.411..17842.411 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1881604.56..1881604.81 rows=25 width=34) (actual time=17842.370..17842.370 rows=5 loops=1)
Q4,5.0,Sort  (cost=1487899.19..1487899.19 rows=1 width=16) (actual time=17704.766..17704.766 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.18 rows=5 width=4) (actual time=0.011..0.011 rows=1 loops=566508)
Q4,5.0,->  HashAggregate  (cost=1487899.17..1487899.18 rows=1 width=16) (actual time=17704.716..17704.718 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=700691)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5753.31 rows=571331 width=0) (actual time=63.741..63.741 rows=2571520 loops=1)
Q13,4.3,Sort  (cost=848107.79..848108.29 rows=200 width=8) (actual time=29016.155..29016.157 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=848098.15..848100.15 rows=200 width=8) (actual time=29016.088..29016.097 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5906.62 rows=586662 width=0) (actual time=27.539..27.539 rows=2558720 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.010 rows=1 loops=1199549)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.014..0.016 rows=4 loops=455266)
Q17,3.6,->  Nested Loop  (cost=78.40..112390.88 rows=19804 width=4) (actual time=1.750..246.945 rows=5432 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5896.71..1487136.98 rows=152437 width=16) (actual time=63.956..17388.954 rows=519149 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.017..0.042 rows=3 loops=2041)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243682.20 rows=32471227 width=0) (actual time=120.332..120.332 rows=10803200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.378..0.452 rows=3 loops=21697)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..56255.35 rows=7495380 width=0) (actual time=27.594..27.594 rows=2568960 loops=1)
Q22,2.3,Sort  (cost=695317.62..695317.62 rows=3 width=20) (actual time=9755.511..9755.512 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642402.71..642402.76 rows=3 width=20) (actual time=9755.463..9755.465 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.041..0.057 rows=2 loops=6644)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.521..4.521 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3034973.21..3034973.21 rows=1 width=27) (actual time=35109.736..35109.736 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3034973.19..3034973.20 rows=1 width=27) (actual time=35109.687..35109.688 rows=2 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.49..12023795.26 rows=29578 width=4) (actual time=13.578..10058.902 rows=58682 loops=1)
Q20,1.9,->  Hash  (cost=12023795.26..12023795.26 rows=29578 width=4) (actual time=10107.344..10107.344 rows=58682 loops=1)
Q16,1.9,->  Sort  (cost=403650.23..405136.12 rows=594356 width=40) (actual time=10896.283..11081.773 rows=1186431 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.382..3933.784 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54747.05..346648.61 rows=594356 width=40) (actual time=1432.944..7033.552 rows=1186431 loops=1)
Q10,1.9,->  Hash Join  (cost=347017.06..2258910.90 rows=579300 width=175) (actual time=11282.195..34190.394 rows=1148508 loops=1)
Q10,1.9,->  Hash Join  (cost=347015.49..2250943.96 rows=579300 width=153) (actual time=11282.163..33758.437 rows=1148508 loops=1)
Q10,1.9,->  Hash Join  (cost=277987.49..2173226.46 rows=579300 width=12) (actual time=9606.265..31316.150 rows=1148508 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1831521.76 rows=20174634 width=8) (actual time=0.013..20033.069 rows=37965325 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2342504.31 rows=393045 width=38) (actual time=32.061..35738.988 rows=727220 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1917651.80 rows=806985 width=34) (actual time=31.920..27601.838 rows=1504711 loops=1)
Q15,1.8,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.019..15.701 rows=53897 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.038..0.338 rows=56 loops=1)
Q1,1.5,Sort  (cost=4178961.83..4178961.84 rows=6 width=20) (actual time=91062.971..91062.971 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4178961.65..4178961.75 rows=6 width=20) (actual time=91062.917..91062.918 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2273393.40..2279186.40 rows=579300 width=175) (actual time=36198.196..36408.692 rows=381471 loops=1)
Q9,1.4,GroupAggregate  (cost=1134411.88..1134416.26 rows=125 width=46) (actual time=104337.592..107250.812 rows=175 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..27529.80 rows=3665306 width=0) (actual time=27.994..27.994 rows=2574080 loops=1)
Q20,1.4,Sort  (cost=12026608.78..12026611.74 rows=1183 width=51) (actual time=10138.443..10138.545 rows=1754 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=12024207.99..12026548.40 rows=1183 width=51) (actual time=10107.822..10136.958 rows=1754 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.165..4.165 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2876.75 rows=140172 width=0) (actual time=483.795..483.795 rows=190448 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2911.80..41869.31 rows=140172 width=24) (actual time=492.702..775.809 rows=190448 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91295.10 rows=9114710 width=0) (actual time=118.626..118.626 rows=10664960 loops=1)
Q18,1.1,Limit  (cost=10173035.39..10173038.14 rows=100 width=39) (actual time=72226.301..72226.580 rows=84 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=102102 width=4) (actual time=0.012..876.135 rows=108755 loops=1)
Q9,1.0,->  Hash Join  (cost=66798.27..351840.35 rows=408408 width=16) (actual time=915.221..5487.352 rows=435020 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=102102 width=4) (actual time=914.720..914.720 rows=108755 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.774..1936.652 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=433.67..1794035.05 rows=129072 width=20) (actual time=7.170..10286.320 rows=123665 loops=1)
Q8,1.0,->  Nested Loop  (cost=433.24..1585626.50 rows=425606 width=16) (actual time=7.131..5090.914 rows=406229 loops=1)
Q8,1.0,->  Nested Loop  (cost=38764.11..1841436.53 rows=25814 width=16) (actual time=2037.769..12556.314 rows=24771 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..111.14 rows=32 width=20) (actual time=0.029..0.353 rows=30 loops=13533)
Q8,1.0,->  Hash Join  (cost=38765.67..1841922.10 rows=25814 width=38) (actual time=2037.819..12598.256 rows=24771 loops=1)
Q8,1.0,->  Hash Join  (cost=38763.82..1833107.35 rows=25814 width=16) (actual time=2037.754..12401.799 rows=24771 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2028.209..2028.209 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..429.18 rows=13967 width=0) (actual time=4.772..4.772 rows=13533 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=432.67..28882.88 rows=13967 width=4) (actual time=7.086..182.009 rows=13533 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.643..378.238 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=8) (actual time=0.006..3036.146 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2114267.81 rows=1461857 width=42) (actual time=895.391..22580.848 rows=1459617 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2126128.34 rows=60837 width=64) (actual time=934.695..23304.184 rows=58582 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533422.40 rows=1208396 width=30) (actual time=895.359..9728.828 rows=1199549 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.046..847.607 rows=119805 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..37.092 rows=8038 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=894.256..894.256 rows=119805 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.245..39.245 rows=8038 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91493.27..1363047.24 rows=792672 width=8) (actual time=119.423..31037.874 rows=794071 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.733..2109.568 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=66448.60..1861614.77 rows=1844676 width=46) (actual time=2256.391..16932.234 rows=1820638 loops=1)
Q5,1.0,->  Hash Join  (cost=71127.60..1880866.70 rows=73786 width=34) (actual time=2311.165..17753.961 rows=72957 loops=1)
Q5,1.0,->  Hash Join  (cost=66448.04..392009.54 rows=461284 width=38) (actual time=2256.346..8888.147 rows=455266 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2225.619..2225.619 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=28106.40..340405.99 rows=2306421 width=8) (actual time=28.167..5575.751 rows=2278269 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.631..411.500 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5896.15..271532.11 rows=571331 width=20) (actual time=63.923..10410.868 rows=566508 loops=1)
Q3,1.0,->  Hash Join  (cost=108012.60..501774.94 rows=1514941 width=12) (actual time=706.603..9421.324 rows=1479066 loops=1)
Q3,1.0,->  Hash  (cost=501774.94..501774.94 rows=1514941 width=12) (actual time=10003.569..10003.569 rows=1479066 loops=1)
Q3,1.0,->  Hash  (cost=46093.72..46093.72 rows=303175 width=4) (actual time=676.869..676.869 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6950.24 rows=303175 width=0) (actual time=67.998..67.998 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=58129.20..408634.45 rows=7495380 width=16) (actual time=27.762..5649.246 rows=7396635 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251800.01..1738007.34 rows=32471227 width=12) (actual time=121.081..20208.483 rows=31964916 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=7026.03..46093.72 rows=303175 width=4) (actual time=77.002..585.961 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=4) (actual time=0.013..4080.399 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=4) (actual time=8764.919..8764.919 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598406.59..641962.21 rows=58734 width=20) (actual time=9327.595..9731.339 rows=63207 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6553.40 rows=382187 width=0) (actual time=89.289..89.289 rows=381192 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6648.95..51959.35 rows=382187 width=4) (actual time=98.237..356.796 rows=381192 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.348..30.797 rows=3961 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=31.866..31.866 rows=3961 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.336..30.122 rows=3961 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6652.443..6774.640 rows=1603336 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.311..134.258 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7916 width=30) (actual time=0.130..1198.400 rows=8070 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=145.740..5487.591 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=145.593..145.593 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.260..25.999 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.320..27.692 rows=3987 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.261..9.261 rows=21697 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.301..27.098 rows=3987 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=13.043..218.769 rows=21697 loops=1)
Q19,1.0,->  Nested Loop  (cost=12872.34..637968.96 rows=1142 width=8) (actual time=37.649..2013.699 rows=1126 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.179..4.179 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.79 rows=8106 width=0) (actual time=3.565..3.565 rows=8083 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.19 rows=8049 width=0) (actual time=4.129..4.129 rows=8135 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.03 rows=8033 width=0) (actual time=5.108..5.108 rows=7865 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12871.77..26717.90 rows=4824 width=30) (actual time=35.849..325.205 rows=4786 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.006..2865.140 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670258.65 rows=60165365 width=8) (actual time=0.004..8494.739 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670258.65 rows=60165365 width=8) (actual time=0.011..8118.254 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.035..0.052 rows=30 loops=2041)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.035..0.052 rows=30 loops=2041)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.14 rows=1971 width=0) (actual time=0.993..0.993 rows=2041 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.63..6539.50 rows=1971 width=4) (actual time=1.320..37.951 rows=2041 loops=1)
Q16,1.0,Sort  (cost=413415.26..413484.92 rows=27861 width=40) (actual time=11760.559..11763.957 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51016.10..51016.10 rows=297178 width=40) (actual time=1430.432..1430.432 rows=296759 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403650.23..411358.29 rows=27861 width=40) (actual time=10896.335..11701.100 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2488.10..51016.10 rows=297178 width=40) (actual time=37.905..1288.305 rows=296759 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1969126.58 rows=2272041 width=12) (actual time=0.018..18615.388 rows=2250213 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1969126.58 rows=2272041 width=12) (actual time=0.019..18298.358 rows=2250213 loops=1)
Q14,1.0,->  Hash Join  (cost=93603.26..1152440.01 rows=773977 width=29) (actual time=1966.175..30649.859 rows=773339 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8081.26..1055308.35 rows=773977 width=12) (actual time=133.059..27825.986 rows=773339 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444294.89 rows=14863763 width=8) (actual time=0.017..7772.511 rows=14854067 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..736279.33 rows=14863763 width=8) (actual time=890.259..18292.701 rows=15354088 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.017..4655.860 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2427158.54 rows=289127 width=15) (actual time=0.080..24534.920 rows=313192 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..3029913.46 rows=289127 width=27) (actual time=9891.003..34777.169 rows=313192 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=9797.558..9797.558 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.303..31.457 rows=3990 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.302..24.285 rows=3990 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.185..3919.353 rows=319200 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=32.513..4335.612 rows=319200 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=32.449..32.449 rows=3990 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.115..25.115 rows=3990 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.272..23.607 rows=3990 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.283..30.834 rows=3990 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824304.52 rows=58866428 width=20) (actual time=0.015..19375.490 rows=58670345 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1833346.51 rows=14959855 width=12) (actual time=0.030..18265.865 rows=14822772 loops=1)
Q10,1.0,->  Hash  (cost=270654.22..270654.22 rows=586662 width=8) (actual time=9601.195..9601.195 rows=573887 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6053.29..270654.22 rows=586662 width=8) (actual time=27.697..9334.047 rows=573887 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=406229)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1504711)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..126.70 rows=1 width=16) (actual time=0.311..0.351 rows=0 loops=4786)
Q19,,->  BitmapOr  (cost=12871.77..12871.77 rows=4827 width=0) (actual time=31.824..31.824 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6281.72..6281.72 rows=2422 width=0) (actual time=8.536..8.536 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4300.72..4300.72 rows=1608 width=0) (actual time=9.111..9.111 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.83..2288.83 rows=797 width=0) (actual time=10.474..10.474 rows=0 loops=1)
