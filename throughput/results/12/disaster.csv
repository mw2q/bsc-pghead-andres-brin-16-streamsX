Q21,693400.0,->  Nested Loop Semi Join  (cost=2406.31..2876338.61 rows=1 width=34) (actual time=32.612..39456.910 rows=693400 loops=1)
Q3,322505.8,->  Sort  (cost=2575027.77..2583090.41 rows=3225058 width=20) (actual time=38513.656..38513.657 rows=10 loops=1)
Q18,304166.6,->  GroupAggregate  (cost=10183086.31..11011179.92 rows=30112495 width=39) (actual time=77717.714..77718.051 rows=99 loops=1)
Q18,76060.2,->  Hash Join  (cost=2184242.38..2799168.60 rows=7529968 width=39) (actual time=51659.144..57849.737 rows=99 loops=1)
Q18,76060.2,->  Hash Join  (cost=2115214.38..2617191.08 rows=7529968 width=20) (actual time=50448.314..56638.617 rows=99 loops=1)
Q18,76060.2,->  Hash  (cost=2799168.60..2799168.60 rows=7529968 width=39) (actual time=57849.976..57849.976 rows=99 loops=1)
Q18,43452.3,->  Sort  (cost=10183086.31..10258367.55 rows=30112495 width=39) (actual time=77717.705..77717.753 rows=693 loops=1)
Q18,43452.3,->  Hash Join  (cost=2893293.20..5619144.43 rows=30112495 width=39) (actual time=57949.179..77716.689 rows=693 loops=1)
Q18,41031.8,->  Hash  (cost=2064437.41..2064437.41 rows=4062158 width=4) (actual time=50296.141..50296.141 rows=99 loops=1)
Q18,41031.8,->  HashAggregate  (cost=1973038.85..2023815.83 rows=4062158 width=8) (actual time=43002.934..50295.904 rows=99 loops=1)
Q21,38602.0,->  Nested Loop Anti Join  (cost=2406.88..2876340.39 rows=1 width=26) (actual time=33.943..42353.201 rows=38602 loops=1)
Q10,28526.9,->  Sort  (cost=2299792.60..2301218.95 rows=570538 width=175) (actual time=36879.711..36879.716 rows=20 loops=1)
Q9,24633.8,->  Sort  (cost=1170301.46..1170301.79 rows=132 width=46) (actual time=103856.409..104542.810 rows=3251665 loops=1)
Q9,24633.8,->  Nested Loop  (cost=66874.64..1170292.77 rows=132 width=24) (actual time=991.331..94324.133 rows=3251665 loops=1)
Q9,24633.8,->  Nested Loop  (cost=66874.21..1170228.79 rows=132 width=24) (actual time=991.315..60808.345 rows=3251665 loops=1)
Q9,24633.8,->  Nested Loop  (cost=66873.92..1170186.20 rows=132 width=28) (actual time=991.306..49657.288 rows=3251665 loops=1)
Q9,24633.8,->  Hash Join  (cost=66876.21..1170296.81 rows=132 width=46) (actual time=991.380..97679.443 rows=3251665 loops=1)
Q2,4776.0,->  Merge Join  (cost=465687.75..885355.23 rows=1 width=190) (actual time=6660.409..8423.886 rows=4776 loops=1)
Q21,3924.0,->  HashAggregate  (cost=2876340.40..2876340.41 rows=1 width=26) (actual time=42409.953..42410.941 rows=3924 loops=1)
Q15,3690.0,->  Subquery Scan on revenue12  (cost=2036019.09..2036102.12 rows=3690 width=12) (actual time=42287.167..42290.630 rows=1 loops=1)
Q15,3690.0,->  Sort  (cost=2036320.74..2036329.96 rows=3690 width=12) (actual time=42290.676..42290.677 rows=1 loops=1)
Q15,3690.0,Merge Join  (cost=4055533.65..4060630.20 rows=3690 width=79) (actual time=42324.381..42324.385 rows=1 loops=1)
Q15,3690.0,->  HashAggregate  (cost=2036019.09..2036065.22 rows=3690 width=12) (actual time=42287.166..42290.628 rows=1 loops=1)
Q7,763.7,Sort  (cost=2118894.33..2118901.97 rows=3055 width=64) (actual time=25598.896..25598.896 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2118671.67..2118717.49 rows=3055 width=64) (actual time=25598.833..25598.842 rows=4 loops=1)
Q8,365.0,Sort  (cost=1705176.95..1705178.77 rows=730 width=38) (actual time=11754.417..11754.417 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1705129.46..1705142.23 rows=730 width=38) (actual time=11754.379..11754.380 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2876340.42..2876340.42 rows=1 width=26) (actual time=42412.104..42412.110 rows=100 loops=1)
Q21,100.0,Limit  (cost=2876340.42..2876340.42 rows=1 width=26) (actual time=42412.106..42412.123 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=885355.24..885355.25 rows=1 width=190) (actual time=8428.678..8428.693 rows=100 loops=1)
Q2,100.0,Limit  (cost=885355.24..885355.25 rows=1 width=190) (actual time=8428.679..8428.706 rows=100 loops=1)
Q11,31.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=7290.567..7291.772 rows=10265 loops=1)
Q11,31.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=7180.521..7284.850 rows=10265 loops=1)
Q3,28.4,->  HashAggregate  (cost=2473084.85..2505335.43 rows=3225058 width=20) (actual time=38402.042..38458.694 rows=113391 loops=1)
Q15,27.1,->  HashAggregate  (cost=2019129.58..2019166.48 rows=3690 width=12) (actual time=20565.906..20597.078 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=719569)
Q14,14.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7512.42 rows=736442 width=0) (actual time=135.193..135.193 rows=10814720 loops=1)
Q3,10.7,->  Hash Join  (cost=772851.65..2424708.98 rows=3225058 width=20) (actual time=9171.079..38102.688 rows=299467 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2405.06 rows=319073 width=0) (actual time=34.759..34.759 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.018..0.099 rows=8 loops=433392)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.608..3.608 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.639..3.639 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.275..0.275 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.253..0.253 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.246..0.246 rows=23040 loops=1)
Q5,5.0,Sort  (cost=2018850.13..2018850.19 rows=25 width=34) (actual time=14499.115..14499.115 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2018849.30..2018849.55 rows=25 width=34) (actual time=14499.069..14499.071 rows=5 loops=1)
Q4,5.0,Sort  (cost=1487062.36..1487062.36 rows=1 width=16) (actual time=22690.252..22690.253 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.13 rows=5 width=4) (actual time=0.015..0.015 rows=1 loops=574055)
Q4,5.0,->  HashAggregate  (cost=1487062.34..1487062.35 rows=1 width=16) (actual time=22690.202..22690.203 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=693400)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5775.51 rows=573551 width=0) (actual time=27.584..27.584 rows=2558720 loops=1)
Q13,4.4,Sort  (cost=853603.15..853603.65 rows=200 width=8) (actual time=31331.587..31331.589 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=853593.51..853595.51 rows=200 width=8) (actual time=31331.508..31331.518 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5817.76 rows=577776 width=0) (actual time=27.649..27.649 rows=2566400 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.011..0.011 rows=1 loops=1195584)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.010..0.012 rows=4 loops=456092)
Q17,3.6,->  Nested Loop  (cost=78.17..111152.89 rows=19563 width=4) (actual time=1.618..241.693 rows=5424 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5919.46..1486293.41 rows=153786 width=16) (actual time=27.803..22304.782 rows=526787 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.61 rows=10 width=12) (actual time=0.015..0.043 rows=3 loops=1982)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..249050.96 rows=33187061 width=0) (actual time=122.934..122.934 rows=10803200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.352..0.423 rows=3 loops=21632)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54887.17 rows=7312956 width=0) (actual time=27.595..27.595 rows=2568960 loops=1)
Q22,2.3,Sort  (cost=694047.76..694047.76 rows=3 width=20) (actual time=9459.257..9459.258 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641181.94..641181.98 rows=3 width=20) (actual time=9459.205..9459.208 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.040..0.056 rows=2 loops=6442)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.203..4.203 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403347.78..404828.13 rows=592142 width=40) (actual time=10379.783..10534.624 rows=1186984 loops=1)
Q16,2.0,->  Hash Join  (cost=54695.02..346574.44 rows=592142 width=40) (actual time=1335.373..6779.007 rows=1186984 loops=1)
Q12,2.0,Sort  (cost=3038028.73..3038028.73 rows=1 width=27) (actual time=35042.686..35042.686 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3038028.71..3038028.72 rows=1 width=27) (actual time=35042.598..35042.600 rows=2 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.49..12023795.26 rows=29578 width=4) (actual time=13.236..9329.049 rows=58657 loops=1)
Q20,1.9,->  Hash  (cost=12023795.26..12023795.26 rows=29578 width=4) (actual time=9363.911..9363.911 rows=58657 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.348..3871.436 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=347440.61..2264641.96 rows=570538 width=175) (actual time=12442.997..34577.467 rows=1136686 loops=1)
Q10,1.9,->  Hash Join  (cost=347439.04..2256795.50 rows=570538 width=153) (actual time=12442.964..34175.020 rows=1136686 loops=1)
Q10,1.9,->  Hash Join  (cost=278411.04..2179209.43 rows=570538 width=12) (actual time=10772.024..31673.220 rows=1136686 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1836996.01 rows=20234934 width=8) (actual time=0.014..19815.032 rows=37966174 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2349517.38 rows=394220 width=38) (actual time=32.585..34785.869 rows=719569 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1923376.30 rows=809397 width=34) (actual time=32.496..27147.299 rows=1491227 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.040..0.298 rows=56 loops=1)
Q1,1.5,Sort  (cost=4197064.18..4197064.20 rows=6 width=20) (actual time=90847.656..90847.657 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4197064.00..4197064.10 rows=6 width=20) (actual time=90847.605..90847.607 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2278905.41..2284610.79 rows=570538 width=175) (actual time=36505.630..36741.468 rows=378817 loops=1)
Q20,1.4,Sort  (cost=12026608.78..12026611.74 rows=1183 width=51) (actual time=9397.313..9397.410 rows=1753 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=12024207.99..12026548.40 rows=1183 width=51) (actual time=9364.339..9396.042 rows=1753 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.169..4.169 rows=405760 loops=1)
Q9,1.3,GroupAggregate  (cost=1170301.46..1170306.08 rows=132 width=46) (actual time=103866.542..106770.748 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2871.78 rows=139678 width=0) (actual time=794.368..794.368 rows=190402 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2906.70..41851.25 rows=139678 width=24) (actual time=803.068..1255.519 rows=190402 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91437.91 rows=9128991 width=0) (actual time=128.927..128.927 rows=10728960 loops=1)
Q15,1.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.023..25.405 rows=83935 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=108108 width=4) (actual time=0.011..950.226 rows=108348 loops=1)
Q9,1.0,->  Hash Join  (cost=66873.35..352155.67 rows=432432 width=16) (actual time=991.217..5838.771 rows=433392 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=108108 width=4) (actual time=990.687..990.687 rows=108348 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.742..2201.486 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.95..1657435.01 rows=119987 width=20) (actual time=7.352..9144.988 rows=121414 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.52..1463704.74 rows=395650 width=16) (actual time=7.302..4518.799 rows=401002 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.39..1704198.01 rows=23997 width=16) (actual time=2309.254..11674.838 rows=24144 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.30 rows=31 width=20) (actual time=0.029..0.319 rows=30 loops=13376)
Q8,1.0,->  Hash Join  (cost=38738.96..1704649.52 rows=23997 width=38) (actual time=2309.299..11713.981 rows=24144 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.10..1696455.08 rows=23997 width=16) (actual time=2309.243..11524.597 rows=24144 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2299.043..2299.043 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.68 rows=13100 width=0) (actual time=4.928..4.928 rows=13376 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=405.95..27832.29 rows=13100 width=4) (actual time=7.248..119.793 rows=13376 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.640..430.289 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.006..3628.939 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2105934.40 rows=1456067 width=42) (actual time=915.223..24789.124 rows=1450789 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2117762.73 rows=60596 width=64) (actual time=954.651..25501.920 rows=58254 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=915.201..10325.785 rows=1195584 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.039..842.283 rows=119846 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.036..37.011 rows=8041 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=914.708..914.708 rows=119846 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.263..39.263 rows=8041 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91637.34..1369893.64 rows=797726 width=8) (actual time=129.872..26531.764 rows=796250 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..483528.15 rows=2304561 width=8) (actual time=0.013..4298.841 rows=2279304 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.745..2035.318 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1998871.85 rows=1843188 width=46) (actual time=2152.116..13575.807 rows=1823611 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2018112.03 rows=73727 width=34) (actual time=2206.541..14424.553 rows=73180 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..535121.00 rows=460912 width=38) (actual time=2152.094..7580.555 rows=456092 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2149.698..2149.698 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.671..397.353 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5918.90..270323.16 rows=573551 width=20) (actual time=27.773..13323.883 rows=574055 loops=1)
Q3,1.0,->  Hash Join  (cost=106598.82..497028.05 rows=1478070 width=12) (actual time=420.172..8376.391 rows=1442791 loops=1)
Q3,1.0,->  Hash  (cost=497028.05..497028.05 rows=1478070 width=12) (actual time=9037.114..9037.114 rows=1442791 loops=1)
Q3,1.0,->  Hash  (cost=46093.72..46093.72 rows=303175 width=4) (actual time=389.900..389.900 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6950.24 rows=303175 width=0) (actual time=67.143..67.143 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56715.41..404940.36 rows=7312956 width=16) (actual time=27.758..4847.876 rows=7215550 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=257347.73..1752502.99 rows=33187061 width=12) (actual time=123.697..22819.116 rows=32690033 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=7026.03..46093.72 rows=303175 width=4) (actual time=76.247..308.114 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=4) (actual time=0.015..3498.733 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=4) (actual time=7966.005..7966.005 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597216.54..640742.99 rows=58527 width=20) (actual time=8845.167..9432.404 rows=63360 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6543.32 rows=380842 width=0) (actual time=106.229..106.229 rows=381342 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6638.53..51913.63 rows=380842 width=4) (actual time=117.370..664.583 rows=381342 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.310..31.269 rows=3924 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.441..32.441 rows=3924 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.296..30.617 rows=3924 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6659.972..6783.123 rows=1586787 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.318..141.719 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7911 width=30) (actual time=0.174..951.599 rows=8094 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=154.256..5497.968 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=154.107..154.107 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.254..27.387 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.275..29.835 rows=3934 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=8.942..8.942 rows=21632 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.261..29.168 rows=3934 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.579..156.922 rows=21632 loops=1)
Q19,1.0,->  Nested Loop  (cost=12870.62..635388.34 rows=1135 width=8) (actual time=34.825..1793.124 rows=1158 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.171..4.171 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.91 rows=8120 width=0) (actual time=3.386..3.386 rows=7945 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.55 rows=7986 width=0) (actual time=3.602..3.602 rows=8172 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.87 rows=7915 width=0) (actual time=3.615..3.615 rows=7987 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12870.06..26670.47 rows=4803 width=30) (actual time=32.941..283.572 rows=4842 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=16) (actual time=0.005..2574.871 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1671913.90 rows=60224990 width=8) (actual time=0.007..11314.768 rows=60045303 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1671913.90 rows=60224990 width=8) (actual time=0.010..7673.625 rows=60045303 loops=1)
Q18,1.0,Limit  (cost=10183086.31..10183089.06 rows=100 width=39) (actual time=77717.717..77718.063 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.048 rows=30 loops=1982)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.048 rows=30 loops=1982)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..67.92 rows=1949 width=0) (actual time=0.936..0.936 rows=1982 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.40..6475.48 rows=1949 width=4) (actual time=1.269..38.737 rows=1982 loops=1)
Q16,1.0,Sort  (cost=413075.67..413145.06 rows=27757 width=40) (actual time=11185.876..11189.476 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=50977.90..50977.90 rows=296071 width=40) (actual time=1332.486..1332.486 rows=296910 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403347.78..411027.12 rows=27757 width=40) (actual time=10379.832..11126.975 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2479.08..50977.90 rows=296071 width=40) (actual time=34.826..1205.602 rows=296910 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1996610.23 rows=2251935 width=12) (actual time=0.039..18644.186 rows=2249262 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1996610.23 rows=2251935 width=12) (actual time=5.079..19427.786 rows=2249262 loops=1)
Q14,1.0,->  Hash Join  (cost=93218.53..1138088.37 rows=736442 width=29) (actual time=1690.421..38558.712 rows=747514 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7696.53..1041519.74 rows=736442 width=12) (actual time=136.038..35954.033 rows=747514 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=15028456 width=8) (actual time=0.020..8510.972 rows=14853481 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740951.23 rows=15028456 width=8) (actual time=1408.546..19914.610 rows=15353502 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=20) (actual time=0.012..5202.578 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2429556.85 rows=290503 width=15) (actual time=0.053..24068.578 rows=311504 loops=1)
Q12,1.0,->  Hash Join  (cost=594309.84..3032944.91 rows=290503 width=27) (actual time=10315.691..34713.231 rows=311504 loops=1)
Q12,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=20) (actual time=10239.080..10239.080 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.294..31.594 rows=3924 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.294..23.809 rows=3924 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.751..3876.162 rows=313920 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=32.578..2989.988 rows=313920 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=32.533..32.533 rows=3924 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.673..24.673 rows=3924 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.264..23.220 rows=3924 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.272..30.997 rows=3924 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817039.60 rows=59500610 width=20) (actual time=0.010..18861.373 rows=59472925 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1838825.89 rows=15004566 width=12) (actual time=0.034..17308.149 rows=14822649 loops=1)
Q10,1.0,->  Hash  (cost=271188.84..271188.84 rows=577776 width=8) (actual time=10766.899..10766.899 rows=568323 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5962.20..271188.84 rows=577776 width=8) (actual time=27.821..10512.377 rows=568323 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=401002)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1491227)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..126.73 rows=1 width=16) (actual time=0.277..0.310 rows=0 loops=4842)
Q19,,->  BitmapOr  (cost=12870.06..12870.06 rows=4807 width=0) (actual time=28.867..28.867 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6281.83..6281.83 rows=2426 width=0) (actual time=8.209..8.209 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4300.07..4300.07 rows=1595 width=0) (actual time=8.535..8.535 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2287.66..2287.66 rows=785 width=0) (actual time=8.527..8.527 rows=0 loops=1)
