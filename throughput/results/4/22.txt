BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substr(c_phone, 1, 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substr(c_phone, 1, 2) in
				('17', '23', '25', '31', '32', '22', '18')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substr(c_phone, 1, 2) in
						('17', '23', '25', '31', '32', '22', '18')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as vip
group by
	cntrycode
order by
	cntrycode;
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=699968.51..699968.52 rows=3 width=20) (actual time=9654.953..9654.953 rows=7 loops=1)
   Sort Key: (substr((customer.c_phone)::text, 1, 2))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=211269 read=118099 dirtied=148 written=5790
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=52872.86..52872.87 rows=1 width=4) (actual time=664.366..664.366 rows=1 loops=1)
           Buffers: shared hit=230 read=36112
           ->  Bitmap Heap Scan on customer customer_1  (cost=6640.05..51920.27 rows=381037 width=4) (actual time=109.243..592.280 rows=381774 loops=1)
                 Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{17,23,25,31,32,22,18}'::text[])) AND (c_acctbal > 0::double precision))
                 Heap Blocks: exact=35278
                 Buffers: shared hit=230 read=36112
                 ->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6544.79 rows=381037 width=0) (actual time=100.168..100.168 rows=381774 loops=1)
                       Index Cond: (substr((c_phone)::text, 1, 2) = ANY ('{17,23,25,31,32,22,18}'::text[]))
                       Buffers: shared hit=11 read=1053
   ->  HashAggregate  (cost=647095.56..647095.61 rows=3 width=20) (actual time=9654.907..9654.908 rows=7 loops=1)
         Group Key: substr((customer.c_phone)::text, 1, 2)
         Buffers: shared hit=211266 read=118099 dirtied=148 written=5790
         ->  Hash Anti Join  (cost=603125.69..646656.39 rows=58557 width=20) (actual time=8952.061..9625.847 rows=63515 loops=1)
               Hash Cond: (customer.c_custkey = orders.o_custkey)
               Buffers: shared hit=211266 read=118099 dirtied=148 written=5790
               ->  Bitmap Heap Scan on customer  (cost=2907.42..41853.86 rows=139750 width=24) (actual time=729.497..1263.031 rows=190756 loops=1)
                     Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{17,23,25,31,32,22,18}'::text[])) AND (c_acctbal > $0))
                     Heap Blocks: exact=35153
                     Buffers: shared hit=243 read=71799 written=5446
                     ->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.48 rows=139750 width=0) (actual time=720.763..720.763 rows=190756 loops=1)
                           Index Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{17,23,25,31,32,22,18}'::text[])) AND (c_acctbal > $0))
                           Buffers: shared hit=241 read=36648
               ->  Hash  (cost=409719.23..409719.23 rows=15239923 width=4) (actual time=8141.923..8141.923 rows=15000000 loops=1)
                     Buckets: 16777216  Batches: 1  Memory Usage: 658416kB
                     Buffers: shared hit=211020 read=46300 dirtied=148 written=344
                     ->  Seq Scan on orders  (cost=0.00..409719.23 rows=15239923 width=4) (actual time=0.012..3766.766 rows=15000000 loops=1)
                           Buffers: shared hit=211020 read=46300 dirtied=148 written=344
 Planning time: 2.618 ms
 Execution time: 9669.796 ms
(34 rows)

COMMIT;
COMMIT
