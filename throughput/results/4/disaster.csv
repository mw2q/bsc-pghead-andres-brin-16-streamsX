Q21,716646.0,->  Nested Loop Semi Join  (cost=2406.31..2847797.86 rows=1 width=34) (actual time=51.970..41695.433 rows=716646 loops=1)
Q3,320038.8,->  Sort  (cost=2570426.35..2578427.32 rows=3200388 width=20) (actual time=34351.358..34351.360 rows=10 loops=1)
Q18,303223.0,->  GroupAggregate  (cost=10253808.49..11087671.93 rows=30322307 width=39) (actual time=94190.904..94191.231 rows=100 loops=1)
Q18,75824.7,->  Hash Join  (cost=2197989.74..2816920.37 rows=7582472 width=39) (actual time=53835.792..62558.298 rows=100 loops=1)
Q18,75824.7,->  Hash Join  (cost=2128961.74..2634155.29 rows=7582472 width=20) (actual time=52990.421..61712.478 rows=100 loops=1)
Q18,75824.7,->  Hash  (cost=2816920.37..2816920.37 rows=7582472 width=39) (actual time=62558.549..62558.549 rows=100 loops=1)
Q18,43317.5,->  Sort  (cost=10253808.49..10329614.26 rows=30322307 width=39) (actual time=94190.894..94190.937 rows=700 loops=1)
Q18,43317.5,->  Hash Join  (cost=2911701.27..5656545.17 rows=30322307 width=39) (actual time=62817.545..94189.846 rows=700 loops=1)
Q18,40621.5,->  Hash  (cost=2078184.77..2078184.77 rows=4062158 width=4) (actual time=52767.985..52767.985 rows=100 loops=1)
Q18,40621.5,->  HashAggregate  (cost=1986786.21..2037563.19 rows=4062158 width=8) (actual time=45945.754..52767.751 rows=100 loops=1)
Q21,40173.0,->  Nested Loop Anti Join  (cost=2406.88..2847799.64 rows=1 width=26) (actual time=53.488..44667.994 rows=40173 loops=1)
Q9,31939.1,->  Sort  (cost=986957.68..986957.93 rows=102 width=46) (actual time=111474.796..112154.499 rows=3257795 loops=1)
Q9,31939.1,->  Nested Loop  (cost=66574.34..986950.80 rows=102 width=24) (actual time=942.115..101771.950 rows=3257795 loops=1)
Q9,31939.1,->  Nested Loop  (cost=66573.91..986901.36 rows=102 width=24) (actual time=942.095..64262.202 rows=3257795 loops=1)
Q9,31939.1,->  Nested Loop  (cost=66573.62..986868.45 rows=102 width=28) (actual time=942.085..52847.382 rows=3257795 loops=1)
Q9,31939.1,->  Hash Join  (cost=66575.90..986954.27 rows=102 width=46) (actual time=942.166..105176.131 rows=3257795 loops=1)
Q10,27572.5,->  Sort  (cost=2290741.64..2292120.27 rows=551450 width=175) (actual time=33361.324..33361.326 rows=20 loops=1)
Q2,4859.0,->  Merge Join  (cost=465687.75..894393.15 rows=1 width=190) (actual time=5111.406..6832.638 rows=4859 loops=1)
Q21,4054.0,->  HashAggregate  (cost=2847799.65..2847799.66 rows=1 width=26) (actual time=44725.431..44726.763 rows=4054 loops=1)
Q15,3723.0,->  Subquery Scan on revenue4  (cost=1471423.39..1471507.16 rows=3723 width=12) (actual time=56548.764..56569.094 rows=1 loops=1)
Q15,3723.0,->  Sort  (cost=1471727.97..1471737.28 rows=3723 width=12) (actual time=56569.115..56569.116 rows=1 loops=1)
Q15,3723.0,Merge Join  (cost=2926396.31..2931493.36 rows=3723 width=79) (actual time=56604.743..56604.746 rows=1 loops=1)
Q15,3723.0,->  HashAggregate  (cost=1471423.39..1471469.93 rows=3723 width=12) (actual time=56548.762..56569.091 rows=1 loops=1)
Q7,763.7,Sort  (cost=2158304.85..2158312.49 rows=3055 width=64) (actual time=23961.373..23961.373 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2158082.19..2158128.02 rows=3055 width=64) (actual time=23961.301..23961.311 rows=4 loops=1)
Q8,365.0,Sort  (cost=1780094.19..1780096.01 rows=730 width=38) (actual time=11624.918..11624.919 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1780046.70..1780059.47 rows=730 width=38) (actual time=11624.870..11624.872 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2847799.67..2847799.67 rows=1 width=26) (actual time=44727.992..44727.999 rows=100 loops=1)
Q21,100.0,Limit  (cost=2847799.67..2847799.67 rows=1 width=26) (actual time=44727.993..44728.008 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=894393.16..894393.16 rows=1 width=190) (actual time=6837.587..6837.601 rows=100 loops=1)
Q2,100.0,Limit  (cost=894393.16..894393.16 rows=1 width=190) (actual time=6837.589..6837.615 rows=100 loops=1)
Q11,34.7,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8986.988..8988.089 rows=9218 loops=1)
Q11,34.7,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8889.477..8981.961 rows=9218 loops=1)
Q3,28.1,->  HashAggregate  (cost=2469263.23..2501267.11 rows=3200388 width=20) (actual time=34290.512..34330.482 rows=113743 loops=1)
Q15,26.8,->  HashAggregate  (cost=1454584.27..1454621.50 rows=3723 width=12) (actual time=28793.548..28826.687 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=743941)
Q14,15.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7232.53 rows=708453 width=0) (actual time=152.276..152.276 rows=10686720 loops=1)
Q3,10.6,->  Hash Join  (cost=774093.00..2421257.41 rows=3200388 width=20) (actual time=9322.567..34020.634 rows=300248 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2412.56 rows=320073 width=0) (actual time=54.944..54.944 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.021..0.104 rows=7 loops=434508)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.624..3.624 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.642..3.642 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.247..0.247 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.268..0.268 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.253..0.253 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.010 rows=1 loops=1199988)
Q5,5.0,Sort  (cost=1906681.37..1906681.44 rows=25 width=34) (actual time=19949.482..19949.482 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1906680.54..1906680.79 rows=25 width=34) (actual time=19949.445..19949.446 rows=5 loops=1)
Q4,5.0,Sort  (cost=1487380.76..1487380.76 rows=1 width=16) (actual time=12815.559..12815.560 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=573823)
Q4,5.0,->  HashAggregate  (cost=1487380.74..1487380.75 rows=1 width=16) (actual time=12815.507..12815.509 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=716646)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5624.58 rows=558458 width=0) (actual time=27.570..27.570 rows=2558720 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5802.89 rows=576289 width=0) (actual time=27.505..27.505 rows=2548480 loops=1)
Q13,4.3,Sort  (cost=854766.39..854766.89 rows=200 width=8) (actual time=31675.623..31675.625 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=854756.75..854758.75 rows=200 width=8) (actual time=31675.554..31675.564 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.019..0.021 rows=4 loops=457410)
Q17,3.6,->  Nested Loop  (cost=82.64..113739.02 rows=20045 width=4) (actual time=1.615..214.002 rows=5555 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5947.52..1486605.06 rows=155135 width=16) (actual time=27.695..12516.842 rows=526131 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.015..0.036 rows=3 loops=2072)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245524.25 rows=32716833 width=0) (actual time=121.081..121.081 rows=10835200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.259..0.329 rows=3 loops=21669)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..56136.75 rows=7479567 width=0) (actual time=27.751..27.751 rows=2576640 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44252.08 rows=5894944 width=0) (actual time=27.132..27.132 rows=2535680 loops=1)
Q22,2.3,Sort  (cost=699968.51..699968.52 rows=3 width=20) (actual time=9654.953..9654.953 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=647095.56..647095.61 rows=3 width=20) (actual time=9654.907..9654.908 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.036..0.051 rows=2 loops=6492)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.657..4.657 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3035011.62..3035011.63 rows=1 width=27) (actual time=34416.022..34416.022 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3035011.60..3035011.61 rows=1 width=27) (actual time=34415.971..34415.972 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345952.35..2256767.00 rows=551450 width=175) (actual time=10023.285..31157.639 rows=1113966 loops=1)
Q10,2.0,->  Hash Join  (cost=345950.79..2249183.00 rows=551450 width=153) (actual time=10023.257..30757.086 rows=1113966 loops=1)
Q10,2.0,->  Hash Join  (cost=276922.79..2171883.25 rows=551450 width=12) (actual time=8373.150..28423.138 rows=1113966 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2326283.63 rows=390328 width=38) (actual time=51.940..37144.292 rows=743941 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1904414.01 rows=801408 width=34) (actual time=51.702..28230.040 rows=1538206 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.49..12023795.26 rows=29578 width=4) (actual time=13.501..7378.886 rows=58830 loops=1)
Q20,1.9,->  Hash  (cost=12023795.26..12023795.26 rows=29578 width=4) (actual time=7413.296..7413.296 rows=58830 loops=1)
Q16,1.9,->  Sort  (cost=403584.82..405069.46 rows=593854 width=40) (actual time=12806.055..12976.915 rows=1185929 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.309..5867.404 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54738.43..346634.97 rows=593854 width=40) (actual time=1378.505..8871.433 rows=1185929 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1818862.65 rows=20035191 width=8) (actual time=0.016..20587.833 rows=37966905 loops=1)
Q9,1.7,GroupAggregate  (cost=986957.68..986961.25 rows=102 width=46) (actual time=111485.241..114395.444 rows=175 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.036..0.276 rows=56 loops=1)
Q20,1.5,Sort  (cost=12026608.78..12026611.74 rows=1183 width=51) (actual time=7442.930..7443.021 rows=1780 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12024207.99..12026548.40 rows=1183 width=51) (actual time=7413.716..7441.640 rows=1780 loops=1)
Q15,1.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..120734.27 rows=16078169 width=0) (actual time=119.254..119.254 rows=10696960 loops=1)
Q15,1.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..120734.27 rows=16078169 width=0) (actual time=118.364..118.364 rows=10696960 loops=1)
Q1,1.5,Sort  (cost=4249174.79..4249174.81 rows=6 width=20) (actual time=92722.095..92722.095 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4249174.61..4249174.71 rows=6 width=20) (actual time=92722.041..92722.043 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.611..4.611 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2270553.25..2276067.75 rows=551450 width=175) (actual time=33032.642..33224.819 rows=372912 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.48 rows=139750 width=0) (actual time=720.763..720.763 rows=190756 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2907.42..41853.86 rows=139750 width=24) (actual time=729.497..1263.031 rows=190756 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=84084 width=4) (actual time=0.012..902.682 rows=108627 loops=1)
Q9,1.2,->  Hash Join  (cost=66573.05..350894.41 rows=336336 width=16) (actual time=942.043..6622.341 rows=434508 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=84084 width=4) (actual time=941.501..941.501 rows=108627 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91324.32 rows=9117632 width=0) (actual time=120.180..120.180 rows=10718720 loops=1)
Q15,1.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..25.320 rows=87911 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.743..2367.982 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=428.22..1731846.61 rows=126465 width=20) (actual time=28.958..8832.203 rows=122730 loops=1)
Q8,1.0,->  Nested Loop  (cost=427.79..1527655.04 rows=417010 width=16) (actual time=28.703..4696.669 rows=403707 loops=1)
Q8,1.0,->  Nested Loop  (cost=38758.66..1779065.03 rows=25293 width=16) (actual time=2501.767..11544.951 rows=24547 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.47 rows=31 width=20) (actual time=0.027..0.326 rows=30 loops=13420)
Q8,1.0,->  Hash Join  (cost=38760.23..1779540.84 rows=25293 width=38) (actual time=2501.815..11584.176 rows=24547 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.37..1770903.93 rows=25293 width=16) (actual time=2501.752..11384.274 rows=24547 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2470.263..2470.263 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..423.78 rows=13780 width=0) (actual time=4.778..4.778 rows=13420 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=427.22..28661.99 rows=13780 width=4) (actual time=28.640..187.148 rows=13420 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.660..463.546 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409719.23 rows=15239923 width=8) (actual time=0.006..2957.551 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2145228.35 rows=1474922 width=42) (actual time=636.976..23084.763 rows=1459976 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2157161.49 rows=61380 width=64) (actual time=685.144..23842.832 rows=59107 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..537665.28 rows=1219194 width=30) (actual time=636.952..9724.869 rows=1199988 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.083..595.737 rows=119844 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..44.785 rows=8086 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=636.310..636.310 rows=119844 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=47.493..47.493 rows=8086 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91514.42..1368456.14 rows=760373 width=8) (actual time=120.956..27890.654 rows=762557 loops=1)
Q5,1.0,->  Nested Loop  (cost=83165.21..1886841.24 rows=1826545 width=46) (actual time=2777.153..19031.752 rows=1828507 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.725..2638.110 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=87844.21..1905949.93 rows=73061 width=34) (actual time=2825.599..19853.667 rows=73049 loops=1)
Q5,1.0,->  Hash Join  (cost=83164.65..438242.29 rows=456747 width=38) (actual time=2777.136..8729.114 rows=457410 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2747.209..2747.209 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44823.02..386769.18 rows=2283737 width=8) (actual time=27.948..4919.881 rows=2281857 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.673..517.538 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5946.96..269378.29 rows=576289 width=20) (actual time=27.675..4626.008 rows=573823 loops=1)
Q3,1.0,->  Hash Join  (cost=107698.00..501736.44 rows=1492248 width=12) (actual time=427.543..8568.237 rows=1471948 loops=1)
Q3,1.0,->  Hash  (cost=501736.44..501736.44 rows=1492248 width=12) (actual time=9190.448..9190.448 rows=1471948 loops=1)
Q3,1.0,->  Hash  (cost=45950.54..45950.54 rows=299265 width=4) (actual time=397.100..397.100 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6856.91 rows=299265 width=0) (actual time=70.744..70.744 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=58006.64..409074.23 rows=7479567 width=16) (actual time=27.915..5160.009 rows=7359334 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253703.46..1746175.87 rows=32716833 width=12) (actual time=121.847..19151.918 rows=32115832 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6931.73..45950.54 rows=299265 width=4) (actual time=79.982..316.828 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..409719.23 rows=15239923 width=4) (actual time=0.012..3766.766 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=409719.23..409719.23 rows=15239923 width=4) (actual time=8141.923..8141.923 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=603125.69..646656.39 rows=58557 width=20) (actual time=8952.061..9625.847 rows=63515 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6544.79 rows=381037 width=0) (actual time=100.168..100.168 rows=381774 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6640.05..51920.27 rows=381037 width=4) (actual time=109.243..592.280 rows=381774 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.295..50.481 rows=4054 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=51.630..51.630 rows=4054 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.284..49.829 rows=4054 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=5111.121..5232.932 rows=1602280 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.354..134.746 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8142 width=30) (actual time=0.100..944.720 rows=8121 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=146.112..4049.524 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=145.972..145.972 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.267..26.037 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.275..26.822 rows=4049 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.307..9.307 rows=21669 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.259..26.215 rows=4049 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.853..221.041 rows=21669 loops=1)
Q19,1.0,->  Nested Loop  (cost=12876.54..618124.30 rows=1127 width=8) (actual time=41.027..4052.171 rows=1133 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=7.796..7.796 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.03 rows=8134 width=0) (actual time=4.045..4.045 rows=8073 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.75 rows=8104 width=0) (actual time=4.439..4.439 rows=8091 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.27 rows=7955 width=0) (actual time=3.748..3.748 rows=8112 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.028..0.028 rows=30 loops=4854)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12871.80..26710.33 rows=4820 width=30) (actual time=40.802..323.318 rows=4854 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=16) (actual time=0.005..5270.123 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1683563.14 rows=60644614 width=8) (actual time=0.004..13895.549 rows=60044872 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1683563.14 rows=60644614 width=8) (actual time=0.013..20217.144 rows=60044872 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.041 rows=30 loops=2072)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.041 rows=30 loops=2072)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.38 rows=1995 width=0) (actual time=0.911..0.911 rows=2072 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.88..6613.48 rows=1995 width=4) (actual time=1.263..35.871 rows=2072 loops=1)
Q16,1.0,Sort  (cost=413341.39..413410.99 rows=27837 width=40) (actual time=13646.019..13649.692 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51010.61..51010.61 rows=296927 width=40) (actual time=1375.757..1375.757 rows=296651 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403584.82..411286.37 rows=27837 width=40) (actual time=12806.115..13585.265 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2486.79..51010.61 rows=296927 width=40) (actual time=55.010..1251.343 rows=296651 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=121295.57..1432132.11 rows=2245216 width=12) (actual time=119.106..26535.544 rows=2246935 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=121295.57..1432132.11 rows=2245216 width=12) (actual time=120.013..25486.902 rows=2246935 loops=1)
Q14,1.0,->  Hash Join  (cost=92931.65..1116141.42 rows=708453 width=29) (actual time=2155.731..35066.641 rows=699485 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7409.65..1019992.62 rows=708453 width=12) (actual time=153.235..32150.588 rows=699485 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15042588 width=8) (actual time=0.018..7812.974 rows=14852900 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742043.81 rows=15042588 width=8) (actual time=1109.580..19739.121 rows=15352919 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.012..4080.749 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2427158.54 rows=289915 width=15) (actual time=0.125..24509.792 rows=310988 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..3029938.09 rows=289915 width=27) (actual time=9209.525..34104.534 rows=310988 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=9058.872..9058.872 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.310..30.858 rows=4009 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..23.803 rows=4009 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.711..3942.293 rows=320720 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=31.933..4565.189 rows=320720 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.856..31.856 rows=4009 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.644..24.644 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.274..23.119 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.289..30.208 rows=4009 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1838825.89 rows=60258718 width=20) (actual time=0.012..19631.895 rows=59575212 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1833346.51 rows=14959855 width=12) (actual time=0.038..16892.887 rows=14822772 loops=1)
Q10,1.0,->  Hash  (cost=269942.06..269942.06 rows=558458 width=8) (actual time=8368.452..8368.452 rows=555742 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5764.19..269942.06 rows=558458 width=8) (actual time=27.754..8124.636 rows=555742 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=403707)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1538206)
Q19,,->  BitmapOr  (cost=12871.80..12871.80 rows=4824 width=0) (actual time=36.497..36.497 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.718..0.758 rows=0 loops=4854)
Q19,,->  BitmapAnd  (cost=6281.96..6281.96 rows=2430 width=0) (actual time=9.459..9.459 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4299.80..4299.80 rows=1589 width=0) (actual time=12.511..12.511 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2289.55..2289.55 rows=804 width=0) (actual time=9.996..9.996 rows=0 loops=1)
