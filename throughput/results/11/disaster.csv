Q21,708280.0,->  Nested Loop Semi Join  (cost=2406.31..2882053.24 rows=1 width=34) (actual time=57.737..38842.952 rows=708280 loops=1)
Q18,401102.4,->  GroupAggregate  (cost=10173035.39..11000309.14 rows=30082682 width=39) (actual time=79316.904..79317.157 rows=75 loops=1)
Q3,318477.5,->  Sort  (cost=2559356.17..2567318.11 rows=3184775 width=20) (actual time=46241.553..46241.556 rows=10 loops=1)
Q18,100299.6,->  Hash Join  (cost=2182289.01..2796643.82 rows=7522476 width=39) (actual time=50797.687..58465.649 rows=75 loops=1)
Q18,100299.6,->  Hash Join  (cost=2113261.01..2614778.68 rows=7522476 width=20) (actual time=49468.198..57135.887 rows=75 loops=1)
Q18,100299.6,->  Hash  (cost=2796643.82..2796643.82 rows=7522476 width=39) (actual time=58465.845..58465.845 rows=75 loops=1)
Q18,57300.3,->  Sort  (cost=10173035.39..10248242.09 rows=30082682 width=39) (actual time=79316.893..79316.930 rows=525 loops=1)
Q18,57300.3,->  Hash Join  (cost=2890674.77..5613827.30 rows=30082682 width=39) (actual time=58711.815..79316.050 rows=525 loops=1)
Q18,54162.1,->  Hash  (cost=2062484.03..2062484.03 rows=4062158 width=4) (actual time=49320.017..49320.017 rows=75 loops=1)
Q18,54162.1,->  HashAggregate  (cost=1971085.48..2021862.45 rows=4062158 width=8) (actual time=42751.488..49319.783 rows=75 loops=1)
Q21,40131.0,->  Nested Loop Anti Join  (cost=2406.88..2882055.03 rows=1 width=26) (actual time=58.125..41685.635 rows=40131 loops=1)
Q10,28796.0,->  Sort  (cost=2283546.77..2284986.57 rows=575920 width=175) (actual time=35688.916..35688.919 rows=20 loops=1)
Q9,25964.3,->  Sort  (cost=1134595.26..1134595.57 rows=125 width=46) (actual time=102816.033..103564.457 rows=3245539 loops=1)
Q9,25964.3,->  Nested Loop  (cost=66799.57..1134587.00 rows=125 width=24) (actual time=1059.862..92884.115 rows=3245539 loops=1)
Q9,25964.3,->  Nested Loop  (cost=66799.13..1134526.42 rows=125 width=24) (actual time=1059.843..57705.584 rows=3245539 loops=1)
Q9,25964.3,->  Nested Loop  (cost=66798.84..1134486.08 rows=125 width=28) (actual time=1059.832..46387.319 rows=3245539 loops=1)
Q9,25964.3,->  Hash Join  (cost=66801.13..1134590.90 rows=125 width=46) (actual time=1059.936..96273.955 rows=3245539 loops=1)
Q2,4783.0,->  Merge Join  (cost=465687.75..882130.89 rows=1 width=190) (actual time=7241.141..9264.558 rows=4783 loops=1)
Q21,4004.0,->  HashAggregate  (cost=2882055.03..2882055.04 rows=1 width=26) (actual time=41744.642..41745.939 rows=4004 loops=1)
Q15,3725.0,->  Subquery Scan on revenue11  (cost=1757370.01..1757453.82 rows=3725 width=12) (actual time=59772.980..59799.352 rows=1 loops=1)
Q15,3725.0,->  Sort  (cost=1757674.77..1757684.08 rows=3725 width=12) (actual time=59799.373..59799.374 rows=1 loops=1)
Q15,3725.0,Merge Join  (cost=3498330.84..3503427.91 rows=3725 width=79) (actual time=59836.511..59836.513 rows=1 loops=1)
Q15,3725.0,->  HashAggregate  (cost=1757370.01..1757416.57 rows=3725 width=12) (actual time=59772.979..59799.349 rows=1 loops=1)
Q7,763.7,Sort  (cost=2160410.06..2160417.70 rows=3055 width=64) (actual time=25637.056..25637.056 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2160187.40..2160233.22 rows=3055 width=64) (actual time=25636.990..25636.997 rows=4 loops=1)
Q8,365.0,Sort  (cost=1718069.61..1718071.44 rows=730 width=38) (actual time=12446.816..12446.816 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1718022.12..1718034.89 rows=730 width=38) (actual time=12446.777..12446.778 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2882055.05..2882055.06 rows=1 width=26) (actual time=41747.046..41747.054 rows=100 loops=1)
Q21,100.0,Limit  (cost=2882055.05..2882055.06 rows=1 width=26) (actual time=41747.047..41747.063 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=882130.90..882130.91 rows=1 width=190) (actual time=9269.590..9269.607 rows=100 loops=1)
Q2,100.0,Limit  (cost=882130.90..882130.91 rows=1 width=190) (actual time=9269.592..9269.616 rows=100 loops=1)
Q11,36.8,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8434.104..8435.438 rows=8690 loops=1)
Q11,36.8,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8345.027..8429.251 rows=8690 loops=1)
Q3,27.9,->  HashAggregate  (cost=2458686.58..2490534.33 rows=3184775 width=20) (actual time=46172.497..46220.214 rows=114142 loops=1)
Q15,26.8,->  HashAggregate  (cost=1740571.95..1740609.20 rows=3725 width=12) (actual time=28469.203..28510.369 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=734984)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7818.80 rows=767080 width=0) (actual time=120.302..120.302 rows=10686720 loops=1)
Q3,10.5,->  Hash Join  (cost=769895.72..2410914.95 rows=3184775 width=20) (actual time=13940.726..45895.322 rows=302541 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2421.26 rows=321233 width=0) (actual time=34.871..34.871 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.91 rows=1 width=24) (actual time=0.018..0.092 rows=8 loops=432700)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.112..4.112 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.619..3.619 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.237..0.237 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.276..0.276 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.393..0.393 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.249..0.249 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.011..0.012 rows=1 loops=1204494)
Q5,5.0,Sort  (cost=1868160.60..1868160.66 rows=25 width=34) (actual time=21092.573..21092.573 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1868159.77..1868160.02 rows=25 width=34) (actual time=21092.531..21092.533 rows=5 loops=1)
Q4,5.0,Sort  (cost=1490936.11..1490936.11 rows=1 width=16) (actual time=13279.905..13279.906 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.09 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=574279)
Q4,5.0,->  HashAggregate  (cost=1490936.09..1490936.10 rows=1 width=16) (actual time=13279.860..13279.861 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=708280)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5820.10 rows=578010 width=0) (actual time=27.874..27.874 rows=2556160 loops=1)
Q13,4.3,Sort  (cost=853252.11..853252.61 rows=200 width=8) (actual time=31093.148..31093.151 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=853242.47..853244.47 rows=200 width=8) (actual time=31093.079..31093.086 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5872.26 rows=583226 width=0) (actual time=27.496..27.496 rows=2545920 loops=1)
Q17,3.8,->  Nested Loop  (cost=82.56..113293.99 rows=19965 width=4) (actual time=1.479..206.608 rows=5166 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.017..0.018 rows=4 loops=453299)
Q4,3.3,->  Nested Loop Semi Join  (cost=5965.17..1490160.41 rows=155135 width=16) (actual time=28.076..12982.219 rows=527008 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.016..0.040 rows=3 loops=1927)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245711.61 rows=32741814 width=0) (actual time=119.856..119.856 rows=10771200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.333..0.407 rows=3 loops=21903)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55348.29 rows=7374439 width=0) (actual time=27.526..27.526 rows=2561280 loops=1)
Q15,2.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..217145.87 rows=28933049 width=0) (actual time=118.529..118.529 rows=10664960 loops=1)
Q15,2.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..217145.87 rows=28933049 width=0) (actual time=118.173..118.173 rows=10676480 loops=1)
Q22,2.3,Sort  (cost=695856.37..695856.38 rows=3 width=20) (actual time=10970.115..10970.116 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642971.17..642971.21 rows=3 width=20) (actual time=10970.066..10970.069 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.041..0.058 rows=2 loops=6512)
Q20,2.0,->  Nested Loop  (cost=754.49..11669241.07 rows=29578 width=4) (actual time=16.404..9199.994 rows=59750 loops=1)
Q20,2.0,->  Hash  (cost=11669241.07..11669241.07 rows=29578 width=4) (actual time=9238.176..9238.176 rows=59750 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.800..4.800 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3050110.86..3050110.86 rows=1 width=27) (actual time=34603.156..34603.156 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3050110.84..3050110.85 rows=1 width=27) (actual time=34603.109..34603.109 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=403921.28..405412.16 rows=596354 width=40) (actual time=10517.589..10677.937 rows=1187133 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.336..3923.554 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54792.07..346713.61 rows=596354 width=40) (actual time=1318.176..6859.978 rows=1187133 loops=1)
Q10,1.9,->  Hash Join  (cost=345620.34..2248064.54 rows=575920 width=175) (actual time=10016.278..33177.151 rows=1146931 loops=1)
Q10,1.9,->  Hash Join  (cost=345618.78..2240144.08 rows=575920 width=153) (actual time=10016.246..32729.697 rows=1146931 loops=1)
Q10,1.9,->  Hash Join  (cost=276590.78..2162477.28 rows=575920 width=12) (actual time=8663.873..30604.989 rows=1146931 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1840626.77 rows=20274927 width=8) (actual time=0.013..18950.059 rows=37966096 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2354169.49 rows=394999 width=38) (actual time=57.696..33875.533 rows=734984 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1927173.04 rows=810997 width=34) (actual time=57.603..26136.627 rows=1521034 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.040..0.297 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672054.59..11672057.55 rows=1183 width=51) (actual time=9268.524..9268.625 rows=1787 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669653.80..11671994.21 rows=1183 width=51) (actual time=9238.766..9266.998 rows=1787 loops=1)
Q1,1.5,Sort  (cost=4222388.20..4222388.22 rows=6 width=20) (actual time=91151.582..91151.583 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4222388.02..4222388.12 rows=6 width=20) (actual time=91151.529..91151.532 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2262462.54..2268221.74 rows=575920 width=175) (actual time=35286.860..35550.390 rows=381510 loops=1)
Q9,1.4,GroupAggregate  (cost=1134595.26..1134599.63 rows=125 width=46) (actual time=102826.583..105850.802 rows=175 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..27340.49 rows=3640066 width=0) (actual time=27.792..27.792 rows=2556160 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.673..4.673 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2873.74 rows=139873 width=0) (actual time=753.949..753.949 rows=190584 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2908.71..41858.38 rows=139873 width=24) (actual time=762.970..1237.962 rows=190584 loops=1)
Q18,1.3,Limit  (cost=10173035.39..10173038.14 rows=100 width=39) (actual time=79316.907..79317.169 rows=75 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92659.99 rows=9251199 width=0) (actual time=127.142..127.142 rows=10824960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=102102 width=4) (actual time=0.051..1019.716 rows=108175 loops=1)
Q9,1.0,->  Hash Join  (cost=66798.27..351840.35 rows=408408 width=16) (actual time=1059.765..5637.544 rows=432700 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=102102 width=4) (actual time=1059.158..1059.158 rows=108175 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=4.161..2199.018 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.83..1670235.21 rows=121171 width=20) (actual time=7.394..9776.925 rows=120443 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.39..1474594.56 rows=399553 width=16) (actual time=7.233..5351.180 rows=396606 loops=1)
Q8,1.0,->  Nested Loop  (cost=38742.27..1717081.49 rows=24234 width=16) (actual time=2318.874..12358.503 rows=23977 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.17 rows=31 width=20) (actual time=0.029..0.378 rows=30 loops=13234)
Q8,1.0,->  Hash Join  (cost=38743.83..1717537.44 rows=24234 width=38) (actual time=2318.922..12402.199 rows=23977 loops=1)
Q8,1.0,->  Hash Join  (cost=38741.98..1709262.09 rows=24234 width=16) (actual time=2318.857..12179.230 rows=23977 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2308.853..2308.853 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..407.52 rows=13213 width=0) (actual time=4.918..4.918 rows=13234 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=410.83..27973.17 rows=13213 width=4) (actual time=7.195..207.511 rows=13234 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.148..429.950 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..410122.07 rows=15254907 width=8) (actual time=0.006..3219.150 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2147324.56 rows=1476379 width=42) (actual time=628.315..24804.043 rows=1466841 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2159265.78 rows=61441 width=64) (actual time=668.206..25538.713 rows=59343 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..538136.30 rows=1220393 width=30) (actual time=628.292..9694.123 rows=1204494 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.042..588.579 rows=120025 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..37.084 rows=8076 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=627.786..627.786 rows=120025 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.324..39.324 rows=8076 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92853.68..1383448.65 rows=774748 width=8) (actual time=127.953..26325.990 rows=763266 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.722..1912.968 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=66255.32..1848275.63 rows=1831946 width=46) (actual time=2054.266..20182.439 rows=1814083 loops=1)
Q5,1.0,->  Hash Join  (cost=70934.32..1867427.00 rows=73277 width=34) (actual time=2109.313..20974.601 rows=71882 loops=1)
Q5,1.0,->  Hash Join  (cost=66254.76..389574.35 rows=458108 width=38) (actual time=2054.244..11132.234 rows=453299 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2023.669..2023.669 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27913.13..338062.12 rows=2290538 width=8) (actual time=27.964..8045.266 rows=2275683 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.655..370.776 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5964.60..270182.75 rows=578010 width=20) (actual time=28.048..5325.648 rows=574279 loops=1)
Q3,1.0,->  Hash Join  (cost=106920.64..497560.11 rows=1475084 width=12) (actual time=424.498..13287.326 rows=1464490 loops=1)
Q3,1.0,->  Hash  (cost=497560.11..497560.11 rows=1475084 width=12) (actual time=13813.725..13813.725 rows=1464490 loops=1)
Q3,1.0,->  Hash  (cost=45978.24..45978.24 rows=300040 width=4) (actual time=394.802..394.802 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6874.73 rows=300040 width=0) (actual time=77.070..77.070 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57191.90..405426.39 rows=7374439 width=16) (actual time=27.703..10135.038 rows=7303315 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253897.06..1740286.73 rows=32741814 width=12) (actual time=120.611..25651.684 rows=32339982 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6949.74..45978.24 rows=300040 width=4) (actual time=86.248..316.608 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.011..4119.024 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=9475.918..9475.918 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598993.65..642531.60 rows=58609 width=20) (actual time=10314.694..10942.579 rows=63285 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6547.31 rows=381373 width=0) (actual time=88.204..88.204 rows=381344 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6642.65..51931.69 rows=381373 width=4) (actual time=97.136..622.671 rows=381344 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.308..56.316 rows=4004 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=57.533..57.533 rows=4004 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.293..55.641 rows=4004 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7240.670..7368.997 rows=1602827 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.294..131.629 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7829 width=30) (actual time=0.193..1182.089 rows=7977 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=143.040..6041.003 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=142.892..142.892 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.252..25.478 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.429..26.762 rows=4023 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=11.496..11.496 rows=21903 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.412..26.160 rows=4023 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=15.799..245.637 rows=21903 loops=1)
Q19,1.0,->  Nested Loop  (cost=12858.00..631117.80 rows=1127 width=8) (actual time=39.183..2495.934 rows=1183 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.810..4.810 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.15 rows=8043 width=0) (actual time=4.243..4.243 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.99 rows=8028 width=0) (actual time=4.178..4.178 rows=8055 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.43 rows=7873 width=0) (actual time=4.468..4.468 rows=8047 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.025..0.025 rows=30 loops=4863)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12853.25..26577.32 rows=4769 width=30) (actual time=38.500..326.016 rows=4863 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.006..3746.282 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670258.65 rows=60165365 width=8) (actual time=0.007..10671.412 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670258.65 rows=60165365 width=8) (actual time=0.011..9769.729 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.041 rows=30 loops=1927)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.041 rows=30 loops=1927)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.30 rows=1987 width=0) (actual time=0.905..0.905 rows=1927 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.79..6589.16 rows=1987 width=4) (actual time=1.223..33.184 rows=1927 loops=1)
Q16,1.0,Sort  (cost=413719.84..413789.73 rows=27955 width=40) (actual time=11338.006..11341.356 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51048.63..51048.63 rows=298177 width=40) (actual time=1314.688..1314.688 rows=296952 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403921.28..411655.25 rows=27955 width=40) (actual time=10517.648..11278.447 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2495.80..51048.63 rows=298177 width=40) (actual time=34.920..1181.331 rows=296952 loops=1)
Q15,1.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.013..27.345 rows=96965 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=217705.81..1718174.54 rows=2239741 width=12) (actual time=118.929..26231.773 rows=2245898 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=217705.81..1718174.54 rows=2239741 width=12) (actual time=119.267..28882.365 rows=2245898 loops=1)
Q14,1.0,->  Hash Join  (cost=93532.57..1143670.63 rows=767080 width=29) (actual time=1552.984..27009.727 rows=771834 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8010.57..1046642.43 rows=767080 width=12) (actual time=121.058..24679.506 rows=771834 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=14966874 width=8) (actual time=0.020..8693.882 rows=14854142 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740908.10 rows=14966874 width=8) (actual time=1184.013..19509.104 rows=15354162 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=20) (actual time=0.015..4776.663 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2439188.52 rows=292251 width=15) (actual time=0.401..24401.428 rows=311046 loops=1)
Q12,1.0,->  Hash Join  (cost=596675.08..3044996.44 rows=292251 width=27) (actual time=9533.026..34280.112 rows=311046 loops=1)
Q12,1.0,->  Hash  (cost=407300.59..407300.59 rows=15149959 width=20) (actual time=9486.877..9486.877 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.290..24.222 rows=4054 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.283..30.991 rows=4054 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.154..3781.145 rows=324320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=31.952..4174.942 rows=324320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.909..31.909 rows=4054 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.096..25.096 rows=4054 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.261..23.570 rows=4054 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.267..30.274 rows=4054 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1826107.14 rows=59907022 width=20) (actual time=0.012..19614.076 rows=59582952 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1824304.52 rows=14886073 width=12) (actual time=0.039..18429.163 rows=14823489 loops=1)
Q10,1.0,->  Hash  (cost=269300.45..269300.45 rows=583226 width=8) (actual time=8658.868..8658.868 rows=573838 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6018.06..269300.45 rows=583226 width=8) (actual time=27.657..8426.449 rows=573838 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.011 rows=0 loops=396606)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1521034)
Q19,,->  BitmapOr  (cost=12853.25..12853.25 rows=4773 width=0) (actual time=34.221..34.221 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.401..0.440 rows=0 loops=4863)
Q19,,->  BitmapAnd  (cost=6281.05..6281.05 rows=2403 width=0) (actual time=9.794..9.794 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4282.93..4282.93 rows=1573 width=0) (actual time=10.205..10.205 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.76..2288.76 rows=796 width=0) (actual time=9.983..9.983 rows=0 loops=1)
