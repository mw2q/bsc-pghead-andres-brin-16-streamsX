Q21,704993.0,->  Nested Loop Semi Join  (cost=2406.31..2862039.89 rows=1 width=34) (actual time=32.112..38864.140 rows=704993 loops=1)
Q3,318204.8,->  Sort  (cost=2553074.12..2561029.24 rows=3182048 width=20) (actual time=44259.243..44259.245 rows=10 loops=1)
Q18,304422.8,->  GroupAggregate  (cost=10294247.77..11131410.69 rows=30442288 width=39) (actual time=73738.573..73738.907 rows=100 loops=1)
Q18,75370.6,->  Hash Join  (cost=2205851.17..2827067.44 rows=7612440 width=39) (actual time=48242.040..53902.720 rows=101 loops=1)
Q18,75370.6,->  Hash Join  (cost=2136823.17..2643852.84 rows=7612440 width=20) (actual time=46838.478..52498.738 rows=101 loops=1)
Q18,75370.6,->  Hash  (cost=2827067.44..2827067.44 rows=7612440 width=39) (actual time=53902.957..53902.957 rows=101 loops=1)
Q18,43426.9,->  Sort  (cost=10294247.77..10370353.49 rows=30442288 width=39) (actual time=73738.561..73738.601 rows=701 loops=1)
Q18,43058.3,->  Hash Join  (cost=2922222.94..5677927.80 rows=30442288 width=39) (actual time=54485.124..73737.517 rows=707 loops=1)
Q18,40219.3,->  Hash  (cost=2086046.20..2086046.20 rows=4062158 width=4) (actual time=46781.373..46781.373 rows=101 loops=1)
Q18,40219.3,->  HashAggregate  (cost=1994647.64..2045424.61 rows=4062158 width=8) (actual time=40778.202..46781.075 rows=101 loops=1)
Q21,39317.0,->  Nested Loop Anti Join  (cost=2406.88..2862041.67 rows=1 width=26) (actual time=32.288..41742.972 rows=39317 loops=1)
Q10,28301.6,->  Sort  (cost=2282176.42..2283591.50 rows=566032 width=175) (actual time=36065.516..36065.516 rows=20 loops=1)
Q9,21836.2,->  Sort  (cost=1290765.81..1290766.18 rows=150 width=46) (actual time=96821.302..97497.996 rows=3275434 loops=1)
Q9,21836.2,->  Nested Loop  (cost=67074.84..1290756.01 rows=150 width=24) (actual time=689.850..87215.243 rows=3275434 loops=1)
Q9,21836.2,->  Nested Loop  (cost=67074.41..1290683.32 rows=150 width=24) (actual time=689.831..50529.167 rows=3275434 loops=1)
Q9,21836.2,->  Nested Loop  (cost=67074.12..1290634.92 rows=150 width=28) (actual time=689.819..39934.431 rows=3275434 loops=1)
Q9,21836.2,->  Hash Join  (cost=67076.40..1290760.39 rows=150 width=46) (actual time=689.907..90564.378 rows=3275434 loops=1)
Q2,4729.0,->  Merge Join  (cost=465687.75..891461.93 rows=1 width=190) (actual time=7752.249..9821.107 rows=4729 loops=1)
Q21,3991.0,->  HashAggregate  (cost=2862041.68..2862041.69 rows=1 width=26) (actual time=41799.400..41800.453 rows=3991 loops=1)
Q15,3672.0,->  Subquery Scan on revenue15  (cost=1652195.89..1652278.51 rows=3672 width=12) (actual time=56507.995..56522.547 rows=1 loops=1)
Q15,3672.0,->  Sort  (cost=1652495.93..1652505.11 rows=3672 width=12) (actual time=56522.570..56522.571 rows=1 loops=1)
Q15,3672.0,Merge Join  (cost=3288063.73..3293160.01 rows=3672 width=79) (actual time=56539.044..56539.046 rows=1 loops=1)
Q15,3672.0,->  HashAggregate  (cost=1652195.89..1652241.79 rows=3672 width=12) (actual time=56507.994..56522.544 rows=1 loops=1)
Q7,763.7,Sort  (cost=2141455.97..2141463.61 rows=3055 width=64) (actual time=25016.478..25016.478 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2141233.31..2141279.13 rows=3055 width=64) (actual time=25016.417..25016.420 rows=4 loops=1)
Q8,365.0,Sort  (cost=1747219.02..1747220.85 rows=730 width=38) (actual time=17935.303..17935.304 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1747171.53..1747184.30 rows=730 width=38) (actual time=17935.259..17935.260 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2862041.70..2862041.70 rows=1 width=26) (actual time=41801.553..41801.560 rows=100 loops=1)
Q21,100.0,Limit  (cost=2862041.70..2862041.70 rows=1 width=26) (actual time=41801.554..41801.572 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=891461.94..891461.95 rows=1 width=190) (actual time=9826.077..9826.093 rows=100 loops=1)
Q2,100.0,Limit  (cost=891461.94..891461.95 rows=1 width=190) (actual time=9826.079..9826.104 rows=100 loops=1)
Q11,32.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8693.498..8694.671 rows=9940 loops=1)
Q11,32.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8608.341..8688.035 rows=9940 loops=1)
Q3,27.8,->  HashAggregate  (cost=2452490.73..2484311.21 rows=3182048 width=20) (actual time=44170.821..44220.330 rows=114175 loops=1)
Q15,27.2,->  HashAggregate  (cost=1635484.88..1635521.60 rows=3672 width=12) (actual time=26558.488..26592.012 rows=100000 loops=1)
Q14,15.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..6940.44 rows=679244 width=0) (actual time=177.746..177.746 rows=10696960 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=731679)
Q3,10.5,->  Hash Join  (cost=768578.71..2404760.01 rows=3182048 width=20) (actual time=9977.619..43866.743 rows=301959 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2402.56 rows=318740 width=0) (actual time=34.834..34.834 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.080 rows=8 loops=436376)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.618..3.618 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.655..3.655 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.278..0.278 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.011..0.012 rows=1 loops=1201741)
Q5,5.0,Sort  (cost=2018850.13..2018850.19 rows=25 width=34) (actual time=15853.537..15853.538 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2018849.30..2018849.55 rows=25 width=34) (actual time=15853.497..15853.497 rows=5 loops=1)
Q4,5.0,Sort  (cost=1482802.93..1482802.93 rows=1 width=16) (actual time=15032.724..15032.725 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.22 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=561707)
Q4,5.0,->  HashAggregate  (cost=1482802.91..1482802.92 rows=1 width=16) (actual time=15032.674..15032.674 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=704993)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5702.75 rows=566275 width=0) (actual time=27.775..27.775 rows=2571520 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5772.13 rows=573213 width=0) (actual time=27.466..27.466 rows=2545920 loops=1)
Q13,4.3,Sort  (cost=854941.31..854941.81 rows=200 width=8) (actual time=30289.612..30289.615 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=854931.67..854933.67 rows=200 width=8) (actual time=30289.539..30289.547 rows=46 loops=1)
Q17,3.8,->  Nested Loop  (cost=82.88..115030.90 rows=20256 width=4) (actual time=1.628..192.624 rows=5316 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.011..0.013 rows=4 loops=455810)
Q4,3.4,->  Nested Loop Semi Join  (cost=5844.89..1482047.47 rows=151088 width=16) (actual time=27.984..14724.956 rows=515133 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.015..0.036 rows=3 loops=1975)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..244480.84 rows=32577712 width=0) (actual time=119.420..119.420 rows=10750720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.60 rows=1 width=8) (actual time=0.364..0.436 rows=3 loops=21593)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55469.55 rows=7390606 width=0) (actual time=34.078..34.078 rows=2556160 loops=1)
Q22,2.3,Sort  (cost=697098.55..697098.56 rows=3 width=20) (actual time=14133.292..14133.292 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=644177.51..644177.56 rows=3 width=20) (actual time=14133.245..14133.246 rows=7 loops=1)
Q15,2.3,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.021..12.312 rows=41964 loops=1)
Q15,2.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..178966.16 rows=23842422 width=0) (actual time=120.606..120.606 rows=10760960 loops=1)
Q15,2.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..178966.16 rows=23842422 width=0) (actual time=119.316..119.316 rows=10760960 loops=1)
Q20,2.1,->  Nested Loop  (cost=678.01..10936205.24 rows=26889 width=4) (actual time=13.600..9617.640 rows=58795 loops=1)
Q20,2.1,->  Hash  (cost=10936205.24..10936205.24 rows=26889 width=4) (actual time=9653.198..9653.198 rows=58795 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.044..0.061 rows=2 loops=6410)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=6.686..6.686 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403224.18..404702.18 rows=591198 width=40) (actual time=10712.824..10864.027 rows=1190233 loops=1)
Q16,2.0,->  Hash Join  (cost=54678.17..346548.15 rows=591198 width=40) (actual time=1452.603..7112.727 rows=1190233 loops=1)
Q12,2.0,Sort  (cost=3038044.23..3038044.24 rows=1 width=27) (actual time=33616.420..33616.420 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3038044.21..3038044.22 rows=1 width=27) (actual time=33616.373..33616.374 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345242.36..2247303.40 rows=566032 width=175) (actual time=9332.537..33551.090 rows=1147489 loops=1)
Q10,2.0,->  Hash Join  (cost=345240.79..2239518.89 rows=566032 width=153) (actual time=9332.500..33138.801 rows=1147489 loops=1)
Q10,2.0,->  Hash Join  (cost=276212.79..2162000.41 rows=566032 width=12) (actual time=7861.968..30751.215 rows=1147489 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.832..4051.441 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1827911.44 rows=20134865 width=8) (actual time=0.015..18989.516 rows=37966100 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2337878.15 rows=392270 width=38) (actual time=32.025..33885.520 rows=731679 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1913876.45 rows=805395 width=34) (actual time=31.965..26068.277 rows=1515790 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.030..0.786 rows=56 loops=1)
Q20,1.6,Sort  (cost=10938977.35..10938980.04 rows=1076 width=51) (actual time=9683.688..9683.792 rows=1753 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10936584.35..10938923.17 rows=1076 width=51) (actual time=9653.647..9681.465 rows=1753 loops=1)
Q1,1.5,Sort  (cost=4226291.88..4226291.89 rows=6 width=20) (actual time=94410.879..94410.879 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4226291.69..4226291.80 rows=6 width=20) (actual time=94410.833..94410.834 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.289..4.289 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2261454.20..2267114.52 rows=566032 width=175) (actual time=35662.003..35925.493 rows=381910 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.31 rows=140233 width=0) (actual time=875.337..875.337 rows=190642 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.37..41871.49 rows=140233 width=24) (actual time=886.058..1326.202 rows=190642 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=124124 width=4) (actual time=0.018..658.333 rows=109094 loops=1)
Q9,1.1,->  Hash Join  (cost=67073.55..352996.51 rows=496496 width=16) (actual time=689.639..4175.443 rows=436376 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=124124 width=4) (actual time=689.095..689.095 rows=109094 loops=1)
Q9,1.1,GroupAggregate  (cost=1290765.81..1290771.06 rows=150 width=46) (actual time=96831.534..99712.323 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91437.91 rows=9128991 width=0) (actual time=129.392..129.392 rows=10728960 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.57 rows=18002 width=0) (actual time=9.265..9.265 rows=21593 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.742..1957.045 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.19..1699214.88 rows=123347 width=20) (actual time=7.665..15521.757 rows=124726 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.75..1500063.08 rows=406729 width=16) (actual time=7.467..9158.716 rows=410533 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.63..1746214.04 rows=24669 width=16) (actual time=2058.427..17828.638 rows=25387 loops=1)
Q8,1.0,->  Hash Join  (cost=38754.19..1746678.15 rows=24669 width=38) (actual time=2058.477..17888.054 rows=25387 loops=1)
Q8,1.0,->  Hash Join  (cost=38752.34..1738254.27 rows=24669 width=16) (actual time=2058.411..17670.300 rows=25387 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2047.640..2047.640 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.73 rows=13507 width=0) (actual time=5.029..5.029 rows=13689 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=13689)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=417.11..28331.61 rows=13507 width=4) (actual time=7.385..158.584 rows=13689 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.054..0.635 rows=30 loops=13689)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.651..381.972 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=8) (actual time=0.006..3022.891 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2128451.30 rows=1463302 width=42) (actual time=921.247..24231.126 rows=1458990 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2140319.85 rows=60897 width=64) (actual time=960.611..24922.886 rows=58167 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533895.27 rows=1209599 width=30) (actual time=921.214..9388.172 rows=1201741 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..875.609 rows=120034 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..36.938 rows=8002 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=920.702..920.702 rows=120034 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.048..39.048 rows=8002 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91637.34..1369893.64 rows=797726 width=8) (actual time=130.273..25404.052 rows=796250 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..483528.15 rows=2304561 width=8) (actual time=0.013..5169.023 rows=2279304 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.771..2034.380 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1998871.85 rows=1843188 width=46) (actual time=2146.173..14963.613 rows=1824898 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2018112.03 rows=73727 width=34) (actual time=2225.200..15742.629 rows=72520 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..535121.00 rows=460912 width=38) (actual time=2146.154..8401.047 rows=455810 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2143.751..2143.751 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.691..397.076 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5844.32..271404.45 rows=566275 width=20) (actual time=27.956..7018.589 rows=561707 loops=1)
Q3,1.0,->  Hash Join  (cost=107045.94..497474.46 rows=1478318 width=12) (actual time=979.578..9238.873 rows=1469592 loops=1)
Q3,1.0,->  Hash  (cost=497474.46..497474.46 rows=1478318 width=12) (actual time=9847.636..9847.636 rows=1469592 loops=1)
Q3,1.0,->  Hash  (cost=45978.24..45978.24 rows=300040 width=4) (actual time=942.824..942.824 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6874.73 rows=300040 width=0) (actual time=74.225..74.225 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57317.20..405247.77 rows=7390606 width=16) (actual time=34.320..5482.332 rows=7328560 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=252625.27..1734819.67 rows=32577712 width=12) (actual time=120.186..27934.648 rows=32238528 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6949.74..45978.24 rows=300040 width=4) (actual time=83.323..841.073 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=4) (actual time=0.016..7027.085 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=4) (actual time=12464.498..12464.498 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=600177.59..643736.82 rows=58759 width=20) (actual time=13498.514..14106.230 rows=63505 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6554.66 rows=382355 width=0) (actual time=234.771..234.771 rows=381355 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6650.25..51965.07 rows=382355 width=4) (actual time=244.705..549.618 rows=381355 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.304..30.852 rows=3991 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=31.923..31.923 rows=3991 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.290..30.116 rows=3991 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7751.877..7883.755 rows=1602499 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.334..240.286 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8067 width=30) (actual time=0.120..1186.367 rows=8068 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=251.660..6460.875 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=251.514..251.514 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.261..42.381 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.297..26.474 rows=4029 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.279..25.869 rows=4029 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.58..33181.08 rows=20020 width=4) (actual time=12.938..182.060 rows=21593 loops=1)
Q19,1.0,->  Nested Loop  (cost=12872.07..636278.60 rows=1136 width=8) (actual time=58.228..3732.456 rows=1131 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.213..4.213 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.63 rows=8094 width=0) (actual time=3.692..3.692 rows=7975 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.51 rows=8079 width=0) (actual time=9.296..9.296 rows=7959 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.63 rows=7991 width=0) (actual time=3.690..3.690 rows=8078 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12871.51..26689.68 rows=4810 width=30) (actual time=44.355..156.393 rows=4804 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=16) (actual time=0.006..2602.248 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1690224.76 rows=60884576 width=8) (actual time=0.005..10370.536 rows=59984748 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1690224.76 rows=60884576 width=8) (actual time=0.013..8824.389 rows=59984748 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.029..0.045 rows=30 loops=1975)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.029..0.045 rows=30 loops=1975)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.61 rows=2018 width=0) (actual time=0.944..0.944 rows=1975 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.11..6677.28 rows=2018 width=4) (actual time=1.260..12.594 rows=1975 loops=1)
Q16,1.0,Sort  (cost=412936.27..413005.55 rows=27713 width=40) (actual time=11522.659..11526.188 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50966.96..50966.96 rows=295599 width=40) (actual time=1449.373..1449.373 rows=297731 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403224.18..410891.29 rows=27713 width=40) (actual time=10712.889..11462.715 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2476.46..50966.96 rows=295599 width=40) (actual time=34.884..1317.126 rows=297731 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=179523.20..1613203.53 rows=2228135 width=12) (actual time=120.067..24327.109 rows=2244538 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=179523.20..1613203.53 rows=2228135 width=12) (actual time=121.359..27539.119 rows=2244538 loops=1)
Q14,1.0,->  Hash Join  (cost=92632.25..1101461.65 rows=679244 width=29) (actual time=1917.256..31036.778 rows=698204 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7110.25..1005750.99 rows=679244 width=12) (actual time=178.749..28386.146 rows=698204 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446936.69 rows=15073349 width=8) (actual time=0.020..7655.382 rows=14852526 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742064.92 rows=15073349 width=8) (actual time=832.187..19278.091 rows=15352545 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=20) (actual time=0.012..4185.673 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2429556.85 rows=290821 width=15) (actual time=0.100..24237.328 rows=312165 loops=1)
Q12,1.0,->  Hash Join  (cost=594309.84..3032954.84 rows=290821 width=27) (actual time=8682.188..33272.264 rows=312165 loops=1)
Q12,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=20) (actual time=8635.968..8635.968 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.298..52.207 rows=3945 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.294..23.914 rows=3945 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.795..3939.350 rows=315600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=53.248..4250.585 rows=315600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=53.184..53.184 rows=3945 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.739..24.739 rows=3945 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.270..23.286 rows=3945 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.281..50.276 rows=3945 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1836996.01 rows=59732392 width=20) (actual time=0.013..21965.095 rows=59125129 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1824304.52 rows=14886073 width=12) (actual time=0.017..18999.045 rows=14823489 loops=1)
Q10,1.0,->  Hash  (cost=269047.63..269047.63 rows=573213 width=8) (actual time=7857.002..7857.002 rows=574321 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5915.44..269047.63 rows=573213 width=8) (actual time=27.636..7643.914 rows=574321 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.015..0.015 rows=0 loops=410533)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1515790)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..126.72 rows=1 width=16) (actual time=0.670..0.743 rows=0 loops=4804)
Q19,,->  BitmapOr  (cost=12871.51..12871.51 rows=4814 width=0) (actual time=38.374..38.374 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6281.43..6281.43 rows=2414 width=0) (actual time=14.393..14.393 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4300.15..4300.15 rows=1597 width=0) (actual time=8.662..8.662 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2289.42..2289.42 rows=803 width=0) (actual time=11.212..11.212 rows=0 loops=1)
