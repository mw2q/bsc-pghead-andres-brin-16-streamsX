Q21,720588.0,->  Nested Loop Semi Join  (cost=2406.31..2844929.13 rows=1 width=34) (actual time=36.952..39175.483 rows=720588 loops=1)
Q18,353632.4,->  GroupAggregate  (cost=10284166.78..11120507.53 rows=30412391 width=39) (actual time=72751.755..72752.034 rows=86 loops=1)
Q3,316249.7,->  Sort  (cost=2539183.77..2547090.02 rows=3162497 width=20) (actual time=42322.320..42322.322 rows=10 loops=1)
Q18,88429.6,->  Hash Join  (cost=2203892.26..2824537.12 rows=7604948 width=39) (actual time=46609.483..52456.259 rows=86 loops=1)
Q18,88429.6,->  Hash Join  (cost=2134864.26..2641434.90 rows=7604948 width=20) (actual time=45731.740..51578.263 rows=86 loops=1)
Q18,88429.6,->  Hash  (cost=2824537.12..2824537.12 rows=7604948 width=39) (actual time=52456.439..52456.439 rows=86 loops=1)
Q18,50518.9,->  Sort  (cost=10284166.78..10360197.75 rows=30412391 width=39) (actual time=72751.743..72751.772 rows=602 loops=1)
Q18,50518.9,->  Hash Join  (cost=2919598.97..5672597.49 rows=30412391 width=39) (actual time=52764.171..72750.849 rows=602 loops=1)
Q18,47234.3,->  Hash  (cost=2084087.29..2084087.29 rows=4062158 width=4) (actual time=45654.781..45654.781 rows=86 loops=1)
Q18,47234.3,->  HashAggregate  (cost=1992688.73..2043465.71 rows=4062158 width=8) (actual time=39326.383..45654.558 rows=86 loops=1)
Q21,40419.0,->  Nested Loop Anti Join  (cost=2406.88..2844930.92 rows=1 width=26) (actual time=38.132..42175.796 rows=40419 loops=1)
Q10,27621.0,->  Sort  (cost=2282400.96..2283782.01 rows=552421 width=175) (actual time=34162.023..34162.026 rows=20 loops=1)
Q9,25671.6,->  Sort  (cost=1139641.44..1139641.76 rows=127 width=46) (actual time=100167.465..100886.799 rows=3260295 loops=1)
Q9,25671.6,->  Nested Loop  (cost=66824.59..1139633.06 rows=127 width=24) (actual time=1018.464..90251.478 rows=3260295 loops=1)
Q9,25671.6,->  Nested Loop  (cost=66824.16..1139571.51 rows=127 width=24) (actual time=1018.445..58453.521 rows=3260295 loops=1)
Q9,25671.6,->  Nested Loop  (cost=66823.87..1139530.53 rows=127 width=28) (actual time=1018.437..47321.629 rows=3260295 loops=1)
Q9,25671.6,->  Hash Join  (cost=66826.15..1139637.00 rows=127 width=46) (actual time=1018.515..93631.629 rows=3260295 loops=1)
Q2,4639.0,->  Merge Join  (cost=465687.75..885013.26 rows=1 width=190) (actual time=7615.617..9548.040 rows=4639 loops=1)
Q21,4079.0,->  HashAggregate  (cost=2844930.92..2844930.93 rows=1 width=26) (actual time=42235.498..42236.640 rows=4079 loops=1)
Q15,3690.0,->  Subquery Scan on revenue13  (cost=1713555.72..1713638.74 rows=3690 width=12) (actual time=58626.737..58638.632 rows=1 loops=1)
Q15,3690.0,->  Sort  (cost=1713857.37..1713866.59 rows=3690 width=12) (actual time=58638.653..58638.653 rows=1 loops=1)
Q15,3690.0,Merge Join  (cost=3410605.55..3415702.10 rows=3690 width=79) (actual time=58645.325..58645.328 rows=1 loops=1)
Q15,3690.0,->  HashAggregate  (cost=1713555.72..1713601.84 rows=3690 width=12) (actual time=58626.736..58638.629 rows=1 loops=1)
Q7,763.7,Sort  (cost=2116803.41..2116811.05 rows=3055 width=64) (actual time=25196.391..25196.391 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2116580.75..2116626.58 rows=3055 width=64) (actual time=25196.333..25196.340 rows=4 loops=1)
Q8,365.0,Sort  (cost=1764321.85..1764323.67 rows=730 width=38) (actual time=10313.227..10313.227 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1764274.36..1764287.13 rows=730 width=38) (actual time=10313.187..10313.187 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2844930.94..2844930.95 rows=1 width=26) (actual time=42237.816..42237.823 rows=100 loops=1)
Q21,100.0,Limit  (cost=2844930.94..2844930.95 rows=1 width=26) (actual time=42237.818..42237.833 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=885013.27..885013.27 rows=1 width=190) (actual time=9552.871..9552.892 rows=100 loops=1)
Q2,100.0,Limit  (cost=885013.27..885013.27 rows=1 width=190) (actual time=9552.873..9552.903 rows=100 loops=1)
Q11,33.4,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8752.733..8753.848 rows=9574 loops=1)
Q11,33.4,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8586.700..8747.410 rows=9574 loops=1)
Q3,27.7,->  HashAggregate  (cost=2439218.38..2470843.35 rows=3162497 width=20) (actual time=42246.810..42301.223 rows=114107 loops=1)
Q15,27.1,->  HashAggregate  (cost=1696664.86..1696701.76 rows=3690 width=12) (actual time=26872.067..26910.061 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=748063)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7887.58 rows=773958 width=0) (actual time=155.932..155.932 rows=10782720 loops=1)
Q3,10.4,->  Hash Join  (cost=764340.31..2391780.93 rows=3162497 width=20) (actual time=12551.496..41942.720 rows=302023 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2401.21 rows=318560 width=0) (actual time=34.859..34.859 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.018..0.091 rows=7 loops=434868)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.610..3.610 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.651..3.651 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.252..0.252 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.259..0.259 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.251..0.251 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q15,5.6,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.023..4.909 rows=17822 loops=1)
Q5,5.0,Sort  (cost=2020918.70..2020918.76 rows=25 width=34) (actual time=16561.847..16561.847 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2020917.87..2020918.12 rows=25 width=34) (actual time=16561.804..16561.805 rows=5 loops=1)
Q4,5.0,Sort  (cost=1491219.87..1491219.87 rows=1 width=16) (actual time=14848.565..14848.565 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.11 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=572568)
Q4,5.0,->  HashAggregate  (cost=1491219.85..1491219.86 rows=1 width=16) (actual time=14848.515..14848.517 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=720588)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5634.32 rows=559432 width=0) (actual time=31.653..31.653 rows=2548480 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5810.69 rows=577069 width=0) (actual time=27.593..27.593 rows=2561280 loops=1)
Q13,4.4,Sort  (cost=853603.15..853603.65 rows=200 width=8) (actual time=32921.150..32921.152 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=853593.51..853595.51 rows=200 width=8) (actual time=32921.079..32921.085 rows=45 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.011..0.012 rows=1 loops=1197230)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.013..0.014 rows=4 loops=457521)
Q17,3.6,->  Nested Loop  (cost=78.26..111656.11 rows=19614 width=4) (actual time=1.649..272.524 rows=5340 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5955.52..1490446.96 rows=154577 width=16) (actual time=27.778..14550.194 rows=525000 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.61 rows=10 width=12) (actual time=0.025..0.051 rows=3 loops=1953)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243475.99 rows=32443732 width=0) (actual time=132.645..132.645 rows=10686720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.381..0.456 rows=3 loops=22049)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55027.44 rows=7331658 width=0) (actual time=27.570..27.570 rows=2540800 loops=1)
Q15,2.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..197144.56 rows=26266208 width=0) (actual time=128.540..128.540 rows=10824960 loops=1)
Q15,2.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..197144.56 rows=26266208 width=0) (actual time=125.251..125.251 rows=10824960 loops=1)
Q22,2.3,Sort  (cost=694660.89..694660.89 rows=3 width=20) (actual time=8757.971..8757.971 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641783.12..641783.16 rows=3 width=20) (actual time=8757.923..8757.924 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.041..0.057 rows=2 loops=6232)
Q20,2.0,->  Nested Loop  (cost=754.49..12023795.26 rows=29578 width=4) (actual time=13.993..10460.708 rows=59750 loops=1)
Q20,2.0,->  Hash  (cost=12023795.26..12023795.26 rows=29578 width=4) (actual time=10499.120..10499.120 rows=59750 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.211..4.211 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403210.21..404688.03 rows=591130 width=40) (actual time=10552.519..10730.495 rows=1186120 loops=1)
Q16,2.0,->  Hash Join  (cost=54671.89..346541.19 rows=591130 width=40) (actual time=1268.662..6717.240 rows=1186120 loops=1)
Q12,2.0,Sort  (cost=3038248.47..3038248.47 rows=1 width=27) (actual time=35165.823..35165.823 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3038248.45..3038248.46 rows=1 width=27) (actual time=35165.777..35165.777 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344975.12..2248366.50 rows=552421 width=175) (actual time=9675.270..31890.563 rows=1121516 loops=1)
Q10,2.0,->  Hash Join  (cost=344973.55..2240769.15 rows=552421 width=153) (actual time=9675.232..31498.176 rows=1121516 loops=1)
Q10,2.0,->  Hash Join  (cost=275945.55..2163454.83 rows=552421 width=12) (actual time=8033.235..29082.056 rows=1121516 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2323947.56 rows=389937 width=38) (actual time=36.916..34579.840 rows=748063 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902507.61 rows=800604 width=34) (actual time=36.814..26670.985 rows=1548911 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.299..3842.551 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817039.60 rows=20015109 width=8) (actual time=0.009..19191.119 rows=37928797 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.257 rows=56 loops=1)
Q20,1.5,Sort  (cost=12026608.78..12026611.74 rows=1183 width=51) (actual time=10551.253..10551.345 rows=1843 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12024207.99..12026548.40 rows=1183 width=51) (actual time=10499.570..10549.148 rows=1843 loops=1)
Q1,1.5,Sort  (cost=4204700.20..4204700.21 rows=6 width=20) (actual time=91961.387..91961.388 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4204700.02..4204700.12 rows=6 width=20) (actual time=91961.336..91961.337 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.168..4.168 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2262177.02..2267701.23 rows=552421 width=175) (actual time=33803.300..34026.577 rows=375122 loops=1)
Q9,1.3,GroupAggregate  (cost=1139641.44..1139645.88 rows=127 width=46) (actual time=100178.085..103128.487 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.97 rows=139798 width=0) (actual time=479.332..479.332 rows=191047 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2907.92..41855.62 rows=139798 width=24) (actual time=488.168..643.230 rows=191047 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91709.35 rows=9156135 width=0) (actual time=140.382..140.382 rows=10760960 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.638..9.638 rows=22049 loops=1)
Q18,1.1,Limit  (cost=10284166.78..10284169.53 rows=100 width=39) (actual time=72751.758..72752.047 rows=86 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=104104 width=4) (actual time=0.011..978.151 rows=108717 loops=1)
Q9,1.0,->  Hash Join  (cost=66823.30..351945.46 rows=416416 width=16) (actual time=1018.410..6717.524 rows=434868 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=104104 width=4) (actual time=1017.912..1017.912 rows=108717 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.733..1885.197 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.29..1716399.67 rows=122297 width=20) (actual time=7.471..8024.540 rows=120473 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.86..1518932.33 rows=403269 width=16) (actual time=7.051..3934.098 rows=396103 loops=1)
Q8,1.0,->  Nested Loop  (cost=38742.73..1763325.01 rows=24459 width=16) (actual time=1986.346..10213.679 rows=24061 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..112.00 rows=32 width=20) (actual time=0.024..0.279 rows=30 loops=13188)
Q8,1.0,->  Hash Join  (cost=38744.30..1763785.18 rows=24459 width=38) (actual time=1986.395..10250.105 rows=24061 loops=1)
Q8,1.0,->  Hash Join  (cost=38742.44..1755433.03 rows=24459 width=16) (actual time=1986.331..10076.755 rows=24061 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1975.720..1975.720 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..407.98 rows=13273 width=0) (actual time=4.727..4.727 rows=13188 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.29..28047.06 rows=13273 width=4) (actual time=6.986..127.374 rows=13188 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.640..367.858 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404074.68 rows=15029968 width=8) (actual time=0.005..3470.292 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2103852.43 rows=1454620 width=42) (actual time=621.051..24430.122 rows=1453506 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2115672.73 rows=60535 width=64) (actual time=659.959..25099.993 rows=58046 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531065.43 rows=1202397 width=30) (actual time=620.947..9429.083 rows=1197230 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..581.713 rows=119712 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..36.644 rows=7943 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=620.445..620.445 rows=119712 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=38.790..38.790 rows=7943 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91908.42..1373965.45 rows=796274 width=8) (actual time=141.303..37828.779 rows=797189 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..484005.91 rows=2306838 width=8) (actual time=0.017..4485.253 rows=2279346 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.794..2631.154 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..2000925.24 rows=1845017 width=46) (actual time=2754.521..15601.454 rows=1829591 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2020179.87 rows=73800 width=34) (actual time=2813.182..16476.918 rows=72826 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..535611.86 rows=461368 width=38) (actual time=2754.480..8369.440 rows=457521 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2751.948..2751.948 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.687..515.751 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5954.96..270664.99 rows=577069 width=20) (actual time=27.757..4917.312 rows=572568 loops=1)
Q3,1.0,->  Hash Join  (cost=106589.09..494421.80 rows=1466527 width=12) (actual time=429.567..11771.574 rows=1466998 loops=1)
Q3,1.0,->  Hash  (cost=494421.80..494421.80 rows=1466527 width=12) (actual time=12408.159..12408.159 rows=1466998 loops=1)
Q3,1.0,->  Hash  (cost=45978.24..45978.24 rows=300040 width=4) (actual time=399.375..399.375 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6874.73 rows=300040 width=0) (actual time=68.313..68.313 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56860.35..402534.08 rows=7331658 width=16) (actual time=27.736..8254.834 rows=7315809 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251586.92..1725738.57 rows=32443732 width=12) (actual time=133.378..23375.563 rows=32290128 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6949.74..45978.24 rows=300040 width=4) (actual time=77.447..320.408 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.016..3958.104 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=7936.925..7936.925 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597810.25..641343.79 rows=58577 width=20) (actual time=8470.733..8735.938 rows=63474 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6545.79 rows=381169 width=0) (actual time=87.690..87.690 rows=381789 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6641.08..51924.76 rows=381169 width=4) (actual time=96.858..349.157 rows=381789 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.274..34.540 rows=4079 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=35.639..35.639 rows=4079 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.256..33.901 rows=4079 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7615.106..7736.268 rows=1602847 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.319..262.544 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7903 width=30) (actual time=0.222..1136.838 rows=7844 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=273.953..6432.608 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=273.818..273.818 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.268..51.636 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.294..48.063 rows=3990 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.277..47.443 rows=3990 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=13.461..379.988 rows=22049 loops=1)
Q19,1.0,->  Nested Loop  (cost=12874.60..631393.23 rows=1133 width=8) (actual time=33.947..1977.914 rows=1134 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.183..4.183 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.43 rows=8074 width=0) (actual time=3.730..3.730 rows=8101 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7988 width=0) (actual time=3.493..3.493 rows=7963 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.15 rows=7943 width=0) (actual time=3.688..3.688 rows=7962 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.026..0.026 rows=30 loops=4777)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12869.85..26599.01 rows=4771 width=30) (actual time=32.966..294.284 rows=4777 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..408911.95 rows=15209895 width=16) (actual time=0.006..2619.140 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1688564.82 rows=60824782 width=8) (actual time=0.006..8553.384 rows=60045033 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1688564.82 rows=60824782 width=8) (actual time=0.045..9658.692 rows=60045033 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.043..0.058 rows=30 loops=1953)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.043..0.058 rows=30 loops=1953)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.01 rows=1958 width=0) (actual time=0.912..0.912 rows=1953 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.50..6499.90 rows=1958 width=4) (actual time=1.238..37.344 rows=1953 loops=1)
Q16,1.0,Sort  (cost=412921.17..412990.45 rows=27710 width=40) (actual time=11405.345..11408.981 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=50961.10..50961.10 rows=295565 width=40) (actual time=1266.366..1266.366 rows=296702 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403210.21..410876.43 rows=27710 width=40) (actual time=10552.579..11345.763 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2475.10..50961.10 rows=295565 width=40) (actual time=34.924..1145.496 rows=296702 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=197707.59..1674143.71 rows=2252115 width=12) (actual time=126.019..24720.162 rows=2242922 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=197707.59..1674143.71 rows=2252115 width=12) (actual time=129.310..29564.100 rows=2242922 loops=1)
Q14,1.0,->  Hash Join  (cost=93603.07..1153156.51 rows=773958 width=29) (actual time=1865.385..28376.674 rows=774447 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8081.07..1056025.14 rows=773958 width=12) (actual time=156.829..25796.607 rows=774447 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=15028456 width=8) (actual time=0.017..8787.919 rows=14853481 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740951.23 rows=15028456 width=8) (actual time=853.867..21136.490 rows=15353502 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=20) (actual time=0.011..5433.530 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2429846.98 rows=289059 width=15) (actual time=0.045..23883.047 rows=311659 loops=1)
Q12,1.0,->  Hash Join  (cost=594309.84..3033189.92 rows=289059 width=27) (actual time=10674.324..34860.508 rows=311659 loops=1)
Q12,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=20) (actual time=10600.189..10600.189 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.288..30.886 rows=3981 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.284..23.876 rows=3981 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.813..4116.775 rows=318480 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=31.948..4105.698 rows=318480 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.877..31.877 rows=3981 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.736..24.736 rows=3981 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.259..23.243 rows=3981 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.270..30.282 rows=3981 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1822476.38 rows=59555591 width=20) (actual time=0.014..19495.209 rows=59409321 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1826107.14 rows=14900782 width=12) (actual time=0.012..17546.510 rows=14823276 loops=1)
Q10,1.0,->  Hash  (cost=268952.65..268952.65 rows=559432 width=8) (actual time=8024.382..8024.382 rows=560637 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5774.17..268952.65 rows=559432 width=8) (actual time=31.826..7732.281 rows=560637 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=396103)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1548911)
Q19,,->  BitmapOr  (cost=12869.85..12869.85 rows=4775 width=0) (actual time=29.186..29.186 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.317..0.347 rows=0 loops=4777)
Q19,,->  BitmapAnd  (cost=6280.49..6280.49 rows=2387 width=0) (actual time=8.344..8.344 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4299.65..4299.65 rows=1587 width=0) (actual time=8.587..8.587 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2289.20..2289.20 rows=801 width=0) (actual time=8.659..8.659 rows=0 loops=1)
