Q21,694778.0,->  Nested Loop Semi Join  (cost=2406.31..2870594.12 rows=1 width=34) (actual time=32.943..39442.476 rows=694778 loops=1)
Q3,316564.5,->  Sort  (cost=2569880.37..2577794.48 rows=3165645 width=20) (actual time=38629.630..38629.631 rows=10 loops=1)
Q18,301322.0,->  GroupAggregate  (cost=10189290.38..11017925.91 rows=30132201 width=39) (actual time=75279.670..75280.009 rows=100 loops=1)
Q18,67837.5,->  Hash Join  (cost=2185533.56..2800459.78 rows=7529968 width=39) (actual time=48902.535..55337.803 rows=111 loops=1)
Q18,67837.5,->  Hash Join  (cost=2116505.56..2618482.26 rows=7529968 width=20) (actual time=47513.780..53948.652 rows=111 loops=1)
Q18,67837.5,->  Hash  (cost=2800459.78..2800459.78 rows=7529968 width=39) (actual time=55338.073..55338.073 rows=111 loops=1)
Q18,42984.5,->  Sort  (cost=10189290.38..10264620.88 rows=30132201 width=39) (actual time=75279.659..75279.698 rows=701 loops=1)
Q21,39146.0,->  Nested Loop Anti Join  (cost=2406.88..2870595.90 rows=1 width=26) (actual time=33.646..42322.105 rows=39146 loops=1)
Q18,38780.1,->  Hash Join  (cost=2894584.38..5622219.44 rows=30132201 width=39) (actual time=55813.302..75278.475 rows=777 loops=1)
Q18,36596.0,->  Hash  (cost=2065728.58..2065728.58 rows=4062158 width=4) (actual time=47385.032..47385.032 rows=111 loops=1)
Q18,36596.0,->  HashAggregate  (cost=1974330.03..2025107.00 rows=4062158 width=8) (actual time=40793.359..47384.743 rows=111 loops=1)
Q10,28900.6,->  Sort  (cost=2300828.42..2302273.45 rows=578012 width=175) (actual time=35164.467..35164.470 rows=20 loops=1)
Q9,20129.2,->  Sort  (cost=1366825.48..1366825.89 rows=162 width=46) (actual time=98691.501..99360.212 rows=3260938 loops=1)
Q9,20129.2,->  Nested Loop  (cost=67199.97..1366814.94 rows=162 width=24) (actual time=690.528..89210.831 rows=3260938 loops=1)
Q9,20129.2,->  Nested Loop  (cost=67199.53..1366736.43 rows=162 width=24) (actual time=690.498..52179.081 rows=3260938 loops=1)
Q9,20129.2,->  Nested Loop  (cost=67199.24..1366684.16 rows=162 width=28) (actual time=690.489..41624.526 rows=3260938 loops=1)
Q9,20129.2,->  Hash Join  (cost=67201.53..1366819.54 rows=162 width=46) (actual time=690.575..92614.917 rows=3260938 loops=1)
Q2,4735.0,->  Merge Join  (cost=465687.75..891119.96 rows=1 width=190) (actual time=7699.278..9583.734 rows=4735 loops=1)
Q21,3934.0,->  HashAggregate  (cost=2870595.91..2870595.92 rows=1 width=26) (actual time=42377.551..42378.856 rows=3934 loops=1)
Q15,3706.0,->  Subquery Scan on revenue14  (cost=2020154.83..2020238.21 rows=3706 width=12) (actual time=40374.419..40392.611 rows=1 loops=1)
Q15,3706.0,->  Sort  (cost=2020457.90..2020467.16 rows=3706 width=12) (actual time=40392.632..40392.633 rows=1 loops=1)
Q15,3706.0,Merge Join  (cost=4023864.34..4028961.13 rows=3706 width=79) (actual time=40421.558..40421.561 rows=1 loops=1)
Q15,3706.0,->  HashAggregate  (cost=2020154.83..2020201.15 rows=3706 width=12) (actual time=40374.417..40392.607 rows=1 loops=1)
Q7,763.7,Sort  (cost=2145665.97..2145673.61 rows=3055 width=64) (actual time=26643.002..26643.002 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2145443.31..2145489.13 rows=3055 width=64) (actual time=26642.937..26642.946 rows=4 loops=1)
Q8,365.0,Sort  (cost=1766546.98..1766548.81 rows=730 width=38) (actual time=12826.284..12826.284 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1766499.49..1766512.26 rows=730 width=38) (actual time=12826.245..12826.245 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2870595.93..2870595.93 rows=1 width=26) (actual time=42380.053..42380.059 rows=100 loops=1)
Q21,100.0,Limit  (cost=2870595.93..2870595.93 rows=1 width=26) (actual time=42380.055..42380.071 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=891119.97..891119.97 rows=1 width=190) (actual time=9589.612..9589.624 rows=100 loops=1)
Q2,100.0,Limit  (cost=891119.97..891119.97 rows=1 width=190) (actual time=9589.614..9589.639 rows=100 loops=1)
Q11,34.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=9793.477..9794.587 rows=9384 loops=1)
Q11,34.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=9696.376..9788.367 rows=9384 loops=1)
Q3,28.0,->  HashAggregate  (cost=2469815.47..2501471.92 rows=3165645 width=20) (actual time=38559.345..38608.581 rows=113031 loops=1)
Q15,26.9,->  HashAggregate  (cost=2003322.75..2003359.81 rows=3706 width=12) (actual time=19869.341..19900.841 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=721115)
Q14,13.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8206.85 rows=805885 width=0) (actual time=125.706..125.706 rows=10782720 loops=1)
Q3,10.6,->  Hash Join  (cost=771875.39..2422330.79 rows=3165645 width=20) (actual time=8287.505..38231.026 rows=298445 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2396.61 rows=317947 width=0) (actual time=34.964..34.964 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.082 rows=7 loops=434932)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.611..3.611 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.656..3.656 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.238..0.238 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.248..0.248 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.246..0.246 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.269..0.269 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.253..0.253 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.011..0.012 rows=1 loops=1206385)
Q5,5.0,Sort  (cost=2004410.43..2004410.49 rows=25 width=34) (actual time=16132.898..16132.898 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2004409.60..2004409.85 rows=25 width=34) (actual time=16132.858..16132.859 rows=5 loops=1)
Q4,5.0,Sort  (cost=1479979.97..1479979.98 rows=1 width=16) (actual time=15483.258..15483.258 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.12 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=574306)
Q4,5.0,->  HashAggregate  (cost=1479979.95..1479979.96 rows=1 width=16) (actual time=15483.203..15483.203 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=694778)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5741.43 rows=570143 width=0) (actual time=27.514..27.514 rows=2543360 loops=1)
Q13,4.4,Sort  (cost=852729.45..852729.95 rows=200 width=8) (actual time=28898.882..28898.883 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=852719.81..852721.81 rows=200 width=8) (actual time=28898.810..28898.822 rows=45 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5893.45 rows=585345 width=0) (actual time=27.666..27.666 rows=2566400 loops=1)
Q17,3.8,->  Nested Loop  (cost=82.92..115259.39 rows=20417 width=4) (actual time=1.671..578.881 rows=5338 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.012..0.014 rows=4 loops=455807)
Q4,3.4,->  Nested Loop Semi Join  (cost=5884.53..1479211.02 rows=153786 width=16) (actual time=27.732..15168.625 rows=526619 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.034..0.139 rows=3 loops=1998)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..248678.13 rows=33137351 width=0) (actual time=127.080..127.080 rows=10803200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.329..0.402 rows=3 loops=21999)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54962.94 rows=7323058 width=0) (actual time=27.572..27.572 rows=2568960 loops=1)
Q22,2.3,Sort  (cost=698451.53..698451.54 rows=3 width=20) (actual time=10544.051..10544.052 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645436.68..645436.73 rows=3 width=20) (actual time=10544.006..10544.007 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.038..0.054 rows=2 loops=6401)
Q20,2.0,->  Nested Loop  (cost=754.49..11669241.07 rows=29578 width=4) (actual time=14.128..9191.189 rows=59844 loops=1)
Q20,2.0,->  Hash  (cost=11669241.07..11669241.07 rows=29578 width=4) (actual time=9226.382..9226.382 rows=59844 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.193..4.193 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403119.57..404595.91 rows=590538 width=40) (actual time=10979.785..11161.236 rows=1188631 loops=1)
Q16,2.0,->  Hash Join  (cost=54648.19..346511.57 rows=590538 width=40) (actual time=1301.893..6970.777 rows=1188631 loops=1)
Q12,2.0,Sort  (cost=3065187.90..3065187.90 rows=1 width=27) (actual time=34453.016..34453.017 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3065187.88..3065187.89 rows=1 width=27) (actual time=34452.964..34452.964 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.315..3963.105 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=347726.34..2265217.31 rows=578012 width=175) (actual time=9124.319..32698.743 rows=1149056 loops=1)
Q10,1.9,->  Hash Join  (cost=347724.77..2257268.08 rows=578012 width=153) (actual time=9124.284..32274.566 rows=1149056 loops=1)
Q10,1.9,->  Hash Join  (cost=278696.77..2179569.90 rows=578012 width=12) (actual time=7467.538..29757.578 rows=1149056 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1833346.51 rows=20194734 width=8) (actual time=0.013..19445.314 rows=37965313 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2344842.11 rows=393436 width=38) (actual time=32.911..34572.230 rows=721115 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1919559.97 rows=807789 width=34) (actual time=32.878..26546.652 rows=1491251 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.277 rows=56 loops=1)
Q1,1.5,Sort  (cost=4207553.16..4207553.18 rows=6 width=20) (actual time=90302.566..90302.566 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4207552.98..4207553.08 rows=6 width=20) (actual time=90302.517..90302.518 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2279667.61..2285447.73 rows=578012 width=175) (actual time=34799.051..35025.521 rows=382000 loops=1)
Q20,1.4,Sort  (cost=11672054.59..11672057.55 rows=1183 width=51) (actual time=9257.070..9257.169 rows=1765 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669653.80..11671994.21 rows=1183 width=51) (actual time=9226.805..9255.096 rows=1765 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.163..4.163 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2912.38 rows=140935 width=0) (actual time=465.454..465.454 rows=190842 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2947.62..41925.16 rows=140935 width=24) (actual time=474.415..1205.715 rows=190842 loops=1)
Q15,1.3,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.023..21.627 rows=72980 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=134134 width=4) (actual time=0.014..657.198 rows=108733 loops=1)
Q9,1.2,->  Hash Join  (cost=67198.68..353522.03 rows=536536 width=16) (actual time=690.421..4940.833 rows=434932 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=134134 width=4) (actual time=689.062..689.062 rows=108733 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92253.84 rows=9210584 width=0) (actual time=120.407..120.407 rows=10824960 loops=1)
Q9,1.0,GroupAggregate  (cost=1366825.48..1366831.15 rows=162 width=46) (actual time=98701.717..101635.486 rows=175 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.752..1905.864 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.45..1718610.37 rows=122482 width=20) (actual time=7.498..10497.195 rows=122316 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.01..1520845.80 rows=403876 width=16) (actual time=7.376..4568.525 rows=402002 loops=1)
Q8,1.0,->  Nested Loop  (cost=38742.89..1765548.71 rows=24496 width=16) (actual time=2006.751..12739.190 rows=24238 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..111.98 rows=32 width=20) (actual time=0.028..0.315 rows=30 loops=13411)
Q8,1.0,->  Hash Join  (cost=38744.45..1766009.57 rows=24496 width=38) (actual time=2006.808..12782.104 rows=24238 loops=1)
Q8,1.0,->  Hash Join  (cost=38742.60..1757644.79 rows=24496 width=16) (actual time=2006.741..12582.528 rows=24238 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1996.538..1996.538 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.12 rows=13293 width=0) (actual time=5.040..5.040 rows=13411 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.45..28070.03 rows=13293 width=4) (actual time=7.326..197.552 rows=13411 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.646..371.845 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=8) (actual time=0.007..3089.641 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2132643.39 rows=1466203 width=42) (actual time=868.532..25748.175 rows=1464017 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2144528.05 rows=61017 width=64) (actual time=912.478..26540.682 rows=58307 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534837.31 rows=1211997 width=30) (actual time=868.496..10155.129 rows=1206385 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.039..822.706 rows=120228 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..37.201 rows=7954 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=867.951..867.951 rows=120228 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.469..39.469 rows=7954 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92446.68..1382127.82 rows=771347 width=8) (actual time=121.193..26440.316 rows=763319 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..480180.04 rows=2288604 width=8) (actual time=0.013..4952.403 rows=2279058 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.793..2307.015 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1984537.99 rows=1830435 width=46) (actual time=2429.274..15327.892 rows=1822972 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2003677.43 rows=73217 width=34) (actual time=2484.004..16046.819 rows=73606 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..531681.15 rows=457721 width=38) (actual time=2429.250..8354.061 rows=455807 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2426.874..2426.874 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.689..450.907 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5883.97..268717.11 rows=570143 width=20) (actual time=27.687..6629.876 rows=574306 loops=1)
Q3,1.0,->  Hash Join  (cost=106407.35..496750.21 rows=1453017 width=12) (actual time=415.863..7634.599 rows=1441843 loops=1)
Q3,1.0,->  Hash  (cost=496750.21..496750.21 rows=1453017 width=12) (actual time=8149.491..8149.491 rows=1441843 loops=1)
Q3,1.0,->  Hash  (cost=45893.33..45893.33 rows=297625 width=4) (actual time=385.644..385.644 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6820.61 rows=297625 width=0) (actual time=69.068..69.068 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56793.70..405144.93 rows=7323058 width=16) (actual time=27.736..4764.859 rows=7228131 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=256962.47..1751496.36 rows=33137351 width=12) (actual time=127.838..23831.555 rows=32639889 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6895.02..45893.33 rows=297625 width=4) (actual time=77.951..306.697 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=4) (actual time=0.016..4123.828 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=4) (actual time=9066.522..9066.522 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=601393.11..644993.78 rows=59054 width=20) (actual time=9626.886..10515.643 rows=63749 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6592.99 rows=384268 width=0) (actual time=88.756..88.756 rows=382175 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6689.06..52054.09 rows=384268 width=4) (actual time=97.679..337.750 rows=382175 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.282..31.744 rows=3934 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.834..32.834 rows=3934 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.269..31.103 rows=3934 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7698.954..7822.724 rows=1586895 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.306..194.930 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8059 width=30) (actual time=0.117..1081.550 rows=8019 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=207.222..6542.648 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=207.079..207.079 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.251..34.479 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.276..26.999 rows=3945 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.755..9.755 rows=21999 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.261..26.409 rows=3945 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=13.471..311.097 rows=21999 loops=1)
Q19,1.0,->  Nested Loop  (cost=12875.09..632162.63 rows=1125 width=8) (actual time=34.191..3400.276 rows=1069 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.171..4.171 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.79 rows=8107 width=0) (actual time=3.745..3.745 rows=8026 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7988 width=0) (actual time=3.486..3.486 rows=7963 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.27 rows=7955 width=0) (actual time=3.730..3.730 rows=8112 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.031..0.031 rows=30 loops=4746)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12870.34..26612.24 rows=4777 width=30) (actual time=33.204..556.352 rows=4746 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=16) (actual time=0.006..3501.308 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673008.02 rows=60264402 width=8) (actual time=0.005..9326.894 rows=59985781 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673008.02 rows=60264402 width=8) (actual time=0.013..8249.740 rows=59985781 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.031..0.068 rows=30 loops=1998)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.031..0.068 rows=30 loops=1998)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.65 rows=2022 width=0) (actual time=0.917..0.917 rows=1998 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.15..6689.41 rows=2022 width=4) (actual time=1.284..145.853 rows=1998 loops=1)
Q16,1.0,Sort  (cost=412820.58..412889.79 rows=27682 width=40) (actual time=11836.385..11839.679 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=50941.10..50941.10 rows=295269 width=40) (actual time=1299.184..1299.184 rows=297315 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403119.57..410778.11 rows=27682 width=40) (actual time=10979.842..11776.251 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2470.42..50941.10 rows=295269 width=40) (actual time=35.015..1171.211 rows=297315 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1980879.98 rows=2244277 width=12) (actual time=0.034..17961.097 rows=2246994 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1980879.98 rows=2244277 width=12) (actual time=0.045..18404.873 rows=2246994 loops=1)
Q14,1.0,->  Hash Join  (cost=93930.32..1166498.54 rows=805885 width=29) (actual time=1665.622..28712.454 rows=771816 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8408.32..1068888.27 rows=805885 width=12) (actual time=126.470..26282.278 rows=771816 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445615.79 rows=15028801 width=8) (actual time=0.018..8259.039 rows=14852502 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740075.80 rows=15028801 width=8) (actual time=890.301..18459.563 rows=15352521 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=20) (actual time=0.013..4101.125 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2451281.96 rows=292926 width=15) (actual time=0.149..24873.243 rows=312816 loops=1)
Q12,1.0,->  Hash Join  (cost=599625.78..3060061.67 rows=292926 width=27) (actual time=8873.430..34097.754 rows=312816 loops=1)
Q12,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=20) (actual time=8809.790..8809.790 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.302..30.935 rows=3991 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.293..51.274 rows=3991 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=52.566..4079.058 rows=319280 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=31.998..5208.548 rows=319280 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=52.494..52.494 rows=3991 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.950..31.950 rows=3991 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.267..50.540 rows=3991 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.282..30.239 rows=3991 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1826107.14 rows=59536146 width=20) (actual time=0.014..18899.941 rows=59274272 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1838825.89 rows=15004566 width=12) (actual time=0.032..18523.264 rows=14808165 loops=1)
Q10,1.0,->  Hash  (cost=271379.96..271379.96 rows=585345 width=8) (actual time=7462.503..7462.503 rows=575033 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6039.79..271379.96 rows=585345 width=8) (actual time=27.875..7216.988 rows=575033 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.014..0.014 rows=0 loops=402002)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1491251)
Q19,,->  BitmapOr  (cost=12870.34..12870.34 rows=4781 width=0) (actual time=29.406..29.406 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.509..0.549 rows=0 loops=4746)
Q19,,->  BitmapAnd  (cost=6280.50..6280.50 rows=2387 width=0) (actual time=8.373..8.373 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4299.78..4299.78 rows=1589 width=0) (actual time=8.666..8.666 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2289.56..2289.56 rows=804 width=0) (actual time=8.693..8.693 rows=0 loops=1)
