Q21,696662.0,->  Nested Loop Semi Join  (cost=2406.31..2851071.80 rows=1 width=34) (actual time=32.376..39190.190 rows=696662 loops=1)
Q3,317989.0,->  Sort  (cost=2558473.88..2566423.60 rows=3179890 width=20) (actual time=50316.527..50316.530 rows=10 loops=1)
Q18,303259.2,->  GroupAggregate  (cost=10152814.23..10978437.49 rows=30022664 width=39) (actual time=71644.961..71645.280 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2178356.45..2791568.44 rows=7507492 width=39) (actual time=46256.404..52555.316 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2109328.45..2609928.06 rows=7507492 width=20) (actual time=45058.945..51357.559 rows=99 loops=1)
Q18,75833.2,->  Hash  (cost=2791568.44..2791568.44 rows=7507492 width=39) (actual time=52555.492..52555.492 rows=99 loops=1)
Q18,43322.7,->  Sort  (cost=10152814.23..10227870.89 rows=30022664 width=39) (actual time=71644.950..71644.995 rows=693 loops=1)
Q18,43322.7,->  Hash Join  (cost=2885412.09..5603131.61 rows=30022664 width=39) (actual time=53013.281..71643.958 rows=693 loops=1)
Q18,41031.8,->  Hash  (cost=2058551.48..2058551.48 rows=4062158 width=4) (actual time=44920.517..44920.517 rows=99 loops=1)
Q18,41031.8,->  HashAggregate  (cost=1967152.92..2017929.90 rows=4062158 width=8) (actual time=39100.209..44920.310 rows=99 loops=1)
Q21,38925.0,->  Nested Loop Anti Join  (cost=2406.88..2851073.58 rows=1 width=26) (actual time=33.142..42005.823 rows=38925 loops=1)
Q10,28623.0,->  Sort  (cost=2297920.27..2299351.42 rows=572460 width=175) (actual time=34920.914..34920.916 rows=20 loops=1)
Q9,24104.7,->  Sort  (cost=1200574.99..1200575.33 rows=136 width=46) (actual time=93547.363..94144.843 rows=3278242 loops=1)
Q9,24104.7,->  Nested Loop  (cost=66924.69..1200566.06 rows=136 width=24) (actual time=680.408..84404.360 rows=3278242 loops=1)
Q9,24104.7,->  Nested Loop  (cost=66924.26..1200500.14 rows=136 width=24) (actual time=680.391..54033.864 rows=3278242 loops=1)
Q9,24104.7,->  Hash Join  (cost=66926.25..1200570.17 rows=136 width=46) (actual time=680.459..87632.849 rows=3278242 loops=1)
Q9,23928.7,->  Nested Loop  (cost=66923.96..1200455.94 rows=137 width=28) (actual time=680.380..43029.056 rows=3278242 loops=1)
Q2,4633.0,->  Merge Join  (cost=465687.75..885110.96 rows=1 width=190) (actual time=6732.053..8734.172 rows=4633 loops=1)
Q21,3945.0,->  HashAggregate  (cost=2851073.58..2851073.59 rows=1 width=26) (actual time=42063.005..42064.264 rows=3945 loops=1)
Q15,3672.0,->  Subquery Scan on revenue7  (cost=1884837.52..1884920.14 rows=3672 width=12) (actual time=56134.640..56155.217 rows=1 loops=1)
Q15,3672.0,->  Sort  (cost=1885137.57..1885146.75 rows=3672 width=12) (actual time=56155.244..56155.245 rows=1 loops=1)
Q15,3672.0,Merge Join  (cost=3753264.15..3758360.43 rows=3672 width=79) (actual time=56187.941..56187.945 rows=1 loops=1)
Q15,3672.0,->  HashAggregate  (cost=1884837.52..1884883.42 rows=3672 width=12) (actual time=56134.638..56155.213 rows=1 loops=1)
Q7,763.7,Sort  (cost=2149879.59..2149887.23 rows=3055 width=64) (actual time=23318.975..23318.976 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2149656.93..2149702.76 rows=3055 width=64) (actual time=23318.892..23318.899 rows=4 loops=1)
Q8,365.0,Sort  (cost=1745252.91..1745254.74 rows=730 width=38) (actual time=15380.711..15380.711 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1745205.42..1745218.20 rows=730 width=38) (actual time=15380.674..15380.675 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2851073.60..2851073.61 rows=1 width=26) (actual time=42065.424..42065.430 rows=100 loops=1)
Q21,100.0,Limit  (cost=2851073.60..2851073.61 rows=1 width=26) (actual time=42065.425..42065.444 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=885110.97..885110.98 rows=1 width=190) (actual time=8739.323..8739.335 rows=100 loops=1)
Q2,100.0,Limit  (cost=885110.97..885110.98 rows=1 width=190) (actual time=8739.325..8739.348 rows=100 loops=1)
Q11,34.3,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8298.030..8299.135 rows=9322 loops=1)
Q11,34.3,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8184.440..8292.874 rows=9322 loops=1)
Q3,28.0,->  HashAggregate  (cost=2457958.70..2489757.60 rows=3179890 width=20) (actual time=50199.417..50295.475 rows=113494 loops=1)
Q15,27.2,->  HashAggregate  (cost=1868043.66..1868080.38 rows=3672 width=12) (actual time=28127.481..28162.275 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=722774)
Q14,13.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8211.05 rows=806305 width=0) (actual time=120.444..120.444 rows=10803200 loops=1)
Q3,10.6,->  Hash Join  (cost=769283.78..2410260.35 rows=3179890 width=20) (actual time=12635.331..49901.867 rows=299300 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2394.36 rows=317647 width=0) (actual time=34.828..34.828 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.084 rows=8 loops=436644)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.599..3.599 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.635..3.635 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.268..0.268 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.288..0.288 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.247..0.247 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.009..0.009 rows=1 loops=1203522)
Q5,5.0,Sort  (cost=1926381.09..1926381.15 rows=25 width=34) (actual time=15911.369..15911.369 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1926380.26..1926380.51 rows=25 width=34) (actual time=15911.331..15911.332 rows=5 loops=1)
Q4,5.0,Sort  (cost=1491244.99..1491245.00 rows=1 width=16) (actual time=13892.261..13892.262 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.04 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=575701)
Q4,5.0,->  HashAggregate  (cost=1491244.97..1491244.98 rows=1 width=16) (actual time=13892.203..13892.204 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=696662)
Q13,4.4,Sort  (cost=852735.51..852736.01 rows=200 width=8) (actual time=27328.799..27328.801 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=852725.87..852727.87 rows=200 width=8) (actual time=27328.730..27328.739 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5837.27 rows=579727 width=0) (actual time=27.666..27.666 rows=2563840 loops=1)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5847.23 rows=580723 width=0) (actual time=27.444..27.444 rows=2545920 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=455899)
Q17,3.7,->  Nested Loop  (cost=78.35..112162.34 rows=19764 width=4) (actual time=1.493..327.383 rows=5260 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5992.97..1490462.55 rows=156484 width=16) (actual time=27.710..13590.242 rows=528005 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.020..0.082 rows=3 loops=1994)
Q15,3.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..254669.68 rows=33936224 width=0) (actual time=137.835..137.835 rows=10814720 loops=1)
Q15,3.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..254669.68 rows=33936224 width=0) (actual time=120.663..120.663 rows=10814720 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246209.69 rows=32808226 width=0) (actual time=120.056..120.056 rows=10760960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.304..0.376 rows=3 loops=21709)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55123.84 rows=7344513 width=0) (actual time=27.510..27.510 rows=2558720 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44693.64 rows=5953819 width=0) (actual time=27.371..27.371 rows=2561280 loops=1)
Q22,2.3,Sort  (cost=693529.59..693529.60 rows=3 width=20) (actual time=9861.224..9861.224 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=640622.15..640622.20 rows=3 width=20) (actual time=9861.176..9861.179 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.039..0.055 rows=2 loops=6341)
Q20,2.0,->  Nested Loop  (cost=754.52..11669243.48 rows=29578 width=4) (actual time=13.307..8507.251 rows=59171 loops=1)
Q20,2.0,->  Hash  (cost=11669243.48..11669243.48 rows=29578 width=4) (actual time=8541.547..8541.547 rows=59171 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.196..4.196 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402958.13..404431.30 rows=589268 width=40) (actual time=9917.120..10111.163 rows=1185013 loops=1)
Q16,2.0,->  Hash Join  (cost=54630.34..346481.02 rows=589268 width=40) (actual time=1248.863..6041.962 rows=1185013 loops=1)
Q12,2.0,Sort  (cost=3068098.43..3068098.44 rows=1 width=27) (actual time=33106.945..33106.945 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3068098.41..3068098.42 rows=1 width=27) (actual time=33106.895..33106.897 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=347261.25..2262651.22 rows=572460 width=175) (actual time=10363.976..32513.473 rows=1146731 loops=1)
Q10,2.0,->  Hash Join  (cost=347259.69..2254778.33 rows=572460 width=153) (actual time=10363.916..32106.538 rows=1146731 loops=1)
Q10,2.0,->  Hash Join  (cost=278231.69..2177163.43 rows=572460 width=12) (actual time=8960.110..29957.343 rows=1146731 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.292..3045.145 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1820948.08 rows=20058162 width=8) (actual time=0.013..19484.447 rows=37928885 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2328947.09 rows=390776 width=38) (actual time=32.346..35121.129 rows=722774 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1906594.76 rows=802326 width=34) (actual time=32.305..26890.124 rows=1494903 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.031..0.257 rows=56 loops=1)
Q1,1.5,Sort  (cost=4199458.11..4199458.12 rows=6 width=20) (actual time=91699.979..91699.979 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4199457.92..4199458.03 rows=6 width=20) (actual time=91699.928..91699.930 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2276962.72..2282687.32 rows=572460 width=175) (actual time=34549.764..34781.913 rows=381311 loops=1)
Q20,1.4,Sort  (cost=11672057.00..11672059.95 rows=1183 width=51) (actual time=8571.144..8571.240 rows=1774 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669656.20..11671996.62 rows=1183 width=51) (actual time=8542.035..8569.953 rows=1774 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.167..4.167 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2875.98 rows=140097 width=0) (actual time=494.470..494.470 rows=190651 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2911.01..41866.55 rows=140097 width=24) (actual time=504.378..600.997 rows=190651 loops=1)
Q9,1.2,GroupAggregate  (cost=1200574.99..1200579.75 rows=136 width=46) (actual time=93557.042..96307.540 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91959.36 rows=9181136 width=0) (actual time=120.246..120.246 rows=10792960 loops=1)
Q15,1.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.019..24.387 rows=83967 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=112112 width=4) (actual time=0.013..648.456 rows=109161 loops=1)
Q9,1.0,->  Hash Join  (cost=66923.40..352365.88 rows=448448 width=16) (actual time=680.253..5130.277 rows=436644 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=112112 width=4) (actual time=679.717..679.717 rows=109161 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.737..2126.275 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.08..1697268.27 rows=123097 width=20) (actual time=10.297..12817.467 rows=120689 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.65..1498520.62 rows=405906 width=16) (actual time=10.136..8326.881 rows=396946 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.52..1744249.87 rows=24619 width=16) (actual time=2236.761..15291.612 rows=24164 loops=1)
Q8,1.0,->  Hash Join  (cost=38754.08..1744713.04 rows=24619 width=38) (actual time=2236.810..15335.467 rows=24164 loops=1)
Q8,1.0,->  Hash Join  (cost=38752.23..1736306.23 rows=24619 width=16) (actual time=2236.738..15125.334 rows=24164 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2220.726..2220.726 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.62 rows=13493 width=0) (actual time=7.810..7.810 rows=13229 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.024..0.024 rows=30 loops=13229)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=417.00..28315.38 rows=13493 width=4) (actual time=10.058..192.727 rows=13229 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.046..0.597 rows=30 loops=13229)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.631..415.178 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=8) (actual time=0.006..2793.792 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2136838.94 rows=1469122 width=42) (actual time=1028.184..22436.984 rows=1461998 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2148739.85 rows=61139 width=64) (actual time=1067.728..23229.618 rows=58727 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535779.34 rows=1214394 width=30) (actual time=1028.146..10326.848 rows=1203522 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.037..959.049 rows=119822 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.041..37.207 rows=7997 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=1027.642..1027.642 rows=119822 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.431..39.431 rows=7997 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92150.78..1377986.34 rows=765669 width=8) (actual time=121.007..26869.643 rows=761834 loops=1)
Q5,1.0,->  Nested Loop  (cost=83612.48..1906389.64 rows=1844776 width=46) (actual time=2184.487..14989.454 rows=1822652 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.738..2040.883 rows=299436 loops=1)
Q5,1.0,->  Hash Join  (cost=88291.48..1925642.36 rows=73790 width=34) (actual time=2239.255..15832.905 rows=73249 loops=1)
Q5,1.0,->  Hash Join  (cost=83611.91..442235.83 rows=461309 width=38) (actual time=2184.466..7557.496 rows=455899 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2154.632..2154.632 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45270.28..390631.56 rows=2306546 width=8) (actual time=27.531..4348.780 rows=2281951 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.668..398.480 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5992.41..269237.25 rows=580723 width=20) (actual time=27.642..5409.459 rows=575701 loops=1)
Q3,1.0,->  Hash Join  (cost=106683.96..496517.18 rows=1468388 width=12) (actual time=447.480..11908.566 rows=1456246 loops=1)
Q3,1.0,->  Hash  (cost=496517.18..496517.18 rows=1468388 width=12) (actual time=12505.022..12505.022 rows=1456246 loops=1)
Q3,1.0,->  Hash  (cost=45975.30..45975.30 rows=299895 width=4) (actual time=417.367..417.367 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6873.64 rows=299895 width=0) (actual time=69.940..69.940 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56959.97..404567.38 rows=7344513 width=16) (actual time=27.671..8474.754 rows=7278337 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=254411.75..1740558.57 rows=32808226 width=12) (actual time=120.830..31235.477 rows=32438905 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6948.61..45975.30 rows=299895 width=4) (actual time=79.110..331.886 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=4) (actual time=0.012..4327.594 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=4) (actual time=9038.364..9038.364 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=596630.71..640181.88 rows=58703 width=20) (actual time=9621.810..9840.280 rows=63356 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6551.88 rows=381982 width=0) (actual time=84.522..84.522 rows=381840 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6647.37..51952.40 rows=381982 width=4) (actual time=93.234..345.659 rows=381840 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.300..31.200 rows=3945 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.241..32.241 rows=3945 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.287..30.540 rows=3945 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6731.429..6853.765 rows=1603983 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.310..144.217 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7905 width=30) (actual time=0.066..1204.047 rows=7885 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=155.551..5553.980 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=155.405..155.405 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.256..27.983 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.311..26.657 rows=3995 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.58 rows=20003 width=0) (actual time=9.048..9.048 rows=21709 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.285..26.018 rows=3995 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.09..34893.92 rows=22022 width=4) (actual time=12.758..309.012 rows=21709 loops=1)
Q19,1.0,->  Nested Loop  (cost=12877.12..619757.17 rows=1136 width=8) (actual time=42.627..5245.823 rows=1111 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=10.440..10.440 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.87 rows=8116 width=0) (actual time=3.516..3.516 rows=7962 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.43 rows=8072 width=0) (actual time=3.762..3.762 rows=8006 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.31 rows=8062 width=0) (actual time=3.776..3.776 rows=8048 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.060..0.060 rows=30 loops=4770)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12872.38..26741.35 rows=4833 width=30) (actual time=41.475..1366.447 rows=4770 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.005..2787.525 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666926.28 rows=60045328 width=8) (actual time=0.005..9096.774 rows=59985329 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666926.28 rows=60045328 width=8) (actual time=0.039..7994.094 rows=59985329 loops=1)
Q18,1.0,Limit  (cost=10152814.23..10152816.98 rows=100 width=39) (actual time=71644.963..71645.296 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.028..0.047 rows=30 loops=1994)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.028..0.047 rows=30 loops=1994)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.10 rows=1967 width=0) (actual time=0.961..0.961 rows=1994 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.59..6527.32 rows=1967 width=4) (actual time=1.293..41.521 rows=1994 loops=1)
Q16,1.0,Sort  (cost=412637.81..412706.87 rows=27622 width=40) (actual time=10788.720..10792.011 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=50931.19..50931.19 rows=294634 width=40) (actual time=1246.607..1246.607 rows=296418 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402958.13..410600.20 rows=27622 width=40) (actual time=9917.177..10728.858 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2468.02..50931.19 rows=294634 width=40) (actual time=34.880..1124.991 rows=296418 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=255229.48..1845651.84 rows=2239182 width=12) (actual time=138.718..25914.593 rows=2249777 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=255229.48..1845651.84 rows=2239182 width=12) (actual time=121.454..25593.364 rows=2249777 loops=1)
Q14,1.0,->  Hash Join  (cost=93934.63..1168163.33 rows=806305 width=29) (actual time=3854.546..32272.387 rows=772802 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8412.63..1070546.75 rows=806305 width=12) (actual time=121.291..27564.191 rows=772802 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445615.79 rows=15029104 width=8) (actual time=0.018..8047.702 rows=14854669 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740080.35 rows=15029104 width=8) (actual time=795.282..17801.010 rows=15354687 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409719.23 rows=15239923 width=20) (actual time=0.010..4670.301 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2453693.84 rows=291001 width=15) (actual time=0.224..22892.607 rows=310933 loops=1)
Q12,1.0,->  Hash Join  (cost=600218.27..3063005.89 rows=291001 width=27) (actual time=9568.550..32783.088 rows=310933 loops=1)
Q12,1.0,->  Hash  (cost=409719.23..409719.23 rows=15239923 width=20) (actual time=9498.569..9498.569 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.330..31.244 rows=4007 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.292..24.126 rows=4007 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.119..3795.377 rows=320560 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=32.318..3993.388 rows=320560 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=32.272..32.272 rows=4007 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.037..25.037 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.263..23.459 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.307..30.632 rows=4007 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824304.52 rows=59378835 width=20) (actual time=0.011..19415.060 rows=59183110 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1836996.01 rows=14989634 width=12) (actual time=0.016..17661.506 rows=14807680 loops=1)
Q10,1.0,->  Hash  (cost=270985.10..270985.10 rows=579727 width=8) (actual time=8955.445..8955.445 rows=573790 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5982.20..270985.10 rows=579727 width=8) (actual time=27.832..8700.421 rows=573790 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=396946)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1494903)
Q19,,->  BitmapOr  (cost=12872.38..12872.38 rows=4837 width=0) (actual time=36.761..36.761 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.700..0.751 rows=0 loops=4770)
Q19,,->  BitmapAnd  (cost=6281.81..6281.81 rows=2425 width=0) (actual time=8.487..8.487 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4300.85..4300.85 rows=1611 width=0) (actual time=15.327..15.327 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2289.23..2289.23 rows=801 width=0) (actual time=8.767..8.767 rows=0 loops=1)
