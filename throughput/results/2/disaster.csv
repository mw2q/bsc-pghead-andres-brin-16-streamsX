Q21,712124.0,->  Nested Loop Semi Join  (cost=2406.31..2887754.63 rows=1 width=34) (actual time=68.187..38460.759 rows=712124 loops=1)
Q18,356733.0,->  GroupAggregate  (cost=10253808.49..11087671.93 rows=30322307 width=39) (actual time=73207.709..73207.991 rows=85 loops=1)
Q3,320169.8,->  Sort  (cost=2567020.26..2575024.51 rows=3201698 width=20) (actual time=42878.051..42878.055 rows=10 loops=1)
Q18,89205.5,->  Hash Join  (cost=2197989.74..2816920.37 rows=7582472 width=39) (actual time=47278.122..53460.551 rows=85 loops=1)
Q18,89205.5,->  Hash Join  (cost=2128961.74..2634155.29 rows=7582472 width=20) (actual time=46356.123..52538.310 rows=85 loops=1)
Q18,89205.5,->  Hash  (cost=2816920.37..2816920.37 rows=7582472 width=39) (actual time=53460.729..53460.729 rows=85 loops=1)
Q18,50961.8,->  Sort  (cost=10253808.49..10329614.26 rows=30322307 width=39) (actual time=73207.699..73207.743 rows=595 loops=1)
Q18,50961.8,->  Hash Join  (cost=2911701.27..5656545.17 rows=30322307 width=39) (actual time=53999.581..73206.823 rows=595 loops=1)
Q18,47790.0,->  Hash  (cost=2078184.77..2078184.77 rows=4062158 width=4) (actual time=46234.428..46234.428 rows=85 loops=1)
Q18,47790.0,->  HashAggregate  (cost=1986786.21..2037563.19 rows=4062158 width=8) (actual time=40250.277..46234.245 rows=85 loops=1)
Q21,39724.0,->  Nested Loop Anti Join  (cost=2406.88..2887756.41 rows=1 width=26) (actual time=68.629..41371.314 rows=39724 loops=1)
Q10,28245.3,->  Sort  (cost=2277770.80..2279183.07 rows=564906 width=175) (actual time=33338.475..33338.479 rows=20 loops=1)
Q9,23811.0,->  Sort  (cost=1215098.25..1215098.59 rows=138 width=46) (actual time=105251.363..105949.073 rows=3285930 loops=1)
Q9,23811.0,->  Nested Loop  (cost=66949.72..1215089.19 rows=138 width=24) (actual time=1102.774..95362.655 rows=3285930 loops=1)
Q9,23811.0,->  Nested Loop  (cost=66949.28..1215022.31 rows=138 width=24) (actual time=1102.738..59234.188 rows=3285930 loops=1)
Q9,23811.0,->  Hash Join  (cost=66951.28..1215093.34 rows=138 width=46) (actual time=1102.838..98990.950 rows=3285930 loops=1)
Q9,23639.7,->  Nested Loop  (cost=66948.99..1214977.46 rows=139 width=28) (actual time=1102.728..48368.403 rows=3285930 loops=1)
Q2,4740.0,->  Merge Join  (cost=465687.75..889458.93 rows=1 width=190) (actual time=5258.804..7267.586 rows=4740 loops=1)
Q21,4029.0,->  HashAggregate  (cost=2887756.42..2887756.43 rows=1 width=26) (actual time=41424.560..41425.602 rows=4029 loops=1)
Q15,3723.0,->  Subquery Scan on revenue2  (cost=1526312.19..1526395.95 rows=3723 width=12) (actual time=53497.261..53516.894 rows=1 loops=1)
Q15,3723.0,->  Sort  (cost=1526616.77..1526626.08 rows=3723 width=12) (actual time=53516.913..53516.914 rows=1 loops=1)
Q15,3723.0,Merge Join  (cost=3036138.85..3041235.90 rows=3723 width=79) (actual time=53543.068..53543.070 rows=1 loops=1)
Q15,3723.0,->  HashAggregate  (cost=1526312.19..1526358.72 rows=3723 width=12) (actual time=53497.260..53516.892 rows=1 loops=1)
Q7,763.7,Sort  (cost=2143558.22..2143565.86 rows=3055 width=64) (actual time=28665.691..28665.692 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2143335.56..2143381.38 rows=3055 width=64) (actual time=28665.627..28665.634 rows=4 loops=1)
Q8,365.0,Sort  (cost=1712513.06..1712514.88 rows=730 width=38) (actual time=11669.240..11669.240 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1712465.56..1712478.34 rows=730 width=38) (actual time=11669.202..11669.202 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2887756.44..2887756.44 rows=1 width=26) (actual time=41426.776..41426.781 rows=100 loops=1)
Q21,100.0,Limit  (cost=2887756.44..2887756.44 rows=1 width=26) (actual time=41426.777..41426.792 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889458.94..889458.95 rows=1 width=190) (actual time=7272.250..7272.263 rows=100 loops=1)
Q2,100.0,Limit  (cost=889458.94..889458.95 rows=1 width=190) (actual time=7272.251..7272.276 rows=100 loops=1)
Q11,38.0,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8593.041..8594.013 rows=8406 loops=1)
Q11,38.0,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8491.947..8588.384 rows=8406 loops=1)
Q3,28.0,->  HashAggregate  (cost=2465815.74..2497832.72 rows=3201698 width=20) (actual time=42807.186..42856.874 rows=114071 loops=1)
Q15,26.8,->  HashAggregate  (cost=1509438.01..1509475.24 rows=3723 width=12) (actual time=28714.723..28749.896 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=738690)
Q14,13.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8007.67 rows=785967 width=0) (actual time=237.243..237.243 rows=10676480 loops=1)
Q3,10.6,->  Hash Join  (cost=772822.05..2417790.27 rows=3201698 width=20) (actual time=11140.146..42514.323 rows=301858 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2396.21 rows=317893 width=0) (actual time=34.896..34.896 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.019..0.095 rows=8 loops=437784)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.604..3.604 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.603..3.603 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.273..0.273 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.355..0.355 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.260..0.260 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.255..0.255 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.012..0.013 rows=1 loops=1202850)
Q5,5.0,Sort  (cost=1970051.69..1970051.76 rows=25 width=34) (actual time=18559.547..18559.547 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1970050.86..1970051.11 rows=25 width=34) (actual time=18559.504..18559.504 rows=5 loops=1)
Q4,5.0,Sort  (cost=1496880.95..1496880.95 rows=1 width=16) (actual time=14717.882..14717.883 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.09 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=574295)
Q4,5.0,->  HashAggregate  (cost=1496880.93..1496880.94 rows=1 width=16) (actual time=14717.833..14717.835 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=712124)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5848.71 rows=580871 width=0) (actual time=27.649..27.649 rows=2568960 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5760.74 rows=572074 width=0) (actual time=27.414..27.414 rows=2540800 loops=1)
Q13,4.3,Sort  (cost=850487.35..850487.85 rows=200 width=8) (actual time=33352.623..33352.626 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=850477.71..850479.71 rows=200 width=8) (actual time=33352.555..33352.563 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=454871)
Q17,3.6,->  Nested Loop  (cost=82.58..113404.25 rows=19925 width=4) (actual time=1.609..206.066 rows=5388 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5994.49..1496105.25 rows=155135 width=16) (actual time=27.858..14408.766 rows=526333 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.016..0.036 rows=3 loops=2020)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..61741.38 rows=8226851 width=0) (actual time=27.384..27.384 rows=2553600 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245489.04 rows=32712138 width=0) (actual time=144.323..144.323 rows=10814720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.60 rows=1 width=8) (actual time=0.400..0.480 rows=3 loops=21551)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55912.57 rows=7449676 width=0) (actual time=27.577..27.577 rows=2571520 loops=1)
Q22,2.3,Sort  (cost=695291.49..695291.49 rows=3 width=20) (actual time=9199.630..9199.631 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642391.69..642391.73 rows=3 width=20) (actual time=9199.573..9199.574 rows=7 loops=1)
Q20,2.1,->  Nested Loop  (cost=677.99..10936202.62 rows=26889 width=4) (actual time=13.230..10647.889 rows=58461 loops=1)
Q20,2.1,->  Hash  (cost=10936202.62..10936202.62 rows=26889 width=4) (actual time=10686.666..10686.666 rows=58461 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.038..0.054 rows=2 loops=6451)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.184..4.184 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403040.90..404515.63 rows=589894 width=40) (actual time=10434.656..10585.272 rows=1187203 loops=1)
Q16,2.0,->  Hash Join  (cost=54642.33..346499.27 rows=589894 width=40) (actual time=1335.375..6871.985 rows=1187203 loops=1)
Q12,2.0,Sort  (cost=3044099.70..3044099.70 rows=1 width=27) (actual time=35149.616..35149.617 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3044099.68..3044099.69 rows=1 width=27) (actual time=35149.570..35149.571 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344693.35..2242967.15 rows=564906 width=175) (actual time=8576.766..30861.983 rows=1147416 loops=1)
Q10,2.0,->  Hash Join  (cost=344691.79..2235198.13 rows=564906 width=153) (actual time=8576.734..30445.523 rows=1147416 loops=1)
Q10,2.0,->  Hash Join  (cost=275663.79..2157696.54 rows=564906 width=12) (actual time=7272.477..28333.851 rows=1147416 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.310..3870.222 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1844249.02 rows=20314827 width=8) (actual time=0.012..19262.441 rows=37965587 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2358810.97 rows=395776 width=38) (actual time=68.114..33635.353 rows=738690 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1930960.87 rows=812593 width=34) (actual time=68.077..26078.148 rows=1528945 loops=1)
Q20,1.7,Sort  (cost=10938974.73..10938977.42 rows=1076 width=51) (actual time=10718.088..10718.195 rows=1831 loops=1)
Q20,1.7,->  Hash Semi Join  (cost=10936581.73..10938920.55 rows=1076 width=51) (actual time=10687.215..10715.502 rows=1831 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.038..0.267 rows=56 loops=1)
Q15,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..138292.54 rows=18419273 width=0) (actual time=119.479..119.479 rows=10718720 loops=1)
Q15,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..138292.54 rows=18419273 width=0) (actual time=118.745..118.745 rows=10728960 loops=1)
Q1,1.5,Sort  (cost=4210415.84..4210415.85 rows=6 width=20) (actual time=92170.711..92170.712 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4210415.65..4210415.76 rows=6 width=20) (actual time=92170.662..92170.665 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.151..4.151 rows=405760 loops=1)
Q15,1.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..19.585 rows=67992 loops=1)
Q10,1.4,->  HashAggregate  (cost=2257089.80..2262738.86 rows=564906 width=175) (actual time=32986.901..33200.279 rows=381871 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2875.21 rows=140020 width=0) (actual time=491.413..491.413 rows=191150 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2910.22..41863.74 rows=140020 width=24) (actual time=500.149..989.983 rows=191150 loops=1)
Q9,1.2,GroupAggregate  (cost=1215098.25..1215103.08 rows=138 width=46) (actual time=105261.772..108165.259 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91364.11 rows=9121611 width=0) (actual time=120.044..120.044 rows=10664960 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.55 rows=18000 width=0) (actual time=9.014..9.014 rows=21551 loops=1)
Q18,1.1,Limit  (cost=10253808.49..10253811.24 rows=100 width=39) (actual time=73207.711..73207.999 rows=85 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=114114 width=4) (actual time=0.012..1055.342 rows=109446 loops=1)
Q9,1.0,->  Hash Join  (cost=66948.43..352470.98 rows=456456 width=16) (actual time=1102.591..5528.053 rows=437784 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=114114 width=4) (actual time=1101.991..1101.991 rows=109446 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.703..2146.528 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.47..1664723.13 rows=120601 width=20) (actual time=7.451..9098.689 rows=122704 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.04..1470001.81 rows=397674 width=16) (actual time=7.412..4643.622 rows=402952 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.91..1711529.35 rows=24120 width=16) (actual time=2251.644..11583.818 rows=24335 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.21 rows=31 width=20) (actual time=0.027..0.318 rows=30 loops=13451)
Q8,1.0,->  Hash Join  (cost=38739.47..1711983.16 rows=24120 width=38) (actual time=2251.698..11627.142 rows=24335 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.62..1703746.73 rows=24120 width=16) (actual time=2251.627..11429.386 rows=24335 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2241.640..2241.640 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..403.18 rows=13167 width=0) (actual time=5.083..5.083 rows=13451 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.47..27913.19 rows=13167 width=4) (actual time=7.355..227.589 rows=13451 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.636..412.253 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.007..4521.111 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2130544.63 rows=1464744 width=42) (actual time=641.744..27778.375 rows=1463953 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2142421.20 rows=60957 width=64) (actual time=701.972..28564.131 rows=59098 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=641.722..11415.818 rows=1202850 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..601.375 rows=120167 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.038..57.324 rows=8074 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=641.194..641.194 rows=120167 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=59.640..59.640 rows=8074 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91459.46..1363168.71 rows=381430 width=8) (actual time=120.814..31083.932 rows=381781 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.749..2319.176 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=100656.25..1950165.70 rows=1832070 width=46) (actual time=2464.147..17565.743 rows=1817818 loops=1)
Q5,1.0,->  Hash Join  (cost=105335.25..1969318.04 rows=73282 width=34) (actual time=2519.436..18463.063 rows=72791 loops=1)
Q5,1.0,->  Hash Join  (cost=100655.68..492524.86 rows=458136 width=38) (actual time=2464.126..10118.952 rows=454871 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2434.533..2434.533 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62314.05..441011.82 rows=2290680 width=8) (actual time=27.554..6539.073 rows=2277660 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.642..452.940 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5993.93..271519.99 rows=580871 width=20) (actual time=27.819..5893.829 rows=574295 loops=1)
Q3,1.0,->  Hash Join  (cost=107503.73..500528.30 rows=1490134 width=12) (actual time=434.520..10330.030 rows=1473321 loops=1)
Q3,1.0,->  Hash  (cost=500528.30..500528.30 rows=1490134 width=12) (actual time=10984.799..10984.799 rows=1473321 loops=1)
Q3,1.0,->  Hash  (cost=45978.24..45978.24 rows=300040 width=4) (actual time=404.231..404.231 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6874.73 rows=300040 width=0) (actual time=67.859..67.859 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57774.99..407961.94 rows=7449676 width=16) (actual time=27.740..6873.907 rows=7347096 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253667.07..1743947.79 rows=32712138 width=12) (actual time=145.085..25173.957 rows=32165037 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6949.74..45978.24 rows=300040 width=4) (actual time=76.949..324.110 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=4) (actual time=0.013..3601.793 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=4) (actual time=7965.868..7965.868 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598405.02..641951.66 rows=58670 width=20) (actual time=8545.258..9171.917 rows=63587 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6550.30 rows=381773 width=0) (actual time=89.024..89.024 rows=382190 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6645.74..51945.29 rows=381773 width=4) (actual time=97.724..363.567 rows=382190 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.307..66.873 rows=4029 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=68.027..68.027 rows=4029 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.292..66.197 rows=4029 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=5258.310..5386.286 rows=1602623 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.342..139.739 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8016 width=30) (actual time=0.015..1196.726 rows=7964 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=151.014..4163.548 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=150.855..150.855 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.259..27.111 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.390..26.960 rows=4054 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.376..26.324 rows=4054 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.56..33178.47 rows=20020 width=4) (actual time=12.697..261.557 rows=21551 loops=1)
Q19,1.0,->  Nested Loop  (cost=12875.19..615620.96 rows=1122 width=8) (actual time=34.308..4258.326 rows=1171 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.160..4.160 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.51 rows=8079 width=0) (actual time=3.479..3.479 rows=7959 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.67 rows=7997 width=0) (actual time=3.593..3.593 rows=7928 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.55 rows=7986 width=0) (actual time=3.792..3.792 rows=8172 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.027..0.027 rows=30 loops=4726)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12870.45..26663.22 rows=4800 width=30) (actual time=32.943..302.244 rows=4726 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=16) (actual time=0.006..2655.101 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1683563.14 rows=60644614 width=8) (actual time=0.005..9361.000 rows=60044872 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1683563.14 rows=60644614 width=8) (actual time=0.011..9660.273 rows=60044872 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.040 rows=30 loops=2020)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.040 rows=30 loops=2020)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.32 rows=1989 width=0) (actual time=0.938..0.938 rows=2020 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.81..6595.24 rows=1989 width=4) (actual time=1.303..35.978 rows=2020 loops=1)
Q16,1.0,Sort  (cost=412731.13..412800.26 rows=27652 width=40) (actual time=11236.888..11240.765 rows=27837 loops=1)
Q16,1.0,->  Hash  (cost=50939.27..50939.27 rows=294947 width=40) (actual time=1332.667..1332.667 rows=296966 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403040.90..410691.09 rows=27652 width=40) (actual time=10434.719..11177.046 rows=27837 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2469.94..50939.27 rows=294947 width=40) (actual time=34.965..1203.850 rows=296966 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=138855.02..1486939.11 rows=2249890 width=12) (actual time=119.499..26469.410 rows=2247029 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=138855.02..1486939.11 rows=2249890 width=12) (actual time=120.247..22756.462 rows=2247029 loops=1)
Q14,1.0,->  Hash Join  (cost=93726.16..1150957.55 rows=785967 width=29) (actual time=1886.883..27447.283 rows=773162 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8204.16..1053646.05 rows=785967 width=12) (actual time=238.170..24771.709 rows=773162 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445175.49 rows=14938711 width=8) (actual time=0.019..9093.801 rows=14853753 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738284.15 rows=14938711 width=8) (actual time=2878.793..21902.794 rows=15353775 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=20) (actual time=0.011..4778.142 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2434362.47 rows=292152 width=15) (actual time=0.085..24480.381 rows=313322 loops=1)
Q12,1.0,->  Hash Join  (cost=595494.80..3038987.02 rows=292152 width=27) (actual time=9985.283..34815.246 rows=313322 loops=1)
Q12,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=20) (actual time=9903.218..9903.218 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.296..30.550 rows=4095 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.296..23.709 rows=4095 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.655..3967.666 rows=327600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=31.579..4153.247 rows=327600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.515..31.515 rows=4095 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.587..24.587 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.269..23.052 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.276..29.879 rows=4095 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1836996.01 rows=59335491 width=20) (actual time=0.014..20084.455 rows=58740407 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1820672.06 rows=14856433 width=12) (actual time=0.012..17653.133 rows=14823192 loops=1)
Q10,1.0,->  Hash  (cost=268512.87..268512.87 rows=572074 width=8) (actual time=7268.564..7268.564 rows=574317 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5903.76..268512.87 rows=572074 width=8) (actual time=27.575..7036.240 rows=574317 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=402952)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1528945)
Q19,,->  BitmapOr  (cost=12870.45..12870.45 rows=4803 width=0) (actual time=29.134..29.134 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.788..0.831 rows=0 loops=4726)
Q19,,->  BitmapAnd  (cost=6281.43..6281.43 rows=2414 width=0) (actual time=8.290..8.290 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4300.07..4300.07 rows=1595 width=0) (actual time=8.708..8.708 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.46..2288.46 rows=793 width=0) (actual time=8.501..8.501 rows=0 loops=1)
