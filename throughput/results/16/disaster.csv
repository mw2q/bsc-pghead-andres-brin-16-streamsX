Q21,702046.0,->  Nested Loop Semi Join  (cost=2406.31..2884901.33 rows=1 width=34) (actual time=32.331..38417.653 rows=702046 loops=1)
Q18,399373.6,->  GroupAggregate  (cost=10263948.81..11098639.81 rows=30352400 width=39) (actual time=76505.759..76506.008 rows=76 loops=1)
Q3,313296.1,->  Sort  (cost=2542062.08..2549894.48 rows=3132961 width=20) (actual time=44138.070..44138.073 rows=10 loops=1)
Q18,99867.9,->  Hash Join  (cost=2199961.54..2819463.58 rows=7589964 width=39) (actual time=48277.785..56788.550 rows=76 loops=1)
Q18,99867.9,->  Hash Join  (cost=2130933.54..2636586.12 rows=7589964 width=20) (actual time=47398.194..55908.640 rows=76 loops=1)
Q18,99867.9,->  Hash  (cost=2819463.58..2819463.58 rows=7589964 width=39) (actual time=56788.800..56788.800 rows=76 loops=1)
Q18,57053.3,->  Sort  (cost=10263948.81..10339829.81 rows=30352400 width=39) (actual time=76505.746..76505.783 rows=532 loops=1)
Q18,57053.3,->  Hash Join  (cost=2914338.13..5661906.17 rows=30352400 width=39) (actual time=57081.530..76504.987 rows=532 loops=1)
Q18,53449.4,->  Hash  (cost=2080156.57..2080156.57 rows=4062158 width=4) (actual time=47154.218..47154.218 rows=76 loops=1)
Q18,53449.4,->  HashAggregate  (cost=1988758.01..2039534.99 rows=4062158 width=8) (actual time=40853.766..47153.987 rows=76 loops=1)
Q21,39360.0,->  Nested Loop Anti Join  (cost=2406.88..2884903.11 rows=1 width=26) (actual time=32.985..41257.488 rows=39360 loops=1)
Q10,28785.8,->  Sort  (cost=2291971.21..2293410.50 rows=575716 width=175) (actual time=33850.292..33850.297 rows=20 loops=1)
Q9,22403.6,->  Sort  (cost=1261581.64..1261582.00 rows=146 width=46) (actual time=95198.609..95906.740 rows=3270930 loops=1)
Q9,22403.6,->  Nested Loop  (cost=67024.79..1261572.09 rows=146 width=24) (actual time=884.911..85613.147 rows=3270930 loops=1)
Q9,22403.6,->  Nested Loop  (cost=67024.36..1261501.33 rows=146 width=24) (actual time=884.895..54534.747 rows=3270930 loops=1)
Q9,22403.6,->  Nested Loop  (cost=67024.07..1261454.22 rows=146 width=28) (actual time=884.886..43440.517 rows=3270930 loops=1)
Q9,22403.6,->  Hash Join  (cost=67026.35..1261576.39 rows=146 width=46) (actual time=884.961..88939.329 rows=3270930 loops=1)
Q2,4761.0,->  Merge Join  (cost=465687.75..896933.54 rows=1 width=190) (actual time=5101.050..6907.740 rows=4761 loops=1)
Q21,3974.0,->  HashAggregate  (cost=2884903.12..2884903.13 rows=1 width=26) (actual time=41313.964..41315.298 rows=3974 loops=1)
Q15,3754.0,->  Subquery Scan on revenue16  (cost=2024665.89..2024750.36 rows=3754 width=12) (actual time=43382.644..43386.085 rows=1 loops=1)
Q15,3754.0,->  Sort  (cost=2024973.23..2024982.62 rows=3754 width=12) (actual time=43386.105..43386.105 rows=1 loops=1)
Q15,3754.0,Merge Join  (cost=4032641.52..4037739.03 rows=3754 width=79) (actual time=43389.390..43389.391 rows=1 loops=1)
Q15,3754.0,->  HashAggregate  (cost=2024665.89..2024712.82 rows=3754 width=12) (actual time=43382.643..43386.083 rows=1 loops=1)
Q7,763.7,Sort  (cost=2156194.41..2156202.05 rows=3055 width=64) (actual time=25161.253..25161.253 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2155971.74..2156017.57 rows=3055 width=64) (actual time=25161.187..25161.196 rows=4 loops=1)
Q8,365.0,Sort  (cost=1812204.87..1812206.70 rows=730 width=38) (actual time=13870.120..13870.120 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1812157.38..1812170.15 rows=730 width=38) (actual time=13870.081..13870.082 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2884903.14..2884903.14 rows=1 width=26) (actual time=41316.489..41316.495 rows=100 loops=1)
Q21,100.0,Limit  (cost=2884903.14..2884903.14 rows=1 width=26) (actual time=41316.489..41316.506 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=896933.55..896933.55 rows=1 width=190) (actual time=6912.399..6912.418 rows=100 loops=1)
Q2,100.0,Limit  (cost=896933.55..896933.55 rows=1 width=190) (actual time=6912.401..6912.430 rows=100 loops=1)
Q11,33.8,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8998.201..8999.383 rows=9467 loops=1)
Q11,33.8,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8908.789..8992.972 rows=9467 loops=1)
Q3,27.7,->  HashAggregate  (cost=2443030.30..2474359.91 rows=3132961 width=20) (actual time=44069.715..44117.369 rows=112971 loops=1)
Q15,26.6,->  HashAggregate  (cost=2007583.52..2007621.06 rows=3754 width=12) (actual time=21911.914..21950.423 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=728514)
Q14,14.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7743.06 rows=759506 width=0) (actual time=120.505..120.505 rows=10718720 loops=1)
Q15,12.6,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..2.489 rows=7917 loops=1)
Q3,10.5,->  Hash Join  (cost=764096.38..2396035.89 rows=3132961 width=20) (actual time=16289.195..43814.293 rows=298205 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2414.81 rows=320373 width=0) (actual time=35.178..35.178 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.085 rows=8 loops=435644)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.603..3.603 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.642..3.642 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.236..0.236 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.249..0.249 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.259..0.259 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.255..0.255 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.250..0.250 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1198352)
Q5,5.0,Sort  (cost=2006511.76..2006511.82 rows=25 width=34) (actual time=14964.437..14964.437 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2006510.93..2006511.18 rows=25 width=34) (actual time=14964.396..14964.397 rows=5 loops=1)
Q4,5.0,Sort  (cost=1489790.60..1489790.61 rows=1 width=16) (actual time=15130.630..15130.631 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=574176)
Q4,5.0,->  HashAggregate  (cost=1489790.58..1489790.59 rows=1 width=16) (actual time=15130.578..15130.579 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=702046)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5820.78 rows=578078 width=0) (actual time=27.549..27.549 rows=2551040 loops=1)
Q13,4.3,Sort  (cost=854941.31..854941.81 rows=200 width=8) (actual time=26617.501..26617.504 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=854931.67..854933.67 rows=200 width=8) (actual time=26617.429..26617.436 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5870.36 rows=583036 width=0) (actual time=27.548..27.548 rows=2556160 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.011..0.013 rows=4 loops=453518)
Q17,3.7,->  Nested Loop  (cost=82.64..113743.02 rows=20065 width=4) (actual time=4.171..879.381 rows=5349 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5965.86..1489013.27 rows=155462 width=16) (actual time=27.747..14777.156 rows=526415 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.049..0.137 rows=3 loops=1963)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245688.72 rows=32738763 width=0) (actual time=257.114..257.114 rows=10686720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.325..0.397 rows=3 loops=21569)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54461.01 rows=7256134 width=0) (actual time=54.030..54.030 rows=2540800 loops=1)
Q22,2.3,Sort  (cost=694083.00..694083.00 rows=3 width=20) (actual time=8683.524..8683.525 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641196.77..641196.81 rows=3 width=20) (actual time=8683.477..8683.480 rows=7 loops=1)
Q20,2.1,->  Nested Loop  (cost=677.99..10613880.63 rows=26889 width=4) (actual time=13.797..8837.124 rows=58628 loops=1)
Q20,2.1,->  Hash  (cost=10613880.63..10613880.63 rows=26889 width=4) (actual time=8872.305..8872.305 rows=58628 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.049 rows=2 loops=6469)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.277..4.277 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3056172.86..3056172.87 rows=1 width=27) (actual time=34913.963..34913.963 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3056172.84..3056172.85 rows=1 width=27) (actual time=34913.915..34913.916 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=403674.63..405160.94 rows=594524 width=40) (actual time=10577.530..10777.723 rows=1188985 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.327..3835.988 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54752.45..346655.69 rows=594524 width=40) (actual time=1028.589..6550.852 rows=1188985 loops=1)
Q10,1.9,->  Hash Join  (cost=346627.17..2256501.55 rows=575716 width=175) (actual time=8605.257..31398.839 rows=1149764 loops=1)
Q10,1.9,->  Hash Join  (cost=346625.61..2248583.89 rows=575716 width=153) (actual time=8605.225..30986.194 rows=1149764 loops=1)
Q10,1.9,->  Hash Join  (cost=277597.61..2170920.15 rows=575716 width=12) (actual time=7160.447..28776.878 rows=1149764 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1842436.20 rows=20294859 width=8) (actual time=0.014..18852.612 rows=37965829 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2356487.97 rows=395387 width=38) (actual time=32.296..33749.059 rows=728514 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1929065.18 rows=811794 width=34) (actual time=32.251..26047.144 rows=1507285 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.285 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616652.75..10616655.44 rows=1076 width=51) (actual time=8902.463..8902.558 rows=1771 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10614259.74..10616598.56 rows=1076 width=51) (actual time=8872.777..8901.112 rows=1771 loops=1)
Q1,1.5,Sort  (cost=4174097.66..4174097.68 rows=6 width=20) (actual time=90910.634..90910.635 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4174097.48..4174097.58 rows=6 width=20) (actual time=90910.586..90910.587 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2270894.45..2276651.61 rows=575716 width=175) (actual time=33458.656..33710.688 rows=381752 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.171..4.171 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2873.81 rows=139883 width=0) (actual time=718.437..718.437 rows=190759 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2908.78..41858.71 rows=139883 width=24) (actual time=726.977..1152.720 rows=190759 loops=1)
Q18,1.3,Limit  (cost=10263948.81..10263951.56 rows=100 width=39) (actual time=76505.761..76506.020 rows=76 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=120120 width=4) (actual time=0.017..845.698 rows=108911 loops=1)
Q9,1.1,->  Hash Join  (cost=67023.50..352786.30 rows=480480 width=16) (actual time=884.815..5372.108 rows=435644 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=120120 width=4) (actual time=884.247..884.247 rows=108911 loops=1)
Q9,1.1,GroupAggregate  (cost=1261581.64..1261586.75 rows=146 width=46) (actual time=95209.176..98153.605 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91268.70 rows=9112070 width=0) (actual time=118.570..118.570 rows=10696960 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.55 rows=18000 width=0) (actual time=9.489..9.489 rows=21569 loops=1)
Q19,1.1,->  Nested Loop  (cost=12857.06..629694.90 rows=1124 width=8) (actual time=42.135..3758.294 rows=1012 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.746..2136.158 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=423.70..1763985.78 rows=126101 width=20) (actual time=7.707..11305.020 rows=124800 loops=1)
Q8,1.0,->  Nested Loop  (cost=423.27..1560379.66 rows=415810 width=16) (actual time=7.379..4790.867 rows=411271 loops=1)
Q8,1.0,->  Nested Loop  (cost=38754.14..1811178.54 rows=25220 width=16) (actual time=2247.663..13786.390 rows=25132 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..111.38 rows=32 width=20) (actual time=0.026..0.329 rows=30 loops=13678)
Q8,1.0,->  Hash Join  (cost=38755.71..1811652.98 rows=25220 width=38) (actual time=2247.714..13827.094 rows=25132 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.85..1803041.01 rows=25220 width=16) (actual time=2247.624..13630.500 rows=25132 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2235.417..2235.417 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..419.27 rows=13713 width=0) (actual time=4.988..4.988 rows=13678 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=422.70..28579.39 rows=13713 width=4) (actual time=7.333..155.801 rows=13678 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.640..413.228 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=8) (actual time=0.006..3732.957 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2143126.86 rows=1473473 width=42) (actual time=612.344..24269.250 rows=1458411 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2155051.94 rows=61320 width=64) (actual time=676.914..25063.612 rows=58695 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..537192.39 rows=1217990 width=30) (actual time=612.318..10624.136 rows=1198352 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.046..572.879 rows=119473 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.040..36.911 rows=8031 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=611.814..611.814 rows=119473 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=63.908..63.908 rows=8031 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91466.81..1366152.39 rows=792442 width=8) (actual time=119.420..25949.655 rows=793754 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..480657.80 rows=2291032 width=8) (actual time=0.012..4270.862 rows=2278174 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.730..2251.713 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1986623.09 rows=1832392 width=46) (actual time=2377.604..14096.467 rows=1812851 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2005777.98 rows=73295 width=34) (actual time=2433.441..14883.269 rows=72943 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..532172.86 rows=458206 width=38) (actual time=2377.581..7737.802 rows=453518 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2375.001..2375.001 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.678..437.332 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5965.30..269677.47 rows=578078 width=20) (actual time=27.720..6871.865 rows=574176 loops=1)
Q3,1.0,->  Hash Join  (cost=105888.69..492226.24 rows=1439738 width=12) (actual time=666.090..15321.068 rows=1442902 loops=1)
Q3,1.0,->  Hash  (cost=492226.24..492226.24 rows=1439738 width=12) (actual time=16021.196..16021.196 rows=1442902 loops=1)
Q3,1.0,->  Hash  (cost=45893.33..45893.33 rows=297625 width=4) (actual time=609.416..609.416 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6820.61 rows=297625 width=0) (actual time=70.076..70.076 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56275.04..401004.72 rows=7256134 width=16) (actual time=54.189..11669.580 rows=7233385 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253873.41..1731712.95 rows=32738763 width=12) (actual time=257.852..21456.531 rows=32558337 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6895.02..45893.33 rows=297625 width=4) (actual time=79.257..527.315 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=4) (actual time=0.017..3401.805 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=4) (actual time=7326.161..7326.161 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597218.62..640757.17 rows=58613 width=20) (actual time=8098.267..8655.841 rows=63497 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6547.52 rows=381401 width=0) (actual time=109.196..109.196 rows=382040 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6642.87..51932.65 rows=381401 width=4) (actual time=117.814..592.254 rows=382040 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.282..31.084 rows=3974 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.145..32.145 rows=3974 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.270..30.408 rows=3974 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=5100.700..5224.828 rows=1586871 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.294..131.964 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8207 width=30) (actual time=0.143..1035.896 rows=8061 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=142.932..4038.545 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=142.796..142.796 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.249..25.515 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.294..27.008 rows=3974 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.277..26.390 rows=3974 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.56..33178.47 rows=20020 width=4) (actual time=13.177..242.887 rows=21569 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.178..4.178 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.15 rows=8045 width=0) (actual time=3.403..3.403 rows=7932 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.27 rows=7956 width=0) (actual time=3.620..3.620 rows=7920 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.23 rows=7851 width=0) (actual time=3.661..3.661 rows=8054 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.029..0.029 rows=30 loops=4704)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12852.31..26550.92 rows=4758 width=30) (actual time=33.111..342.129 rows=4704 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=16) (actual time=0.005..4653.883 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1685234.01 rows=60704801 width=8) (actual time=0.008..10023.538 rows=59984852 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1685234.01 rows=60704801 width=8) (actual time=0.044..8439.685 rows=59984852 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.143..0.195 rows=30 loops=1963)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.143..0.195 rows=30 loops=1963)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.38 rows=1995 width=0) (actual time=1.836..1.836 rows=1963 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.88..6613.48 rows=1995 width=4) (actual time=2.141..208.845 rows=1963 loops=1)
Q16,1.0,Sort  (cost=413442.49..413512.16 rows=27869 width=40) (actual time=11467.045..11470.734 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51020.45..51020.45 rows=297262 width=40) (actual time=1025.920..1025.920 rows=297405 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403674.63..411384.87 rows=27869 width=40) (actual time=10577.594..11406.261 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2489.12..51020.45 rows=297262 width=40) (actual time=35.245..906.594 rows=297405 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1984807.02 rows=2277650 width=12) (actual time=0.080..19643.134 rows=2243814 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1984807.02 rows=2277650 width=12) (actual time=0.085..19218.253 rows=2243814 loops=1)
Q14,1.0,->  Hash Join  (cost=93454.94..1142480.78 rows=759506 width=29) (actual time=2940.198..28848.671 rows=773494 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7932.94..1045566.19 rows=759506 width=12) (actual time=121.375..25049.130 rows=773494 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446936.69 rows=15073349 width=8) (actual time=0.023..7415.206 rows=14852526 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742064.92 rows=15073349 width=8) (actual time=846.082..17309.147 rows=15352545 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=20) (actual time=0.012..4311.946 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2444044.02 rows=292789 width=15) (actual time=0.142..24129.786 rows=312829 loops=1)
Q12,1.0,->  Hash Join  (cost=597855.36..3051049.04 rows=292789 width=27) (actual time=10079.194..34581.768 rows=312829 loops=1)
Q12,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=20) (actual time=9969.975..9969.975 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.301..24.143 rows=3988 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.290..30.905 rows=3988 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.091..4112.603 rows=319040 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=31.884..4409.567 rows=319040 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.826..31.826 rows=3988 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.020..25.020 rows=3988 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.273..23.526 rows=3988 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.267..30.265 rows=3988 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817039.60 rows=58926447 width=20) (actual time=0.010..19003.503 rows=58903618 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831521.76 rows=14944965 width=12) (actual time=0.044..18185.181 rows=14822845 loops=1)
Q10,1.0,->  Hash  (cost=270309.66..270309.66 rows=583036 width=8) (actual time=7155.784..7155.784 rows=574499 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6016.12..270309.66 rows=583036 width=8) (actual time=27.717..6879.461 rows=574499 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.015..0.015 rows=0 loops=411271)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1507285)
Q19,,->  BitmapOr  (cost=12852.31..12852.31 rows=4762 width=0) (actual time=29.242..29.242 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.685..0.720 rows=0 loops=4704)
Q19,,->  BitmapAnd  (cost=6281.05..6281.05 rows=2404 width=0) (actual time=8.319..8.319 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4282.73..4282.73 rows=1569 width=0) (actual time=8.620..8.620 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.03..2288.03 rows=789 width=0) (actual time=8.673..8.673 rows=0 loops=1)
