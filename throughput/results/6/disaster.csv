Q21,694149.0,->  Nested Loop Semi Join  (cost=2406.31..2890621.35 rows=1 width=34) (actual time=32.727..37285.598 rows=694149 loops=1)
Q3,315171.8,->  Sort  (cost=2532059.32..2539938.62 rows=3151718 width=20) (actual time=36208.122..36208.125 rows=10 loops=1)
Q18,303223.0,->  GroupAggregate  (cost=10253808.49..11087671.93 rows=30322307 width=39) (actual time=77723.612..77723.942 rows=100 loops=1)
Q18,67700.6,->  Hash Join  (cost=2197989.74..2816920.37 rows=7582472 width=39) (actual time=52521.726..58872.739 rows=112 loops=1)
Q18,67700.6,->  Hash Join  (cost=2128961.74..2634155.29 rows=7582472 width=20) (actual time=51633.935..57984.539 rows=112 loops=1)
Q18,67700.6,->  Hash  (cost=2816920.37..2816920.37 rows=7582472 width=39) (actual time=58872.980..58872.980 rows=112 loops=1)
Q18,43255.7,->  Sort  (cost=10253808.49..10329614.26 rows=30322307 width=39) (actual time=77723.602..77723.651 rows=701 loops=1)
Q21,39093.0,->  Nested Loop Anti Join  (cost=2406.88..2890623.13 rows=1 width=26) (actual time=33.752..39990.263 rows=39093 loops=1)
Q18,38676.4,->  Hash Join  (cost=2911701.27..5656545.17 rows=30322307 width=39) (actual time=59309.947..77722.523 rows=784 loops=1)
Q18,36269.2,->  Hash  (cost=2078184.77..2078184.77 rows=4062158 width=4) (actual time=51471.732..51471.732 rows=112 loops=1)
Q18,36269.2,->  HashAggregate  (cost=1986786.21..2037563.19 rows=4062158 width=8) (actual time=44242.548..51471.431 rows=112 loops=1)
Q10,28435.1,->  Sort  (cost=2274047.48..2275469.24 rows=568703 width=175) (actual time=34410.071..34410.075 rows=20 loops=1)
Q9,22725.4,->  Sort  (cost=1246080.15..1246080.51 rows=144 width=46) (actual time=162625.048..163308.936 rows=3272458 loops=1)
Q9,22725.4,->  Nested Loop  (cost=66999.77..1246070.73 rows=144 width=24) (actual time=2494.717..152074.175 rows=3272458 loops=1)
Q9,22725.4,->  Nested Loop  (cost=66999.33..1246000.94 rows=144 width=24) (actual time=2494.694..99734.354 rows=3272458 loops=1)
Q9,22725.4,->  Nested Loop  (cost=66999.04..1245954.48 rows=144 width=28) (actual time=2494.683..87322.816 rows=3272458 loops=1)
Q9,22725.4,->  Hash Join  (cost=67001.33..1246074.99 rows=144 width=46) (actual time=2494.768..156062.727 rows=3272458 loops=1)
Q2,4628.0,->  Merge Join  (cost=465687.75..879492.80 rows=1 width=190) (actual time=6671.791..8601.597 rows=4628 loops=1)
Q21,3933.0,->  HashAggregate  (cost=2890623.13..2890623.14 rows=1 width=26) (actual time=40045.734..40046.789 rows=3933 loops=1)
Q15,3723.0,->  Subquery Scan on revenue6  (cost=1402208.47..1402292.24 rows=3723 width=12) (actual time=61707.600..61721.428 rows=1 loops=1)
Q15,3723.0,->  Sort  (cost=1402513.06..1402522.36 rows=3723 width=12) (actual time=61721.454..61721.455 rows=1 loops=1)
Q15,3723.0,Merge Join  (cost=2787981.49..2793078.54 rows=3723 width=79) (actual time=61735.189..61735.191 rows=1 loops=1)
Q15,3723.0,->  HashAggregate  (cost=1402208.47..1402255.01 rows=3723 width=12) (actual time=61707.599..61721.426 rows=1 loops=1)
Q7,763.7,Sort  (cost=2145665.97..2145673.61 rows=3055 width=64) (actual time=26319.431..26319.432 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2145443.31..2145489.13 rows=3055 width=64) (actual time=26319.364..26319.372 rows=4 loops=1)
Q8,365.0,Sort  (cost=1765332.25..1765334.08 rows=730 width=38) (actual time=14303.361..14303.361 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1765284.76..1765297.53 rows=730 width=38) (actual time=14303.303..14303.304 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2890623.15..2890623.16 rows=1 width=26) (actual time=40047.936..40047.944 rows=100 loops=1)
Q21,100.0,Limit  (cost=2890623.15..2890623.16 rows=1 width=26) (actual time=40047.937..40047.954 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=879492.81..879492.81 rows=1 width=190) (actual time=8606.290..8606.303 rows=100 loops=1)
Q2,100.0,Limit  (cost=879492.81..879492.81 rows=1 width=190) (actual time=8606.293..8606.314 rows=100 loops=1)
Q11,30.8,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8813.603..8814.865 rows=10364 loops=1)
Q11,30.8,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8703.266..8807.825 rows=10364 loops=1)
Q3,27.7,->  HashAggregate  (cost=2432434.65..2463951.83 rows=3151718 width=20) (actual time=36138.088..36186.959 rows=113633 loops=1)
Q15,26.8,->  HashAggregate  (cost=1385384.36..1385421.59 rows=3723 width=12) (actual time=31881.813..31916.298 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=720626)
Q14,14.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7839.88 rows=769188 width=0) (actual time=126.935..126.935 rows=10835200 loops=1)
Q3,10.5,->  Hash Join  (cost=763243.59..2385158.88 rows=3151718 width=20) (actual time=10016.693..35871.880 rows=300159 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2417.86 rows=320780 width=0) (actual time=34.750..34.750 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.032..0.172 rows=8 loops=435892)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.608..3.608 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.645..3.645 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.275..0.275 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.258..0.258 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.266..0.266 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.012..0.012 rows=1 loops=1195368)
Q5,5.0,Sort  (cost=1936246.00..1936246.07 rows=25 width=34) (actual time=24878.697..24878.698 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1936245.17..1936245.42 rows=25 width=34) (actual time=24878.650..24878.651 rows=5 loops=1)
Q4,5.0,Sort  (cost=1471835.03..1471835.03 rows=1 width=16) (actual time=13877.622..13877.622 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.26 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=555576)
Q4,5.0,->  HashAggregate  (cost=1471835.01..1471835.02 rows=1 width=16) (actual time=13877.570..13877.571 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=694149)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5624.58 rows=558458 width=0) (actual time=30.389..30.389 rows=2558720 loops=1)
Q13,4.4,Sort  (cost=846660.22..846660.72 rows=200 width=8) (actual time=30981.642..30981.644 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=846650.58..846652.58 rows=200 width=8) (actual time=30981.572..30981.583 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5799.21 rows=575921 width=0) (actual time=27.348..27.348 rows=2535680 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.017..0.019 rows=4 loops=456626)
Q17,3.7,->  Nested Loop  (cost=82.77..122341.73 rows=20396 width=4) (actual time=1.537..182.398 rows=5501 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.78..57.57 rows=11 width=12) (actual time=0.013..0.029 rows=3 loops=2053)
Q4,3.4,->  Nested Loop Semi Join  (cost=5764.76..1471086.31 rows=149739 width=16) (actual time=30.616..13575.434 rows=509454 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241465.74 rows=32175699 width=0) (actual time=118.346..118.346 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.290..0.359 rows=3 loops=21576)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55384.45 rows=7379261 width=0) (actual time=27.168..27.168 rows=2538240 loops=1)
Q15,2.8,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.021..10.278 rows=34927 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44914.42 rows=5983256 width=0) (actual time=27.606..27.606 rows=2574080 loops=1)
Q22,2.3,Sort  (cost=697055.31..697055.32 rows=3 width=20) (actual time=9592.645..9592.645 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=644159.32..644159.36 rows=3 width=20) (actual time=9592.600..9592.602 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.038..0.053 rows=2 loops=6347)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.194..4.194 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3059140.98..3059140.98 rows=1 width=27) (actual time=34686.022..34686.022 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3059140.96..3059140.97 rows=1 width=27) (actual time=34685.971..34685.972 rows=2 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.49..12023795.26 rows=29578 width=4) (actual time=13.396..8000.637 rows=58500 loops=1)
Q20,1.9,->  Hash  (cost=12023795.26..12023795.26 rows=29578 width=4) (actual time=8035.446..8035.446 rows=58500 loops=1)
Q16,1.9,->  Sort  (cost=403803.53..405292.26 rows=595492 width=40) (actual time=10409.069..10562.430 rows=1188886 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.317..3893.334 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54771.85..346684.77 rows=595492 width=40) (actual time=1356.960..6796.549 rows=1188886 loops=1)
Q10,1.9,->  Hash Join  (cost=344332.58..2239009.89 rows=568703 width=175) (actual time=11831.874..32212.620 rows=1135709 loops=1)
Q10,1.9,->  Hash Join  (cost=344331.01..2231188.66 rows=568703 width=153) (actual time=11831.843..31825.600 rows=1135709 loops=1)
Q10,1.9,->  Hash Join  (cost=275303.01..2153630.12 rows=568703 width=12) (actual time=10475.685..29642.867 rows=1135709 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1846070.38 rows=20334890 width=8) (actual time=0.011..19052.738 rows=37927710 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2361144.78 rows=396167 width=38) (actual time=32.688..32489.935 rows=720626 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1932865.49 rows=813396 width=34) (actual time=32.608..24934.578 rows=1491742 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.033..0.282 rows=56 loops=1)
Q20,1.5,Sort  (cost=12026608.78..12026611.74 rows=1183 width=51) (actual time=8065.542..8065.639 rows=1802 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12024207.99..12026548.40 rows=1183 width=51) (actual time=8035.893..8064.025 rows=1802 loops=1)
Q1,1.5,Sort  (cost=4241757.74..4241757.76 rows=6 width=20) (actual time=96905.287..96905.288 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4241757.56..4241757.67 rows=6 width=20) (actual time=96905.235..96905.237 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2253227.47..2258914.50 rows=568703 width=175) (actual time=34075.576..34272.994 rows=378505 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.164..4.164 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.79 rows=139982 width=0) (actual time=452.589..452.589 rows=191133 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.79..41862.32 rows=139982 width=24) (actual time=461.301..572.209 rows=191133 loops=1)
Q9,1.2,GroupAggregate  (cost=1246080.15..1246085.19 rows=144 width=46) (actual time=162635.718..165544.216 rows=175 loops=1)
Q15,1.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..98027.47 rows=13050596 width=0) (actual time=120.742..120.742 rows=10696960 loops=1)
Q15,1.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..98027.47 rows=13050596 width=0) (actual time=118.475..118.475 rows=10686720 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91234.32 rows=9108632 width=0) (actual time=119.181..119.181 rows=10708480 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=118118 width=4) (actual time=0.009..2444.799 rows=108973 loops=1)
Q9,1.0,->  Hash Join  (cost=66998.48..352681.19 rows=472472 width=16) (actual time=2494.655..11074.279 rows=435892 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=118118 width=4) (actual time=2494.126..2494.126 rows=108973 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.741..2110.384 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=423.29..1717209.12 rows=124869 width=20) (actual time=7.269..11727.648 rows=121443 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.86..1515598.30 rows=411749 width=16) (actual time=7.150..5807.665 rows=399750 loops=1)
Q8,1.0,->  Nested Loop  (cost=38753.73..1764315.45 rows=24974 width=16) (actual time=2217.640..14214.385 rows=24383 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.55 rows=31 width=20) (actual time=0.033..0.412 rows=30 loops=13288)
Q8,1.0,->  Hash Join  (cost=38755.30..1764785.28 rows=24974 width=38) (actual time=2217.688..14257.681 rows=24383 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.44..1756257.27 rows=24974 width=16) (actual time=2217.631..14057.848 rows=24383 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2207.540..2207.540 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.88 rows=13660 width=0) (actual time=4.811..4.811 rows=13288 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=422.29..28516.66 rows=13660 width=4) (actual time=7.116..170.294 rows=13288 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.644..412.111 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=8) (actual time=0.007..3114.198 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2132643.39 rows=1466203 width=42) (actual time=619.083..25465.992 rows=1455127 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2144528.05 rows=61017 width=64) (actual time=658.233..26219.331 rows=58494 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534837.31 rows=1211997 width=30) (actual time=619.020..9750.025 rows=1195368 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.041..579.060 rows=119644 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..36.851 rows=8017 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=618.513..618.513 rows=119644 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.054..39.054 rows=8017 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91432.50..1367113.72 rows=792726 width=8) (actual time=119.946..27794.889 rows=798483 loops=1)
Q5,1.0,->  Nested Loop  (cost=83836.11..1916178.84 rows=1853897 width=46) (actual time=2404.254..23896.697 rows=1827745 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.788..2254.528 rows=299493 loops=1)
Q5,1.0,->  Hash Join  (cost=88515.11..1935503.62 rows=74155 width=34) (actual time=2458.671..24783.510 rows=72691 loops=1)
Q5,1.0,->  Hash Join  (cost=83835.54..444232.59 rows=463590 width=38) (actual time=2404.212..14626.741 rows=456626 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2374.053..2374.053 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45493.91..392562.75 rows=2317950 width=8) (actual time=27.769..11065.909 rows=2284299 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.684..440.356 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5764.19..269942.06 rows=558458 width=20) (actual time=30.583..5478.115 rows=555576 loops=1)
Q3,1.0,->  Hash Join  (cost=106920.63..495330.98 rows=1472236 width=12) (actual time=1688.348..9364.832 rows=1474166 loops=1)
Q3,1.0,->  Hash  (cost=495330.98..495330.98 rows=1472236 width=12) (actual time=9891.253..9891.253 rows=1474166 loops=1)
Q3,1.0,->  Hash  (cost=45950.54..45950.54 rows=299265 width=4) (actual time=1659.057..1659.057 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6856.91 rows=299265 width=0) (actual time=66.429..66.429 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57229.27..403245.03 rows=7379261 width=16) (actual time=27.329..4814.612 rows=7371832 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249509.67..1719248.90 rows=32175699 width=12) (actual time=119.105..20074.109 rows=32065594 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6931.73..45950.54 rows=299265 width=4) (actual time=75.296..1557.507 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=4) (actual time=0.013..3982.988 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=4) (actual time=8821.191..8821.191 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=600175.01..643719.41 rows=58654 width=20) (actual time=9341.837..9571.546 rows=63403 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6549.51 rows=381669 width=0) (actual time=85.283..85.283 rows=382632 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6644.93..51941.74 rows=381669 width=4) (actual time=94.079..325.211 rows=382632 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.313..31.513 rows=3933 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.567..32.567 rows=3933 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.300..30.881 rows=3933 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6671.486..6791.862 rows=1603294 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.317..135.073 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7761 width=30) (actual time=0.097..1151.923 rows=7909 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=146.519..5520.056 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=146.329..146.329 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.261..26.159 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.295..27.000 rows=4009 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.107..9.107 rows=21576 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.278..26.387 rows=4009 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.745..216.778 rows=21576 loops=1)
Q19,1.0,->  Nested Loop  (cost=12859.16..631763.34 rows=1128 width=8) (actual time=35.717..1963.144 rows=1109 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.165..4.165 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.51 rows=8079 width=0) (actual time=3.748..3.748 rows=8090 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.47 rows=8076 width=0) (actual time=3.636..3.636 rows=8017 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.75 rows=7904 width=0) (actual time=3.339..3.339 rows=7876 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.025..0.025 rows=30 loops=4681)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12854.42..26588.65 rows=4774 width=30) (actual time=33.082..286.352 rows=4681 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=16) (actual time=0.006..2915.032 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1683563.14 rows=60644614 width=8) (actual time=0.007..11941.386 rows=60044872 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1683563.14 rows=60644614 width=8) (actual time=0.011..7616.653 rows=60044872 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.12 rows=32 width=4) (actual time=0.021..0.040 rows=30 loops=2053)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.12 rows=32 width=4) (actual time=0.021..0.040 rows=30 loops=2053)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.49 rows=2006 width=0) (actual time=0.898..0.898 rows=2053 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.99..6643.88 rows=2006 width=4) (actual time=1.240..24.284 rows=2053 loops=1)
Q16,1.0,Sort  (cost=413587.59..413657.38 rows=27914 width=40) (actual time=11216.025..11219.447 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51033.79..51033.79 rows=297746 width=40) (actual time=1354.093..1354.093 rows=297376 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403803.53..411526.32 rows=27914 width=40) (actual time=10409.122..11155.962 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2492.29..51033.79 rows=297746 width=40) (actual time=34.813..1228.343 rows=297376 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=98588.27..1362952.21 rows=2243215 width=12) (actual time=121.515..29351.666 rows=2248039 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=98588.27..1362952.21 rows=2243215 width=12) (actual time=119.256..27554.798 rows=2248039 loops=1)
Q14,1.0,->  Hash Join  (cost=93554.18..1154648.24 rows=769188 width=29) (actual time=1432.482..20984.566 rows=749192 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8032.18..1057588.42 rows=769188 width=12) (actual time=127.756..18937.894 rows=749192 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442530.20 rows=14879619 width=8) (actual time=0.019..7838.470 rows=14852883 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..734752.48 rows=14879619 width=8) (actual time=1095.028..19337.632 rows=15352902 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=20) (actual time=0.013..4670.767 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2446478.60 rows=291628 width=15) (actual time=0.128..24377.540 rows=311266 loops=1)
Q12,1.0,->  Hash Join  (cost=598445.50..3054037.47 rows=291628 width=27) (actual time=9625.135..34351.912 rows=311266 loops=1)
Q12,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=20) (actual time=9448.785..9448.785 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.307..31.326 rows=3933 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.295..24.145 rows=3933 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.049..3975.101 rows=314640 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=32.340..4370.912 rows=314640 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=32.270..32.270 rows=3933 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.975..24.975 rows=3933 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.276..23.507 rows=3933 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.288..30.676 rows=3933 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1840003.20 rows=60043859 width=20) (actual time=0.014..22689.214 rows=59267156 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817039.60 rows=14826793 width=12) (actual time=0.011..16079.244 rows=14808323 loops=1)
Q10,1.0,->  Hash  (cost=268104.00..268104.00 rows=575921 width=8) (actual time=10471.172..10471.172 rows=567783 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5943.19..268104.00 rows=575921 width=8) (actual time=27.540..10227.690 rows=567783 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.014..0.014 rows=0 loops=399750)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1491742)
Q19,,->  BitmapOr  (cost=12854.42..12854.42 rows=4777 width=0) (actual time=29.138..29.138 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.328..0.353 rows=0 loops=4681)
Q19,,->  BitmapAnd  (cost=6263.66..6263.66 rows=2362 width=0) (actual time=8.222..8.222 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4301.02..4301.02 rows=1614 width=0) (actual time=8.689..8.689 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2289.24..2289.24 rows=801 width=0) (actual time=8.614..8.614 rows=0 loops=1)
