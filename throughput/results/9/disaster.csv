Q21,715199.0,->  Nested Loop Semi Join  (cost=2406.31..2853486.16 rows=1 width=34) (actual time=32.958..38244.394 rows=715199 loops=1)
Q3,315962.0,->  Sort  (cost=2540467.17..2548366.22 rows=3159620 width=20) (actual time=44415.091..44415.094 rows=10 loops=1)
Q18,301427.0,->  GroupAggregate  (cost=10193261.05..11022185.33 rows=30142701 width=39) (actual time=75315.660..75315.994 rows=100 loops=1)
Q18,67905.0,->  Hash Join  (cost=2186221.56..2801719.19 rows=7537460 width=39) (actual time=49370.043..55998.868 rows=111 loops=1)
Q18,67905.0,->  Hash Join  (cost=2117193.56..2619629.29 rows=7537460 width=20) (actual time=48474.181..55102.662 rows=111 loops=1)
Q18,67905.0,->  Hash  (cost=2801719.19..2801719.19 rows=7537460 width=39) (actual time=55999.090..55999.090 rows=111 loops=1)
Q18,42999.5,->  Sort  (cost=10193261.05..10268617.80 rows=30142701 width=39) (actual time=75315.649..75315.696 rows=701 loops=1)
Q21,39729.0,->  Nested Loop Anti Join  (cost=2406.88..2853487.94 rows=1 width=26) (actual time=33.436..41130.777 rows=39729 loops=1)
Q18,38793.6,->  Hash Join  (cost=2895937.44..5624522.99 rows=30142701 width=39) (actual time=56189.144..75314.529 rows=777 loops=1)
Q18,36596.0,->  Hash  (cost=2066416.58..2066416.58 rows=4062158 width=4) (actual time=48347.497..48347.497 rows=111 loops=1)
Q18,36596.0,->  HashAggregate  (cost=1975018.03..2025795.00 rows=4062158 width=8) (actual time=42045.866..48347.283 rows=111 loops=1)
Q10,27891.0,->  Sort  (cost=2285262.92..2286657.47 rows=557820 width=175) (actual time=30641.328..30641.330 rows=20 loops=1)
Q9,22857.5,->  Sort  (cost=1243017.14..1243017.49 rows=142 width=46) (actual time=103826.608..104500.979 rows=3245765 loops=1)
Q9,22857.5,->  Nested Loop  (cost=66974.74..1243007.84 rows=142 width=24) (actual time=921.506..94101.176 rows=3245765 loops=1)
Q9,22857.5,->  Nested Loop  (cost=66974.31..1242939.02 rows=142 width=24) (actual time=921.488..58658.947 rows=3245765 loops=1)
Q9,22857.5,->  Nested Loop  (cost=66974.01..1242893.20 rows=142 width=28) (actual time=921.478..47903.392 rows=3245765 loops=1)
Q9,22857.5,->  Hash Join  (cost=66976.30..1243012.06 rows=142 width=46) (actual time=921.557..97550.710 rows=3245765 loops=1)
Q2,4708.0,->  Merge Join  (cost=465687.75..898496.85 rows=1 width=190) (actual time=7013.066..9071.559 rows=4708 loops=1)
Q21,4044.0,->  HashAggregate  (cost=2853487.94..2853487.95 rows=1 width=26) (actual time=41188.053..41189.222 rows=4044 loops=1)
Q15,3805.0,->  Subquery Scan on revenue9  (cost=1823660.64..1823746.26 rows=3805 width=12) (actual time=53252.545..53258.752 rows=1 loops=1)
Q15,3805.0,->  Sort  (cost=1823972.53..1823982.04 rows=3805 width=12) (actual time=53258.773..53258.774 rows=1 loops=1)
Q15,3805.0,Merge Join  (cost=3630440.76..3635539.03 rows=3805 width=79) (actual time=53297.170..53297.172 rows=1 loops=1)
Q15,3805.0,->  HashAggregate  (cost=1823660.64..1823708.21 rows=3805 width=12) (actual time=53252.544..53258.750 rows=1 loops=1)
Q7,763.7,Sort  (cost=2149879.59..2149887.23 rows=3055 width=64) (actual time=25822.292..25822.292 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2149656.93..2149702.76 rows=3055 width=64) (actual time=25822.226..25822.235 rows=4 loops=1)
Q8,365.0,Sort  (cost=1674148.53..1674150.36 rows=730 width=38) (actual time=15265.242..15265.242 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1674101.04..1674113.81 rows=730 width=38) (actual time=15265.208..15265.209 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2853487.96..2853487.97 rows=1 width=26) (actual time=41190.358..41190.365 rows=100 loops=1)
Q21,100.0,Limit  (cost=2853487.96..2853487.97 rows=1 width=26) (actual time=41190.360..41190.379 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=898496.86..898496.87 rows=1 width=190) (actual time=9076.613..9076.632 rows=100 loops=1)
Q2,100.0,Limit  (cost=898496.86..898496.87 rows=1 width=190) (actual time=9076.615..9076.643 rows=100 loops=1)
Q11,34.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8885.956..8887.071 rows=9363 loops=1)
Q11,34.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8798.698..8880.721 rows=9363 loops=1)
Q3,27.8,->  HashAggregate  (cost=2440592.71..2472188.91 rows=3159620 width=20) (actual time=44339.813..44393.834 rows=113435 loops=1)
Q15,26.2,->  HashAggregate  (cost=1806382.31..1806420.36 rows=3805 width=12) (actual time=26525.958..26573.760 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=742139)
Q14,14.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7611.94 rows=746394 width=0) (actual time=120.728..120.728 rows=10814720 loops=1)
Q3,10.5,->  Hash Join  (cost=764348.30..2393198.41 rows=3159620 width=20) (actual time=14646.196..44056.058 rows=298754 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2411.26 rows=319900 width=0) (actual time=34.843..34.843 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.91 rows=1 width=24) (actual time=0.017..0.095 rows=7 loops=432796)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.605..3.605 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.601..3.601 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.247..0.247 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.267..0.267 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.259..0.259 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.269..0.269 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.011..0.012 rows=1 loops=1202014)
Q5,5.0,Sort  (cost=1881605.39..1881605.45 rows=25 width=34) (actual time=14707.224..14707.224 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1881604.56..1881604.81 rows=25 width=34) (actual time=14707.180..14707.181 rows=5 loops=1)
Q4,5.0,Sort  (cost=1468708.53..1468708.54 rows=1 width=16) (actual time=13781.594..13781.594 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.28 rows=5 width=4) (actual time=0.015..0.015 rows=1 loops=555219)
Q4,5.0,->  HashAggregate  (cost=1468708.51..1468708.52 rows=1 width=16) (actual time=13781.547..13781.548 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=715199)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5599.75 rows=555975 width=0) (actual time=29.639..29.639 rows=2556160 loops=1)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5689.05 rows=564905 width=0) (actual time=27.483..27.483 rows=2551040 loops=1)
Q13,4.3,Sort  (cost=843692.56..843693.06 rows=200 width=8) (actual time=32000.335..32000.339 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=843682.92..843684.92 rows=200 width=8) (actual time=32000.269..32000.278 rows=46 loops=1)
Q17,3.9,->  Nested Loop  (cost=82.84..114805.41 rows=20196 width=4) (actual time=1.781..216.510 rows=5067 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.010..0.011 rows=4 loops=457492)
Q4,3.4,->  Nested Loop Semi Join  (cost=5739.31..1467962.41 rows=149221 width=16) (actual time=29.832..13482.045 rows=509258 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.016..0.038 rows=3 loops=1951)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..244139.81 rows=32532241 width=0) (actual time=130.261..130.261 rows=10686720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.317..0.392 rows=3 loops=21499)
Q15,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..236383.19 rows=31498026 width=0) (actual time=119.465..119.465 rows=10739200 loops=1)
Q15,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..236383.19 rows=31498026 width=0) (actual time=119.320..119.320 rows=10739200 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54854.46 rows=7308595 width=0) (actual time=33.713..33.713 rows=2540800 loops=1)
Q22,2.3,Sort  (cost=695914.28..695914.29 rows=3 width=20) (actual time=9201.418..9201.419 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642995.57..642995.62 rows=3 width=20) (actual time=9201.371..9201.372 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.045..0.061 rows=2 loops=6338)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.232..4.232 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403568.20..405052.61 rows=593762 width=40) (actual time=9164.378..9349.068 rows=1188668 loops=1)
Q16,2.0,->  Hash Join  (cost=54732.22..346627.84 rows=593762 width=40) (actual time=1077.710..5369.972 rows=1188668 loops=1)
Q12,2.0,Sort  (cost=3056092.38..3056092.38 rows=1 width=27) (actual time=34984.957..34984.957 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3056092.36..3056092.37 rows=1 width=27) (actual time=34984.906..34984.906 rows=2 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1908192.93 rows=803000 width=34) (actual time=32.836..25564.043 rows=1536491 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.49..11669241.07 rows=29578 width=4) (actual time=13.302..8679.155 rows=58583 loops=1)
Q20,1.9,->  Hash  (cost=11669241.07..11669241.07 rows=29578 width=4) (actual time=8716.280..8716.280 rows=58583 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.300..2693.776 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1822476.38 rows=20074997 width=8) (actual time=0.021..18586.903 rows=37966584 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2330914.16 rows=391104 width=38) (actual time=32.930..33345.497 rows=742139 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.258 rows=56 loops=1)
Q10,1.6,->  Hash Join  (cost=345435.72..2250895.83 rows=557820 width=175) (actual time=7696.896..28710.781 rows=941654 loops=1)
Q10,1.6,->  Hash Join  (cost=345434.16..2243224.24 rows=557820 width=153) (actual time=7696.864..28374.809 rows=941654 loops=1)
Q10,1.6,->  Hash Join  (cost=276406.16..2165828.94 rows=557820 width=12) (actual time=6136.101..26223.718 rows=941654 loops=1)
Q1,1.5,Sort  (cost=4204052.19..4204052.21 rows=6 width=20) (actual time=89850.593..89850.593 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4204052.01..4204052.11 rows=6 width=20) (actual time=89850.543..89850.545 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2264841.33..2270419.53 rows=557820 width=175) (actual time=30323.321..30512.372 rows=354869 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..27529.80 rows=3665306 width=0) (actual time=28.058..28.058 rows=2574080 loops=1)
Q20,1.4,Sort  (cost=11672054.59..11672057.55 rows=1183 width=51) (actual time=8748.665..8748.765 rows=1757 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669653.80..11671994.21 rows=1183 width=51) (actual time=8716.744..8747.071 rows=1757 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.172..4.172 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.10 rows=140210 width=0) (actual time=532.146..532.146 rows=190987 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.16..41870.67 rows=140210 width=24) (actual time=540.983..988.709 rows=190987 loops=1)
Q9,1.2,GroupAggregate  (cost=1243017.14..1243022.11 rows=142 width=46) (actual time=103837.013..106689.408 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91567.82 rows=9141982 width=0) (actual time=119.433..119.433 rows=10696960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=116116 width=4) (actual time=0.016..882.217 rows=108199 loops=1)
Q9,1.0,->  Hash Join  (cost=66973.45..352576.09 rows=464464 width=16) (actual time=921.421..5733.614 rows=432796 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=116116 width=4) (actual time=920.830..920.830 rows=108199 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.683..2599.906 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.94..1626646.91 rows=116906 width=20) (actual time=6.975..12251.412 rows=120706 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.50..1437897.35 rows=385491 width=16) (actual time=6.833..6497.029 rows=396533 loops=1)
Q8,1.0,->  Nested Loop  (cost=38727.38..1673193.46 rows=23381 width=16) (actual time=2707.639..15181.084 rows=24294 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.53 rows=31 width=20) (actual time=0.036..0.476 rows=30 loops=13225)
Q8,1.0,->  Hash Join  (cost=38728.94..1673633.42 rows=23381 width=38) (actual time=2707.689..15222.249 rows=24294 loops=1)
Q8,1.0,->  Hash Join  (cost=38727.09..1665649.27 rows=23381 width=16) (actual time=2707.598..15033.095 rows=24294 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2697.457..2697.457 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..392.73 rows=12840 width=0) (actual time=4.540..4.540 rows=13225 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=395.94..27501.60 rows=12840 width=4) (actual time=6.771..49.715 rows=13225 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.636..510.421 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=8) (actual time=0.007..3213.237 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2136838.94 rows=1469122 width=42) (actual time=618.373..24999.108 rows=1461555 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2148739.85 rows=61139 width=64) (actual time=657.352..25722.104 rows=58125 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535779.34 rows=1214394 width=30) (actual time=618.347..9530.599 rows=1202014 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.040..578.464 rows=119949 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..36.687 rows=7982 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=617.827..617.827 rows=119949 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=38.915..38.915 rows=7982 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91766.73..1367125.32 rows=795629 width=8) (actual time=120.213..21632.623 rows=796405 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.681..1912.253 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=66448.60..1861614.77 rows=1844676 width=46) (actual time=2057.802..13777.494 rows=1826766 loops=1)
Q5,1.0,->  Hash Join  (cost=71127.60..1880866.70 rows=73786 width=34) (actual time=2113.429..14632.119 rows=73138 loops=1)
Q5,1.0,->  Hash Join  (cost=66448.04..392009.54 rows=461284 width=38) (actual time=2057.779..8132.947 rows=457492 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2027.078..2027.078 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=28106.40..340405.99 rows=2306421 width=8) (actual time=28.226..5009.998 rows=2278269 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.634..372.742 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5738.75..269626.37 rows=555975 width=20) (actual time=29.809..4930.656 rows=555219 loops=1)
Q3,1.0,->  Hash Join  (cost=106405.60..493810.34 rows=1461207 width=12) (actual time=783.067..13868.898 rows=1458570 loops=1)
Q3,1.0,->  Hash  (cost=493810.34..493810.34 rows=1461207 width=12) (actual time=14504.979..14504.979 rows=1458570 loops=1)
Q3,1.0,->  Hash  (cost=45975.30..45975.30 rows=299895 width=4) (actual time=746.710..746.710 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6873.64 rows=299895 width=0) (actual time=77.691..77.691 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56681.61..402067.05 rows=7308595 width=16) (actual time=33.875..10449.862 rows=7290539 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=252272.87..1727530.88 rows=32532241 width=12) (actual time=131.009..23401.057 rows=32390866 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6948.61..45975.30 rows=299895 width=4) (actual time=87.080..648.227 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.016..3655.413 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=7990.309..7990.309 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598997.09..642554.95 rows=58750 width=20) (actual time=8601.697..9174.025 rows=63515 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6554.19 rows=382291 width=0) (actual time=114.233..114.233 rows=382208 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6649.76..51962.90 rows=382291 width=4) (actual time=123.102..399.117 rows=382208 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.298..31.627 rows=4044 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.783..32.783 rows=4044 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.285..30.941 rows=4044 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7012.562..7134.956 rows=1602738 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.321..131.144 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8247 width=30) (actual time=0.098..1225.961 rows=7933 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=142.645..5850.831 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=142.503..142.503 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.261..25.390 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.308..28.913 rows=3961 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.182..9.182 rows=21499 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.292..28.313 rows=3961 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.786..223.382 rows=21499 loops=1)
Q19,1.0,->  Nested Loop  (cost=12875.70..617374.90 rows=1127 width=8) (actual time=33.557..1854.035 rows=1103 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.208..4.208 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.79 rows=8106 width=0) (actual time=3.467..3.467 rows=8083 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.99 rows=8030 width=0) (actual time=3.686..3.686 rows=8160 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.43 rows=7971 width=0) (actual time=3.589..3.589 rows=7966 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=4821)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12870.96..26694.23 rows=4814 width=30) (actual time=32.996..188.928 rows=4821 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.006..2754.678 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673591.02 rows=60285402 width=8) (actual time=0.009..9616.277 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673591.02 rows=60285402 width=8) (actual time=0.034..8084.918 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.028..0.045 rows=30 loops=1951)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.028..0.045 rows=30 loops=1951)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.57 rows=2014 width=0) (actual time=0.918..0.918 rows=1951 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.07..6668.16 rows=2014 width=4) (actual time=1.234..34.716 rows=1951 loops=1)
Q16,1.0,Sort  (cost=413323.26..413392.84 rows=27833 width=40) (actual time=10019.299..10022.874 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51004.98..51004.98 rows=296881 width=40) (actual time=1074.884..1074.884 rows=297330 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403568.20..411268.56 rows=27833 width=40) (actual time=9164.433..9959.369 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2485.48..51004.98 rows=296881 width=40) (actual time=34.911..955.079 rows=297330 loops=1)
Q15,1.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.023..28.592 rows=99984 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=236959.14..1783344.53 rows=2303778 width=12) (actual time=120.071..24263.319 rows=2245799 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=236959.14..1783344.53 rows=2303778 width=12) (actual time=120.238..24438.922 rows=2245799 loops=1)
Q14,1.0,->  Hash Join  (cost=93320.54..1142818.72 rows=746394 width=29) (actual time=1816.780..27375.355 rows=749876 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7798.54..1046100.81 rows=746394 width=12) (actual time=121.540..24855.207 rows=749876 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441649.60 rows=14775266 width=8) (actual time=0.021..7852.176 rows=14854081 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..732306.59 rows=14775266 width=8) (actual time=1557.385..20423.927 rows=15354101 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=20) (actual time=0.011..3982.706 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2444044.02 rows=291138 width=15) (actual time=0.165..24474.404 rows=313205 loops=1)
Q12,1.0,->  Hash Join  (cost=597855.36..3050997.44 rows=291138 width=27) (actual time=9805.565..34643.359 rows=313205 loops=1)
Q12,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=20) (actual time=9699.124..9699.124 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.305..31.109 rows=3995 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.303..24.016 rows=3995 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.017..3849.114 rows=319600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=32.060..4545.535 rows=319600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.953..31.953 rows=3995 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.921..24.921 rows=3995 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.276..23.377 rows=3995 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.288..30.461 rows=3995 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1832147.05 rows=59297624 width=20) (actual time=0.011..19309.399 rows=58793970 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1827911.44 rows=14915505 width=12) (actual time=0.012..16944.150 rows=14822937 loops=1)
Q10,1.0,->  Hash  (cost=269344.85..269344.85 rows=564905 width=8) (actual time=6132.680..6132.680 rows=562049 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5830.27..269344.85 rows=564905 width=8) (actual time=27.659..5927.271 rows=562049 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.014..0.014 rows=0 loops=396533)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1536491)
Q19,,->  BitmapOr  (cost=12870.96..12870.96 rows=4817 width=0) (actual time=29.163..29.163 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.307..0.340 rows=0 loops=4821)
Q19,,->  BitmapAnd  (cost=6281.72..6281.72 rows=2422 width=0) (actual time=8.325..8.325 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4300.52..4300.52 rows=1604 width=0) (actual time=8.642..8.642 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.22..2288.22 rows=791 width=0) (actual time=8.580..8.580 rows=0 loops=1)
