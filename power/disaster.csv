Q21,709851.0,->  Nested Loop Semi Join  (cost=2406.31..2844929.13 rows=1 width=34) (actual time=39.246..39264.529 rows=709851 loops=1)
Q18,357412.6,->  GroupAggregate  (cost=10152814.23..10978437.49 rows=30022664 width=39) (actual time=72208.286..72208.559 rows=84 loops=1)
Q3,315711.7,->  Sort  (cost=2532955.54..2540848.33 rows=3157117 width=20) (actual time=45405.891..45405.893 rows=10 loops=1)
Q18,89374.9,->  Hash Join  (cost=2178356.45..2791568.44 rows=7507492 width=39) (actual time=45745.124..53041.065 rows=84 loops=1)
Q18,89374.9,->  Hash Join  (cost=2109328.45..2609928.06 rows=7507492 width=20) (actual time=44539.362..51835.038 rows=84 loops=1)
Q18,89374.9,->  Hash  (cost=2791568.44..2791568.44 rows=7507492 width=39) (actual time=53041.295..53041.295 rows=84 loops=1)
Q18,51058.9,->  Sort  (cost=10152814.23..10227870.89 rows=30022664 width=39) (actual time=72208.274..72208.316 rows=588 loops=1)
Q18,51058.9,->  Hash Join  (cost=2885412.09..5603131.61 rows=30022664 width=39) (actual time=53493.522..72207.379 rows=588 loops=1)
Q18,48359.0,->  Hash  (cost=2058551.48..2058551.48 rows=4062158 width=4) (actual time=44357.642..44357.642 rows=84 loops=1)
Q18,48359.0,->  HashAggregate  (cost=1967152.92..2017929.90 rows=4062158 width=8) (actual time=38897.480..44357.340 rows=84 loops=1)
Q21,39972.0,->  Nested Loop Anti Join  (cost=2406.88..2844930.92 rows=1 width=26) (actual time=42.664..42085.230 rows=39972 loops=1)
Q10,27573.4,->  Sort  (cost=2271659.07..2273037.74 rows=551469 width=175) (actual time=35387.709..35387.710 rows=20 loops=1)
Q9,26068.5,->  Sort  (cost=1138239.12..1138239.44 rows=126 width=46) (actual time=87764.907..88343.575 rows=3284642 loops=1)
Q9,26068.5,->  Nested Loop  (cost=66824.59..1138230.80 rows=126 width=24) (actual time=597.899..78747.476 rows=3284642 loops=1)
Q9,26068.5,->  Nested Loop  (cost=66824.16..1138169.74 rows=126 width=24) (actual time=597.807..49276.890 rows=3284642 loops=1)
Q9,26068.5,->  Nested Loop  (cost=66823.87..1138129.08 rows=126 width=28) (actual time=597.796..39229.307 rows=3284642 loops=1)
Q9,26068.5,->  Hash Join  (cost=66826.15..1138234.73 rows=126 width=46) (actual time=597.961..81922.571 rows=3284642 loops=1)
Q2,4685.0,->  Merge Join  (cost=465687.75..884964.40 rows=1 width=190) (actual time=6104.813..8028.436 rows=4685 loops=1)
Q21,4023.0,->  HashAggregate  (cost=2844930.92..2844930.93 rows=1 width=26) (actual time=42144.328..42145.399 rows=4023 loops=1)
Q15,3709.0,->  Subquery Scan on revenue0  (cost=1570100.44..1570183.89 rows=3709 width=12) (actual time=54743.890..54762.271 rows=1 loops=1)
Q15,3709.0,->  Sort  (cost=1570403.78..1570413.05 rows=3709 width=12) (actual time=54762.290..54762.291 rows=1 loops=1)
Q15,3709.0,Merge Join  (cost=3123859.03..3128955.87 rows=3709 width=79) (actual time=54792.414..54792.416 rows=1 loops=1)
Q15,3709.0,->  HashAggregate  (cost=1570100.44..1570146.80 rows=3709 width=12) (actual time=54743.889..54762.268 rows=1 loops=1)
Q7,763.7,Sort  (cost=2114712.15..2114719.79 rows=3055 width=64) (actual time=23589.711..23589.712 rows=4 loops=1)
Q7,763.7,->  HashAggregate  (cost=2114489.49..2114535.31 rows=3055 width=64) (actual time=23589.636..23589.643 rows=4 loops=1)
Q8,365.0,Sort  (cost=1730659.10..1730660.93 rows=730 width=38) (actual time=12888.850..12888.850 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1730611.61..1730624.38 rows=730 width=38) (actual time=12888.805..12888.805 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2844930.94..2844930.95 rows=1 width=26) (actual time=42146.584..42146.591 rows=100 loops=1)
Q21,100.0,Limit  (cost=2844930.94..2844930.95 rows=1 width=26) (actual time=42146.586..42146.603 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=884964.41..884964.42 rows=1 width=190) (actual time=8033.192..8033.205 rows=100 loops=1)
Q2,100.0,Limit  (cost=884964.41..884964.42 rows=1 width=190) (actual time=8033.193..8033.217 rows=100 loops=1)
Q11,34.8,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6856.106..6857.348 rows=9181 loops=1)
Q11,34.8,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6778.237..6850.861 rows=9181 loops=1)
Q3,27.6,->  HashAggregate  (cost=2433160.21..2464731.38 rows=3157117 width=20) (actual time=45346.740..45384.723 rows=114160 loops=1)
Q15,26.9,->  HashAggregate  (cost=1553371.50..1553408.59 rows=3709 width=12) (actual time=25185.613..25210.526 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=736525)
Q14,14.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7312.76 rows=716476 width=0) (actual time=117.555..117.555 rows=10664960 loops=1)
Q3,10.4,->  Hash Join  (cost=762876.40..2385803.45 rows=3157117 width=20) (actual time=7713.013..45034.634 rows=302194 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2407.91 rows=319453 width=0) (actual time=34.609..34.609 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.076 rows=8 loops=437544)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.600..3.600 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.630..3.630 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.276..0.276 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.245..0.245 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1955930.54..1955930.60 rows=25 width=34) (actual time=16444.952..16444.953 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1955929.71..1955929.96 rows=25 width=34) (actual time=16444.910..16444.910 rows=5 loops=1)
Q4,5.0,Sort  (cost=1466383.02..1466383.02 rows=1 width=16) (actual time=14558.413..14558.413 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.21 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=561659)
Q4,5.0,->  HashAggregate  (cost=1466383.00..1466383.01 rows=1 width=16) (actual time=14558.322..14558.323 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=709851)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5624.69 rows=558469 width=0) (actual time=27.855..27.855 rows=2535680 loops=1)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5624.69 rows=558469 width=0) (actual time=27.545..27.545 rows=2535680 loops=1)
Q13,4.2,Sort  (cost=843859.30..843859.80 rows=200 width=8) (actual time=28866.423..28866.425 rows=47 loops=1)
Q13,4.2,->  HashAggregate  (cost=843849.66..843851.66 rows=200 width=8) (actual time=28866.340..28866.347 rows=47 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1205677)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=456109)
Q17,3.7,->  Nested Loop  (cost=83.20..116827.72 rows=20515 width=4) (actual time=1.502..187.486 rows=5481 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5764.87..1465627.56 rows=151088 width=16) (actual time=28.076..14255.334 rows=515080 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.012..0.027 rows=3 loops=1956)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..61312.87 rows=8169716 width=0) (actual time=27.379..27.379 rows=2535680 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..242401.64 rows=32300485 width=0) (actual time=118.648..118.648 rows=10664960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.280..0.350 rows=3 loops=21738)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55067.50 rows=7337000 width=0) (actual time=27.425..27.425 rows=2535680 loops=1)
Q22,2.3,Sort  (cost=691104.71..691104.72 rows=3 width=20) (actual time=9103.344..9103.345 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=638234.47..638234.51 rows=3 width=20) (actual time=9103.286..9103.288 rows=7 loops=1)
Q20,2.1,->  Nested Loop  (cost=677.99..10613880.63 rows=26889 width=4) (actual time=12.693..8221.133 rows=58968 loops=1)
Q20,2.1,->  Hash  (cost=10613880.63..10613880.63 rows=26889 width=4) (actual time=8258.243..8258.243 rows=58968 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.049 rows=2 loops=6342)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1996.13 rows=198413 width=0) (actual time=4.165..4.165 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403481.03..404963.92 rows=593154 width=40) (actual time=10098.897..10255.474 rows=1187340 loops=1)
Q16,2.0,->  Hash Join  (cost=54713.82..346603.36 rows=593154 width=40) (actual time=1473.374..6826.945 rows=1187340 loops=1)
Q12,2.0,Sort  (cost=3022947.18..3022947.18 rows=1 width=27) (actual time=36272.955..36272.955 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3022947.16..3022947.17 rows=1 width=27) (actual time=36272.899..36272.899 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=343673.76..2237683.26 rows=551469 width=175) (actual time=11342.338..33136.703 rows=1110626 loops=1)
Q10,2.0,->  Hash Join  (cost=343672.20..2230099.00 rows=551469 width=153) (actual time=11342.311..32753.136 rows=1110626 loops=1)
Q10,2.0,->  Hash Join  (cost=274644.20..2152798.96 rows=551469 width=12) (actual time=9642.847..30242.526 rows=1110626 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902507.61 rows=800604 width=34) (actual time=39.081..26309.165 rows=1524618 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.511..3754.453 rows=7995520 loops=1)
Q15,1.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..154777.20 rows=20617227 width=0) (actual time=118.812..118.812 rows=10664960 loops=1)
Q15,1.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..154777.20 rows=20617227 width=0) (actual time=118.533..118.533 rows=10664960 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817039.60 rows=20015109 width=8) (actual time=0.004..20351.737 rows=37967116 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323947.56 rows=389937 width=38) (actual time=39.230..34237.396 rows=736525 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.032..0.464 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616652.75..10616655.44 rows=1076 width=51) (actual time=8288.101..8288.203 rows=1787 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10614259.74..10616598.56 rows=1076 width=51) (actual time=8258.688..8285.969 rows=1787 loops=1)
Q15,1.6,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.025..24.035 rows=60982 loops=1)
Q1,1.5,Sort  (cost=4178808.74..4178808.76 rows=6 width=20) (actual time=89030.400..89030.401 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4178808.56..4178808.67 rows=6 width=20) (actual time=89030.343..89030.345 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5988.27 rows=597627 width=0) (actual time=4.132..4.132 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2251469.98..2256984.67 rows=551469 width=175) (actual time=34988.966..35250.473 rows=372215 loops=1)
Q9,1.3,GroupAggregate  (cost=1138239.12..1138243.53 rows=126 width=46) (actual time=87775.460..90561.995 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.20 rows=139723 width=0) (actual time=446.499..446.499 rows=190594 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2907.13..41852.86 rows=139723 width=24) (actual time=454.588..567.718 rows=190594 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.55 rows=18000 width=0) (actual time=8.638..8.638 rows=21738 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91364.11 rows=9121611 width=0) (actual time=118.556..118.556 rows=10664960 loops=1)
Q18,1.1,Limit  (cost=10152814.23..10152816.98 rows=100 width=39) (actual time=72208.289..72208.569 rows=84 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=104104 width=4) (actual time=0.009..564.639 rows=109386 loops=1)
Q9,1.0,->  Hash Join  (cost=66823.30..351945.46 rows=416416 width=16) (actual time=597.722..4716.997 rows=437544 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=104104 width=4) (actual time=597.269..597.269 rows=109386 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.696..2094.933 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.21..1682773.57 rows=121823 width=20) (actual time=7.075..10360.431 rows=121627 loops=1)
Q8,1.0,->  Nested Loop  (cost=420.77..1486086.06 rows=401703 width=16) (actual time=6.999..5614.051 rows=401080 loops=1)
Q8,1.0,->  Nested Loop  (cost=38751.65..1729665.90 rows=24365 width=16) (actual time=2200.059..12805.495 rows=24033 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.21..1730124.31 rows=24365 width=38) (actual time=2200.112..12846.208 rows=24033 loops=1)
Q8,1.0,->  Hash Join  (cost=38751.35..1721804.21 rows=24365 width=16) (actual time=2200.009..12627.383 rows=24033 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2189.768..2189.768 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..412.78 rows=13380 width=0) (actual time=4.679..4.679 rows=13364 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=13364)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.12..28180.29 rows=13380 width=4) (actual time=6.934..280.603 rows=13364 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.040..0.384 rows=30 loops=13364)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.634..409.833 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.005..3341.299 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2101770.17 rows=1453162 width=42) (actual time=610.072..22897.115 rows=1467254 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2113582.36 rows=60475 width=64) (actual time=650.144..23496.825 rows=58118 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..530594.42 rows=1201199 width=30) (actual time=609.977..8749.955 rows=1205677 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..571.984 rows=120071 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.040..37.957 rows=7992 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=609.419..609.419 rows=120071 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.952..39.952 rows=7992 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91464.79..1363174.04 rows=402751 width=8) (actual time=119.355..27385.014 rows=396867 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.831..2277.105 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=100223.76..1936149.91 rows=1819375 width=46) (actual time=2419.403..15577.696 rows=1824150 loops=1)
Q5,1.0,->  Hash Join  (cost=104902.76..1955201.97 rows=72774 width=34) (actual time=2490.025..16356.459 rows=72710 loops=1)
Q5,1.0,->  Hash Join  (cost=100223.20..489370.87 rows=454954 width=38) (actual time=2419.380..7988.100 rows=456109 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2389.781..2389.781 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=61881.56..437949.30 rows=2274772 width=8) (actual time=27.555..4657.487 rows=2277830 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.687..445.058 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5764.30..267663.34 rows=558469 width=20) (actual time=28.038..4595.446 rows=561659 loops=1)
Q3,1.0,->  Hash Join  (cost=106630.48..494054.69 rows=1467596 width=12) (actual time=382.305..7107.992 rows=1470923 loops=1)
Q3,1.0,->  Hash  (cost=494054.69..494054.69 rows=1467596 width=12) (actual time=7586.849..7586.849 rows=1470923 loops=1)
Q3,1.0,->  Hash  (cost=45978.24..45978.24 rows=300040 width=4) (actual time=352.639..352.639 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6874.73 rows=300040 width=0) (actual time=63.794..63.794 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56901.75..402136.25 rows=7337000 width=16) (actual time=27.597..4558.060 rows=7334454 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=250476.76..1720705.82 rows=32300485 width=12) (actual time=119.402..31897.918 rows=32215897 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6949.74..45978.24 rows=300040 width=4) (actual time=71.718..280.608 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=4) (actual time=0.016..3527.007 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=4) (actual time=8313.243..8313.243 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=594266.27..637795.37 rows=58546 width=20) (actual time=8855.825..9081.646 rows=63736 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6544.21 rows=380964 width=0) (actual time=71.267..71.267 rows=381472 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6639.45..51917.76 rows=380964 width=4) (actual time=78.995..322.789 rows=381472 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.304..37.932 rows=4023 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=39.037..39.037 rows=4023 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.290..37.269 rows=4023 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6104.324..6242.819 rows=1602616 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.403..181.177 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7901 width=30) (actual time=0.203..1125.357 rows=7953 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=193.248..5034.280 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=193.104..193.104 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.275..35.300 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.300..26.441 rows=3973 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.279..25.814 rows=3973 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.56..33178.47 rows=20020 width=4) (actual time=12.223..564.736 rows=21738 loops=1)
Q19,1.0,->  Nested Loop  (cost=12875.64..615744.52 rows=1117 width=8) (actual time=31.493..1611.088 rows=1186 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4007.87 rows=399587 width=0) (actual time=4.139..4.139 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.11 rows=8040 width=0) (actual time=3.218..3.218 rows=8147 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.03 rows=8034 width=0) (actual time=3.491..3.491 rows=8186 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.03 rows=8031 width=0) (actual time=3.429..3.429 rows=8078 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4955)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12870.90..26666.19 rows=4801 width=30) (actual time=30.836..284.795 rows=4955 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.005..3652.176 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666926.28 rows=60045328 width=8) (actual time=0.004..7863.146 rows=60045669 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666926.28 rows=60045328 width=8) (actual time=0.005..7864.126 rows=60045669 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.036 rows=30 loops=1956)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.036 rows=30 loops=1956)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.93 rows=2050 width=0) (actual time=0.882..0.882 rows=1956 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.44..6771.22 rows=2050 width=4) (actual time=1.206..49.123 rows=1956 loops=1)
Q16,1.0,Sort  (cost=413225.94..413295.46 rows=27805 width=40) (actual time=10917.249..10919.062 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50990.38..50990.38 rows=296577 width=40) (actual time=1470.914..1470.914 rows=297012 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403481.03..411173.51 rows=27805 width=40) (actual time=10098.963..10857.558 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2482.05..50990.38 rows=296577 width=40) (actual time=34.654..1341.328 rows=297012 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=155334.83..1531066.24 rows=2230526 width=12) (actual time=119.573..22949.784 rows=2245864 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=155334.83..1531066.24 rows=2230526 width=12) (actual time=119.282..27202.026 rows=2245864 loops=1)
Q14,1.0,->  Hash Join  (cost=93013.88..1118797.73 rows=716476 width=29) (actual time=1541.074..41312.952 rows=722519 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7491.88..1022528.59 rows=716476 width=12) (actual time=118.354..38918.565 rows=722519 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=14805618 width=8) (actual time=0.018..6978.995 rows=14853742 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..732321.57 rows=14805618 width=8) (actual time=873.908..17553.614 rows=15353766 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=20) (actual time=0.007..4921.352 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2417492.88 rows=289131 width=15) (actual time=0.093..25050.308 rows=312698 loops=1)
Q12,1.0,->  Hash Join  (cost=591359.14..3017887.36 rows=289131 width=27) (actual time=10467.123..35950.469 rows=312698 loops=1)
Q12,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=20) (actual time=10398.196..10398.196 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.303..45.539 rows=4023 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.303..23.968 rows=4023 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.873..2426.456 rows=321840 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=46.734..4015.607 rows=321840 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=46.686..46.686 rows=4023 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.801..24.801 rows=4023 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.271..23.278 rows=4023 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.286..44.583 rows=4023 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817039.60 rows=59044224 width=20) (actual time=0.026..18185.224 rows=59086028 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817039.60 rows=14826793 width=12) (actual time=0.010..17260.007 rows=14822992 loops=1)
Q10,1.0,->  Hash  (cost=267663.34..267663.34 rows=558469 width=8) (actual time=9637.393..9637.393 rows=554821 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5764.30..267663.34 rows=558469 width=8) (actual time=27.784..9341.573 rows=554821 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=401080)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1524618)
Q19,,->  BitmapOr  (cost=12870.90..12870.90 rows=4804 width=0) (actual time=27.102..27.102 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.244..0.263 rows=0 loops=4955)
Q19,,->  BitmapAnd  (cost=6281.03..6281.03 rows=2402 width=0) (actual time=7.942..7.942 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4300.55..4300.55 rows=1605 width=0) (actual time=8.219..8.219 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.82..2288.82 rows=797 width=0) (actual time=8.177..8.177 rows=0 loops=1)
